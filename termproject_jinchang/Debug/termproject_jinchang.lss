
termproject_jinchang.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000db0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d3c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  00000db0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000de0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00000e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014f3  00000000  00000000  00000f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa9  00000000  00000000  0000242f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000085a  00000000  00000000  00002ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00003734  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b63  00000000  00000000  00003a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000681  00000000  00000000  00004577  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00004bf8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
   2:	00 00       	nop
   4:	95 c0       	rjmp	.+298    	; 0x130 <__vector_1>
   6:	00 00       	nop
   8:	9e c0       	rjmp	.+316    	; 0x146 <__vector_2>
   a:	00 00       	nop
   c:	aa c0       	rjmp	.+340    	; 0x162 <__vector_3>
   e:	00 00       	nop
  10:	8e c0       	rjmp	.+284    	; 0x12e <__bad_interrupt>
  12:	00 00       	nop
  14:	8c c0       	rjmp	.+280    	; 0x12e <__bad_interrupt>
  16:	00 00       	nop
  18:	8a c0       	rjmp	.+276    	; 0x12e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	88 c0       	rjmp	.+272    	; 0x12e <__bad_interrupt>
  1e:	00 00       	nop
  20:	86 c0       	rjmp	.+268    	; 0x12e <__bad_interrupt>
  22:	00 00       	nop
  24:	84 c0       	rjmp	.+264    	; 0x12e <__bad_interrupt>
  26:	00 00       	nop
  28:	82 c0       	rjmp	.+260    	; 0x12e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	80 c0       	rjmp	.+256    	; 0x12e <__bad_interrupt>
  2e:	00 00       	nop
  30:	7e c0       	rjmp	.+252    	; 0x12e <__bad_interrupt>
  32:	00 00       	nop
  34:	7c c0       	rjmp	.+248    	; 0x12e <__bad_interrupt>
  36:	00 00       	nop
  38:	7a c0       	rjmp	.+244    	; 0x12e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	78 c0       	rjmp	.+240    	; 0x12e <__bad_interrupt>
  3e:	00 00       	nop
  40:	76 c0       	rjmp	.+236    	; 0x12e <__bad_interrupt>
  42:	00 00       	nop
  44:	74 c0       	rjmp	.+232    	; 0x12e <__bad_interrupt>
  46:	00 00       	nop
  48:	72 c0       	rjmp	.+228    	; 0x12e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	70 c0       	rjmp	.+224    	; 0x12e <__bad_interrupt>
  4e:	00 00       	nop
  50:	6e c0       	rjmp	.+220    	; 0x12e <__bad_interrupt>
  52:	00 00       	nop
  54:	6c c0       	rjmp	.+216    	; 0x12e <__bad_interrupt>
  56:	00 00       	nop
  58:	6a c0       	rjmp	.+212    	; 0x12e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	68 c0       	rjmp	.+208    	; 0x12e <__bad_interrupt>
  5e:	00 00       	nop
  60:	66 c0       	rjmp	.+204    	; 0x12e <__bad_interrupt>
  62:	00 00       	nop
  64:	64 c0       	rjmp	.+200    	; 0x12e <__bad_interrupt>
  66:	00 00       	nop
  68:	62 c0       	rjmp	.+196    	; 0x12e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	60 c0       	rjmp	.+192    	; 0x12e <__bad_interrupt>
  6e:	00 00       	nop
  70:	5e c0       	rjmp	.+188    	; 0x12e <__bad_interrupt>
  72:	00 00       	nop
  74:	c8 c0       	rjmp	.+400    	; 0x206 <__vector_29>
  76:	00 00       	nop
  78:	5a c0       	rjmp	.+180    	; 0x12e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	58 c0       	rjmp	.+176    	; 0x12e <__bad_interrupt>
  7e:	00 00       	nop
  80:	56 c0       	rjmp	.+172    	; 0x12e <__bad_interrupt>
  82:	00 00       	nop
  84:	54 c0       	rjmp	.+168    	; 0x12e <__bad_interrupt>
  86:	00 00       	nop
  88:	52 c0       	rjmp	.+164    	; 0x12e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	08 00       	.word	0x0008	; ????
  8e:	00 00       	nop
  90:	be 92       	st	-X, r11
  92:	24 49       	sbci	r18, 0x94	; 148
  94:	12 3e       	cpi	r17, 0xE2	; 226
  96:	ab aa       	std	Y+51, r10	; 0x33
  98:	aa 2a       	or	r10, r26
  9a:	be cd       	rjmp	.-1156   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
  9c:	cc cc       	rjmp	.-1640   	; 0xfffffa36 <__eeprom_end+0xff7efa36>
  9e:	4c 3e       	cpi	r20, 0xEC	; 236
  a0:	00 00       	nop
  a2:	00 80       	ld	r0, Z
  a4:	be ab       	std	Y+54, r27	; 0x36
  a6:	aa aa       	std	Y+50, r10	; 0x32
  a8:	aa 3e       	cpi	r26, 0xEA	; 234
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	bf 00       	.word	0x00bf	; ????
  b0:	00 00       	nop
  b2:	80 3f       	cpi	r24, 0xF0	; 240
  b4:	00 00       	nop
  b6:	00 00       	nop
  b8:	00 08       	sbc	r0, r0
  ba:	41 78       	andi	r20, 0x81	; 129
  bc:	d3 bb       	out	0x13, r29	; 19
  be:	43 87       	std	Z+11, r20	; 0x0b
  c0:	d1 13       	cpse	r29, r17
  c2:	3d 19       	sub	r19, r13
  c4:	0e 3c       	cpi	r16, 0xCE	; 206
  c6:	c3 bd       	out	0x23, r28	; 35
  c8:	42 82       	std	Z+2, r4	; 0x02
  ca:	ad 2b       	or	r26, r29
  cc:	3e 68       	ori	r19, 0x8E	; 142
  ce:	ec 82       	std	Y+4, r14	; 0x04
  d0:	76 be       	out	0x36, r7	; 54
  d2:	d9 8f       	std	Y+25, r29	; 0x19
  d4:	e1 a9       	ldd	r30, Z+49	; 0x31
  d6:	3e 4c       	sbci	r19, 0xCE	; 206
  d8:	80 ef       	ldi	r24, 0xF0	; 240
  da:	ff be       	out	0x3f, r15	; 63
  dc:	01 c4       	rjmp	.+2050   	; 0x8e0 <__fp_splitA+0x24>
  de:	ff 7f       	andi	r31, 0xFF	; 255
  e0:	3f 00       	.word	0x003f	; ????
  e2:	00 00       	nop
  e4:	00 00       	nop
  e6:	07 63       	ori	r16, 0x37	; 55
  e8:	42 36       	cpi	r20, 0x62	; 98
  ea:	b7 9b       	sbis	0x16, 7	; 22
  ec:	d8 a7       	std	Y+40, r29	; 0x28
  ee:	1a 39       	cpi	r17, 0x9A	; 154
  f0:	68 56       	subi	r22, 0x68	; 104
  f2:	18 ae       	std	Y+56, r1	; 0x38
  f4:	ba ab       	std	Y+50, r27	; 0x32
  f6:	55 8c       	ldd	r5, Z+29	; 0x1d
  f8:	1d 3c       	cpi	r17, 0xCD	; 205
  fa:	b7 cc       	rjmp	.-1682   	; 0xfffffa6a <__eeprom_end+0xff7efa6a>
  fc:	57 63       	ori	r21, 0x37	; 55
  fe:	bd 6d       	ori	r27, 0xDD	; 221
 100:	ed fd       	.word	0xfded	; ????
 102:	75 3e       	cpi	r23, 0xE5	; 229
 104:	f6 17       	cp	r31, r22
 106:	72 31       	cpi	r23, 0x12	; 18
 108:	bf 00       	.word	0x00bf	; ????
 10a:	00 00       	nop
 10c:	80 3f       	cpi	r24, 0xF0	; 240

0000010e <__ctors_end>:
 10e:	11 24       	eor	r1, r1
 110:	1f be       	out	0x3f, r1	; 63
 112:	cf ef       	ldi	r28, 0xFF	; 255
 114:	d0 e1       	ldi	r29, 0x10	; 16
 116:	de bf       	out	0x3e, r29	; 62
 118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_clear_bss>:
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	a0 e0       	ldi	r26, 0x00	; 0
 11e:	b1 e0       	ldi	r27, 0x01	; 1
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	aa 30       	cpi	r26, 0x0A	; 10
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	d7 d0       	rcall	.+430    	; 0x2da <main>
 12c:	05 c6       	rjmp	.+3082   	; 0xd38 <_exit>

0000012e <__bad_interrupt>:
 12e:	68 cf       	rjmp	.-304    	; 0x0 <__vectors>

00000130 <__vector_1>:
int g_cnt = 0; // adc 천천히 받게하려고 한 변수
int g_ADC[8] = {0,}; //adc 전역변수
double u_end = 0;
double u_distance = 0;

ISR(INT0_vect){
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
	
	PORTA = 0x00;
 13a:	1b ba       	out	0x1b, r1	; 27
}
 13c:	0f 90       	pop	r0
 13e:	0f be       	out	0x3f, r0	; 63
 140:	0f 90       	pop	r0
 142:	1f 90       	pop	r1
 144:	18 95       	reti

00000146 <__vector_2>:


ISR(INT1_vect){
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	8f 93       	push	r24

	PORTA = 0xFF;	
 152:	8f ef       	ldi	r24, 0xFF	; 255
 154:	8b bb       	out	0x1b, r24	; 27
}
 156:	8f 91       	pop	r24
 158:	0f 90       	pop	r0
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	0f 90       	pop	r0
 15e:	1f 90       	pop	r1
 160:	18 95       	reti

00000162 <__vector_3>:

ISR(INT2_vect){
 162:	1f 92       	push	r1
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	0b b6       	in	r0, 0x3b	; 59
 16e:	0f 92       	push	r0
 170:	2f 93       	push	r18
 172:	3f 93       	push	r19
 174:	4f 93       	push	r20
 176:	5f 93       	push	r21
 178:	6f 93       	push	r22
 17a:	7f 93       	push	r23
 17c:	8f 93       	push	r24
 17e:	9f 93       	push	r25
 180:	af 93       	push	r26
 182:	bf 93       	push	r27
 184:	ef 93       	push	r30
 186:	ff 93       	push	r31
	if ((EICRA & 0b00110000) == 0b00100000)//falling //TCNT1당 0.064ms 34 cm/ms
 188:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 18c:	80 73       	andi	r24, 0x30	; 48
 18e:	80 32       	cpi	r24, 0x20	; 32
 190:	01 f5       	brne	.+64     	; 0x1d2 <__vector_3+0x70>
	{
		u_end=TCNT2;
 192:	64 b5       	in	r22, 0x24	; 36
 194:	70 e0       	ldi	r23, 0x00	; 0
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	23 d3       	rcall	.+1606   	; 0x7e2 <__floatunsisf>
 19c:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <u_end>
 1a0:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <u_end+0x1>
 1a4:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <u_end+0x2>
 1a8:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <u_end+0x3>
		u_distance= u_end* 2.176;
 1ac:	26 e9       	ldi	r18, 0x96	; 150
 1ae:	33 e4       	ldi	r19, 0x43	; 67
 1b0:	4b e0       	ldi	r20, 0x0B	; 11
 1b2:	50 e4       	ldi	r21, 0x40	; 64
 1b4:	f3 d3       	rcall	.+2022   	; 0x99c <__mulsf3>
 1b6:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 1ba:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 1be:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 1c2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
		EICRA = (EICRA &0b11001111)| 0b00110000;//라이징으로 바꿈
 1c6:	ea e6       	ldi	r30, 0x6A	; 106
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	80 63       	ori	r24, 0x30	; 48
 1ce:	80 83       	st	Z, r24
 1d0:	07 c0       	rjmp	.+14     	; 0x1e0 <__vector_3+0x7e>
	}

	else//rising일때
	{
		TCNT2 = 0;
 1d2:	14 bc       	out	0x24, r1	; 36
		EICRA =(EICRA &0b11001111)| 0b00100000;//폴링으로 바꿈
 1d4:	ea e6       	ldi	r30, 0x6A	; 106
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	8f 7c       	andi	r24, 0xCF	; 207
 1dc:	80 62       	ori	r24, 0x20	; 32
 1de:	80 83       	st	Z, r24
	}
}
 1e0:	ff 91       	pop	r31
 1e2:	ef 91       	pop	r30
 1e4:	bf 91       	pop	r27
 1e6:	af 91       	pop	r26
 1e8:	9f 91       	pop	r25
 1ea:	8f 91       	pop	r24
 1ec:	7f 91       	pop	r23
 1ee:	6f 91       	pop	r22
 1f0:	5f 91       	pop	r21
 1f2:	4f 91       	pop	r20
 1f4:	3f 91       	pop	r19
 1f6:	2f 91       	pop	r18
 1f8:	0f 90       	pop	r0
 1fa:	0b be       	out	0x3b, r0	; 59
 1fc:	0f 90       	pop	r0
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	0f 90       	pop	r0
 202:	1f 90       	pop	r1
 204:	18 95       	reti

00000206 <__vector_29>:

//제어주기 : 20ms
ISR(TIMER3_OVF_vect){
 206:	1f 92       	push	r1
 208:	0f 92       	push	r0
 20a:	0f b6       	in	r0, 0x3f	; 63
 20c:	0f 92       	push	r0
 20e:	11 24       	eor	r1, r1
 210:	0b b6       	in	r0, 0x3b	; 59
 212:	0f 92       	push	r0
 214:	2f 93       	push	r18
 216:	3f 93       	push	r19
 218:	4f 93       	push	r20
 21a:	5f 93       	push	r21
 21c:	6f 93       	push	r22
 21e:	7f 93       	push	r23
 220:	8f 93       	push	r24
 222:	9f 93       	push	r25
 224:	af 93       	push	r26
 226:	bf 93       	push	r27
 228:	ef 93       	push	r30
 22a:	ff 93       	push	r31
	
	TCNT3 = 64285; // Bottom 설정
 22c:	8d e1       	ldi	r24, 0x1D	; 29
 22e:	9b ef       	ldi	r25, 0xFB	; 251
 230:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 234:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	g_cnt++;
 238:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <g_cnt>
 23c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <g_cnt+0x1>
 240:	01 96       	adiw	r24, 0x01	; 1
 242:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <g_cnt+0x1>
 246:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <g_cnt>

	//0.5초에 한번씩 실행
	if(g_cnt>25)
 24a:	4a 97       	sbiw	r24, 0x1a	; 26
 24c:	0c f4       	brge	.+2      	; 0x250 <__vector_29+0x4a>
 24e:	2c c0       	rjmp	.+88     	; 0x2a8 <__vector_29+0xa2>
	{

		TransNumUart0(GetResistor()); TransUart1(','); TransUart1(' ');		
 250:	fe d0       	rcall	.+508    	; 0x44e <GetResistor>
 252:	b5 d0       	rcall	.+362    	; 0x3be <TransNumUart0>
 254:	8c e2       	ldi	r24, 0x2C	; 44
 256:	ab d0       	rcall	.+342    	; 0x3ae <TransUart1>
 258:	80 e2       	ldi	r24, 0x20	; 32
 25a:	a9 d0       	rcall	.+338    	; 0x3ae <TransUart1>
		TransNumUart1(GetCDS()); TransUart1(','); TransUart1(' ');
 25c:	0c d1       	rcall	.+536    	; 0x476 <GetCDS>
 25e:	d3 d0       	rcall	.+422    	; 0x406 <TransNumUart1>
 260:	8c e2       	ldi	r24, 0x2C	; 44
 262:	a5 d0       	rcall	.+330    	; 0x3ae <TransUart1>
 264:	80 e2       	ldi	r24, 0x20	; 32
 266:	a3 d0       	rcall	.+326    	; 0x3ae <TransUart1>
		TransNumUart1(GetLM35()); TransUart1(','); TransUart1(' ');
 268:	3a d1       	rcall	.+628    	; 0x4de <GetLM35>
 26a:	cd d0       	rcall	.+410    	; 0x406 <TransNumUart1>
 26c:	8c e2       	ldi	r24, 0x2C	; 44
 26e:	9f d0       	rcall	.+318    	; 0x3ae <TransUart1>
 270:	80 e2       	ldi	r24, 0x20	; 32
 272:	9d d0       	rcall	.+314    	; 0x3ae <TransUart1>
		TransNumUart1(GetTHEMISTER()); TransUart1(','); TransUart1(' ');
 274:	48 d1       	rcall	.+656    	; 0x506 <GetTHEMISTER>
 276:	c7 d0       	rcall	.+398    	; 0x406 <TransNumUart1>
 278:	8c e2       	ldi	r24, 0x2C	; 44
 27a:	99 d0       	rcall	.+306    	; 0x3ae <TransUart1>
 27c:	80 e2       	ldi	r24, 0x20	; 32
 27e:	97 d0       	rcall	.+302    	; 0x3ae <TransUart1>
		TransNumUart1(GetGAS()); TransUart1(','); TransUart1(' ');
 280:	7e d1       	rcall	.+764    	; 0x57e <GetGAS>
 282:	c1 d0       	rcall	.+386    	; 0x406 <TransNumUart1>
 284:	8c e2       	ldi	r24, 0x2C	; 44
 286:	93 d0       	rcall	.+294    	; 0x3ae <TransUart1>
 288:	80 e2       	ldi	r24, 0x20	; 32
 28a:	91 d0       	rcall	.+290    	; 0x3ae <TransUart1>
 28c:	7b d1       	rcall	.+758    	; 0x584 <GetPOWER>
 28e:	bb d0       	rcall	.+374    	; 0x406 <TransNumUart1>
 290:	8c e2       	ldi	r24, 0x2C	; 44
 292:	8d d0       	rcall	.+282    	; 0x3ae <TransUart1>
		TransNumUart1(GetPOWER()); TransUart1(','); TransUart1(' ');
 294:	80 e2       	ldi	r24, 0x20	; 32
 296:	8b d0       	rcall	.+278    	; 0x3ae <TransUart1>
 298:	8a e0       	ldi	r24, 0x0A	; 10
 29a:	85 d0       	rcall	.+266    	; 0x3a6 <TransUart0>
 29c:	8d e0       	ldi	r24, 0x0D	; 13
 29e:	83 d0       	rcall	.+262    	; 0x3a6 <TransUart0>
 2a0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <g_cnt+0x1>
 2a4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <g_cnt>
		 
		TransUart0('\n');         
 2a8:	8f e1       	ldi	r24, 0x1F	; 31
 2aa:	93 e0       	ldi	r25, 0x03	; 3
 2ac:	9b bd       	out	0x2b, r25	; 43
		TransUart0('\r');
 2ae:	8a bd       	out	0x2a, r24	; 42
 2b0:	99 bd       	out	0x29, r25	; 41
 2b2:	88 bd       	out	0x28, r24	; 40

		g_cnt = 0;
 2b4:	ff 91       	pop	r31
 2b6:	ef 91       	pop	r30
 2b8:	bf 91       	pop	r27
 2ba:	af 91       	pop	r26
	//TransNumUart1(u_end);

	//TransUart1(13);

	//모터제어
	OCR1A = 799;
 2bc:	9f 91       	pop	r25
 2be:	8f 91       	pop	r24
 2c0:	7f 91       	pop	r23
 2c2:	6f 91       	pop	r22
	OCR1B = 799;
 2c4:	5f 91       	pop	r21
 2c6:	4f 91       	pop	r20
}
 2c8:	3f 91       	pop	r19
 2ca:	2f 91       	pop	r18
 2cc:	0f 90       	pop	r0
 2ce:	0b be       	out	0x3b, r0	; 59
 2d0:	0f 90       	pop	r0
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	0f 90       	pop	r0
 2d6:	1f 90       	pop	r1
 2d8:	18 95       	reti

000002da <main>:
 2da:	09 d0       	rcall	.+18     	; 0x2ee <InitIO>
 2dc:	14 d0       	rcall	.+40     	; 0x306 <InitExtInt>
 2de:	1b d0       	rcall	.+54     	; 0x316 <InitTimer1>
 2e0:	27 d0       	rcall	.+78     	; 0x330 <InitTimer2>
 2e2:	2b d0       	rcall	.+86     	; 0x33a <InitTimer3>
 2e4:	38 d0       	rcall	.+112    	; 0x356 <InitADC>
 2e6:	44 d0       	rcall	.+136    	; 0x370 <InitUart0>
 2e8:	4e d0       	rcall	.+156    	; 0x386 <InitUart1>
 2ea:	78 94       	sei
 2ec:	ff cf       	rjmp	.-2      	; 0x2ec <main+0x12>

000002ee <InitIO>:
	InitTimer1(); // 모터제어
	InitTimer2(); // 초음파 시간 재는거
	InitTimer3(); // 제어주기
	InitADC();
	InitUart0();
	InitUart1();
 2ee:	8f ef       	ldi	r24, 0xFF	; 255
 2f0:	8a bb       	out	0x1a, r24	; 26
	
	sei();
 2f2:	84 bb       	out	0x14, r24	; 20
 2f4:	90 e6       	ldi	r25, 0x60	; 96
unsigned char RecvUart1(){

	while(!(UCSR1A&(1<<RXC1)));

	return UDR1;
}
 2f6:	97 bb       	out	0x17, r25	; 23
 2f8:	11 ba       	out	0x11, r1	; 17
 2fa:	15 ba       	out	0x15, r1	; 21
 2fc:	95 b3       	in	r25, 0x15	; 21
 2fe:	90 65       	ori	r25, 0x50	; 80
 300:	95 bb       	out	0x15, r25	; 21
 302:	8b bb       	out	0x1b, r24	; 27
 304:	08 95       	ret

00000306 <InitExtInt>:
 306:	90 98       	cbi	0x12, 0	; 18
 308:	91 98       	cbi	0x12, 1	; 18
 30a:	8a e3       	ldi	r24, 0x3A	; 58
 30c:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 310:	87 e0       	ldi	r24, 0x07	; 7
 312:	89 bf       	out	0x39, r24	; 57
 314:	08 95       	ret

00000316 <InitTimer1>:
 316:	82 ea       	ldi	r24, 0xA2	; 162
 318:	8f bd       	out	0x2f, r24	; 47
 31a:	89 e1       	ldi	r24, 0x19	; 25
 31c:	8e bd       	out	0x2e, r24	; 46
 31e:	80 e2       	ldi	r24, 0x20	; 32
 320:	93 e0       	ldi	r25, 0x03	; 3
 322:	97 bd       	out	0x27, r25	; 39
 324:	86 bd       	out	0x26, r24	; 38
 326:	1b bc       	out	0x2b, r1	; 43
 328:	1a bc       	out	0x2a, r1	; 42
 32a:	19 bc       	out	0x29, r1	; 41
 32c:	18 bc       	out	0x28, r1	; 40
 32e:	08 95       	ret

00000330 <InitTimer2>:
 330:	85 e0       	ldi	r24, 0x05	; 5
 332:	85 bd       	out	0x25, r24	; 37
 334:	84 e6       	ldi	r24, 0x64	; 100
 336:	84 bd       	out	0x24, r24	; 36
 338:	08 95       	ret

0000033a <InitTimer3>:
 33a:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 33e:	84 e0       	ldi	r24, 0x04	; 4
 340:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 344:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7e007d>
 348:	8d e1       	ldi	r24, 0x1D	; 29
 34a:	9b ef       	ldi	r25, 0xFB	; 251
 34c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 350:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 354:	08 95       	ret

00000356 <InitADC>:
 356:	80 e4       	ldi	r24, 0x40	; 64
 358:	87 b9       	out	0x07, r24	; 7
 35a:	87 e8       	ldi	r24, 0x87	; 135
 35c:	86 b9       	out	0x06, r24	; 6
 35e:	08 95       	ret

00000360 <GetADC>:
 360:	80 64       	ori	r24, 0x40	; 64
 362:	87 b9       	out	0x07, r24	; 7
 364:	36 9a       	sbi	0x06, 6	; 6
 366:	34 9b       	sbis	0x06, 4	; 6
 368:	fe cf       	rjmp	.-4      	; 0x366 <GetADC+0x6>
 36a:	84 b1       	in	r24, 0x04	; 4
 36c:	95 b1       	in	r25, 0x05	; 5
 36e:	08 95       	ret

00000370 <InitUart0>:
 370:	19 9a       	sbi	0x03, 1	; 3
 372:	18 98       	cbi	0x03, 0	; 3
 374:	1b b8       	out	0x0b, r1	; 11
 376:	88 e1       	ldi	r24, 0x18	; 24
 378:	8a b9       	out	0x0a, r24	; 10
 37a:	86 e0       	ldi	r24, 0x06	; 6
 37c:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 380:	88 e0       	ldi	r24, 0x08	; 8
 382:	89 b9       	out	0x09, r24	; 9
 384:	08 95       	ret

00000386 <InitUart1>:
 386:	81 b3       	in	r24, 0x11	; 17
 388:	83 7f       	andi	r24, 0xF3	; 243
 38a:	88 60       	ori	r24, 0x08	; 8
 38c:	81 bb       	out	0x11, r24	; 17
 38e:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 392:	88 e1       	ldi	r24, 0x18	; 24
 394:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 398:	86 e0       	ldi	r24, 0x06	; 6
 39a:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 39e:	88 e0       	ldi	r24, 0x08	; 8
 3a0:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 3a4:	08 95       	ret

000003a6 <TransUart0>:
 3a6:	5d 9b       	sbis	0x0b, 5	; 11
 3a8:	fe cf       	rjmp	.-4      	; 0x3a6 <TransUart0>
 3aa:	8c b9       	out	0x0c, r24	; 12
 3ac:	08 95       	ret

000003ae <TransUart1>:
 3ae:	eb e9       	ldi	r30, 0x9B	; 155
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	90 81       	ld	r25, Z
 3b4:	95 ff       	sbrs	r25, 5
 3b6:	fd cf       	rjmp	.-6      	; 0x3b2 <TransUart1+0x4>
 3b8:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 3bc:	08 95       	ret

000003be <TransNumUart0>:
//TransNumUart0()
//TransNumUart0
// Input : Number data
// Output : None
//////////////////////////////////////////////////////////////////
void TransNumUart0(int num){
 3be:	cf 93       	push	r28
 3c0:	df 93       	push	r29
 3c2:	ec 01       	movw	r28, r24
	
	//TO DO
	TransUart0(num/1000 + 48);
 3c4:	68 ee       	ldi	r22, 0xE8	; 232
 3c6:	73 e0       	ldi	r23, 0x03	; 3
 3c8:	90 d4       	rcall	.+2336   	; 0xcea <__divmodhi4>
 3ca:	80 e3       	ldi	r24, 0x30	; 48
 3cc:	86 0f       	add	r24, r22
 3ce:	eb df       	rcall	.-42     	; 0x3a6 <TransUart0>
	TransUart0((num/100)%100 + 48);
 3d0:	24 e6       	ldi	r18, 0x64	; 100
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	ce 01       	movw	r24, r28
 3d6:	b9 01       	movw	r22, r18
 3d8:	88 d4       	rcall	.+2320   	; 0xcea <__divmodhi4>
 3da:	cb 01       	movw	r24, r22
 3dc:	b9 01       	movw	r22, r18
 3de:	85 d4       	rcall	.+2314   	; 0xcea <__divmodhi4>
 3e0:	80 5d       	subi	r24, 0xD0	; 208
 3e2:	e1 df       	rcall	.-62     	; 0x3a6 <TransUart0>
	TransUart0((num/10)%10 + 48);
 3e4:	2a e0       	ldi	r18, 0x0A	; 10
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	ce 01       	movw	r24, r28
 3ea:	b9 01       	movw	r22, r18
 3ec:	7e d4       	rcall	.+2300   	; 0xcea <__divmodhi4>
 3ee:	c8 2f       	mov	r28, r24
 3f0:	cb 01       	movw	r24, r22
 3f2:	b9 01       	movw	r22, r18
 3f4:	7a d4       	rcall	.+2292   	; 0xcea <__divmodhi4>
 3f6:	80 5d       	subi	r24, 0xD0	; 208
 3f8:	d6 df       	rcall	.-84     	; 0x3a6 <TransUart0>
	TransUart0(num%10 + 48);
 3fa:	80 e3       	ldi	r24, 0x30	; 48
 3fc:	8c 0f       	add	r24, r28
 3fe:	d3 df       	rcall	.-90     	; 0x3a6 <TransUart0>
 400:	df 91       	pop	r29
}
 402:	cf 91       	pop	r28
 404:	08 95       	ret

00000406 <TransNumUart1>:
 406:	cf 93       	push	r28
//TransNumUart1()
//TransNumUart1
// Input : Number data
// Output : None
//////////////////////////////////////////////////////////////////
void TransNumUart1(int num){
 408:	df 93       	push	r29
 40a:	ec 01       	movw	r28, r24
	
	//TO DO
	TransUart1(num/1000 + 48);
 40c:	68 ee       	ldi	r22, 0xE8	; 232
 40e:	73 e0       	ldi	r23, 0x03	; 3
 410:	6c d4       	rcall	.+2264   	; 0xcea <__divmodhi4>
 412:	80 e3       	ldi	r24, 0x30	; 48
 414:	86 0f       	add	r24, r22
 416:	cb df       	rcall	.-106    	; 0x3ae <TransUart1>
	TransUart1((num/100)%100 + 48);
 418:	24 e6       	ldi	r18, 0x64	; 100
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	ce 01       	movw	r24, r28
 41e:	b9 01       	movw	r22, r18
 420:	64 d4       	rcall	.+2248   	; 0xcea <__divmodhi4>
 422:	cb 01       	movw	r24, r22
 424:	b9 01       	movw	r22, r18
 426:	61 d4       	rcall	.+2242   	; 0xcea <__divmodhi4>
 428:	80 5d       	subi	r24, 0xD0	; 208
 42a:	c1 df       	rcall	.-126    	; 0x3ae <TransUart1>
	TransUart1((num/10)%10 + 48);
 42c:	2a e0       	ldi	r18, 0x0A	; 10
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	ce 01       	movw	r24, r28
 432:	b9 01       	movw	r22, r18
 434:	5a d4       	rcall	.+2228   	; 0xcea <__divmodhi4>
 436:	c8 2f       	mov	r28, r24
 438:	cb 01       	movw	r24, r22
 43a:	b9 01       	movw	r22, r18
 43c:	56 d4       	rcall	.+2220   	; 0xcea <__divmodhi4>
 43e:	80 5d       	subi	r24, 0xD0	; 208
 440:	b6 df       	rcall	.-148    	; 0x3ae <TransUart1>
	TransUart1(num%10 + 48);
 442:	80 e3       	ldi	r24, 0x30	; 48
 444:	8c 0f       	add	r24, r28
 446:	b3 df       	rcall	.-154    	; 0x3ae <TransUart1>
 448:	df 91       	pop	r29
}
 44a:	cf 91       	pop	r28
 44c:	08 95       	ret

0000044e <GetResistor>:
 44e:	80 e0       	ldi	r24, 0x00	; 0
//GetResistor
// Input : 
// Output : 0~100 resistor
//////////////////////////////////////////////////////////////////
int GetResistor(){
	int adc = GetADC(ADC_MUX_RESISTOR);
 450:	87 df       	rcall	.-242    	; 0x360 <GetADC>
	return adc / 1023. * 100.;
 452:	bc 01       	movw	r22, r24
 454:	99 0f       	add	r25, r25
 456:	88 0b       	sbc	r24, r24
 458:	99 0b       	sbc	r25, r25
 45a:	c5 d1       	rcall	.+906    	; 0x7e6 <__floatsisf>
 45c:	20 e0       	ldi	r18, 0x00	; 0
 45e:	30 ec       	ldi	r19, 0xC0	; 192
 460:	4f e7       	ldi	r20, 0x7F	; 127
 462:	54 e4       	ldi	r21, 0x44	; 68
 464:	25 d1       	rcall	.+586    	; 0x6b0 <__divsf3>
 466:	20 e0       	ldi	r18, 0x00	; 0
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	48 ec       	ldi	r20, 0xC8	; 200
 46c:	52 e4       	ldi	r21, 0x42	; 66
 46e:	96 d2       	rcall	.+1324   	; 0x99c <__mulsf3>
 470:	87 d1       	rcall	.+782    	; 0x780 <__fixsfsi>
}
 472:	cb 01       	movw	r24, r22
 474:	08 95       	ret

00000476 <GetCDS>:
//GetCDS
// Input : 
// Output : LUX
//////////////////////////////////////////////////////////////////
int GetCDS(){
	int adc = GetADC(ADC_MUX_CDS);
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	73 df       	rcall	.-282    	; 0x360 <GetADC>
	float vout = 5. * (1./1023) * adc;
	float R_cds = ((4.7 * 5.) / vout) - 4.7;
	float lux = powf(10., 1. - ( (log10(R_cds)-log10(40.)) / 0.8));   //수식을 그대로 쳐서 넣은건데 살짝씩 어플과 값이 맞게 변형 + 단위는 K + 회로, 환경에 따라 값이 많이 달라질수 있다.
 47a:	bc 01       	movw	r22, r24
 47c:	99 0f       	add	r25, r25
 47e:	88 0b       	sbc	r24, r24
 480:	99 0b       	sbc	r25, r25
 482:	b1 d1       	rcall	.+866    	; 0x7e6 <__floatsisf>
 484:	2a e0       	ldi	r18, 0x0A	; 10
 486:	38 e2       	ldi	r19, 0x28	; 40
 488:	40 ea       	ldi	r20, 0xA0	; 160
 48a:	5b e3       	ldi	r21, 0x3B	; 59
 48c:	87 d2       	rcall	.+1294   	; 0x99c <__mulsf3>
 48e:	9b 01       	movw	r18, r22
 490:	ac 01       	movw	r20, r24
 492:	60 e0       	ldi	r22, 0x00	; 0
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	8c eb       	ldi	r24, 0xBC	; 188
 498:	91 e4       	ldi	r25, 0x41	; 65
 49a:	0a d1       	rcall	.+532    	; 0x6b0 <__divsf3>
 49c:	26 e6       	ldi	r18, 0x66	; 102
 49e:	36 e6       	ldi	r19, 0x66	; 102
 4a0:	46 e9       	ldi	r20, 0x96	; 150
 4a2:	50 e4       	ldi	r21, 0x40	; 64
 4a4:	a0 d0       	rcall	.+320    	; 0x5e6 <__subsf3>
 4a6:	2f d2       	rcall	.+1118   	; 0x906 <log10>
 4a8:	2d e4       	ldi	r18, 0x4D	; 77
 4aa:	30 e1       	ldi	r19, 0x10	; 16
 4ac:	4d ec       	ldi	r20, 0xCD	; 205
 4ae:	5f e3       	ldi	r21, 0x3F	; 63
 4b0:	9a d0       	rcall	.+308    	; 0x5e6 <__subsf3>
 4b2:	2d ec       	ldi	r18, 0xCD	; 205
 4b4:	3c ec       	ldi	r19, 0xCC	; 204
 4b6:	4c e4       	ldi	r20, 0x4C	; 76
 4b8:	5f e3       	ldi	r21, 0x3F	; 63
 4ba:	fa d0       	rcall	.+500    	; 0x6b0 <__divsf3>
 4bc:	9b 01       	movw	r18, r22
 4be:	ac 01       	movw	r20, r24
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	80 e8       	ldi	r24, 0x80	; 128
 4c6:	9f e3       	ldi	r25, 0x3F	; 63
 4c8:	8e d0       	rcall	.+284    	; 0x5e6 <__subsf3>
 4ca:	9b 01       	movw	r18, r22
 4cc:	ac 01       	movw	r20, r24
 4ce:	60 e0       	ldi	r22, 0x00	; 0
 4d0:	70 e0       	ldi	r23, 0x00	; 0
 4d2:	80 e2       	ldi	r24, 0x20	; 32
 4d4:	91 e4       	ldi	r25, 0x41	; 65

	return lux;
 4d6:	c5 d2       	rcall	.+1418   	; 0xa62 <pow>
 4d8:	53 d1       	rcall	.+678    	; 0x780 <__fixsfsi>
}
 4da:	cb 01       	movw	r24, r22
 4dc:	08 95       	ret

000004de <GetLM35>:
//GetLM35
// Input : 
// Output : temperature
//////////////////////////////////////////////////////////////////
int GetLM35(){
	int adc = GetADC(ADC_MUX_LM35);
 4de:	82 e0       	ldi	r24, 0x02	; 2
 4e0:	3f df       	rcall	.-386    	; 0x360 <GetADC>
	return 5 * ((double)1./1023) * adc * 100;  
 4e2:	bc 01       	movw	r22, r24
 4e4:	99 0f       	add	r25, r25
 4e6:	88 0b       	sbc	r24, r24
 4e8:	99 0b       	sbc	r25, r25
 4ea:	7d d1       	rcall	.+762    	; 0x7e6 <__floatsisf>
 4ec:	2a e0       	ldi	r18, 0x0A	; 10
 4ee:	38 e2       	ldi	r19, 0x28	; 40
 4f0:	40 ea       	ldi	r20, 0xA0	; 160
 4f2:	5b e3       	ldi	r21, 0x3B	; 59
 4f4:	53 d2       	rcall	.+1190   	; 0x99c <__mulsf3>
 4f6:	20 e0       	ldi	r18, 0x00	; 0
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	48 ec       	ldi	r20, 0xC8	; 200
 4fc:	52 e4       	ldi	r21, 0x42	; 66
 4fe:	4e d2       	rcall	.+1180   	; 0x99c <__mulsf3>
 500:	3f d1       	rcall	.+638    	; 0x780 <__fixsfsi>
}
 502:	cb 01       	movw	r24, r22
 504:	08 95       	ret

00000506 <GetTHEMISTER>:
//GetTHEMISTER
// Input : 
// Output : temperature
//////////////////////////////////////////////////////////////////
int GetTHEMISTER(){
	int adc = GetADC(ADC_MUX_THERMISTER);
 506:	83 e0       	ldi	r24, 0x03	; 3
 508:	2b df       	rcall	.-426    	; 0x360 <GetADC>
	float vout = 5 * ((double)1/1023) * adc;
	float Rth = (5./vout)*4700 - 4700;
	float T = 1 / (1. / (273.15 + 25.) + 1./3650 * log(Rth/1000.) );
 50a:	bc 01       	movw	r22, r24
 50c:	99 0f       	add	r25, r25
 50e:	88 0b       	sbc	r24, r24
 510:	99 0b       	sbc	r25, r25
 512:	69 d1       	rcall	.+722    	; 0x7e6 <__floatsisf>
 514:	2a e0       	ldi	r18, 0x0A	; 10
 516:	38 e2       	ldi	r19, 0x28	; 40
 518:	40 ea       	ldi	r20, 0xA0	; 160
 51a:	5b e3       	ldi	r21, 0x3B	; 59
 51c:	3f d2       	rcall	.+1150   	; 0x99c <__mulsf3>
 51e:	9b 01       	movw	r18, r22
 520:	ac 01       	movw	r20, r24
 522:	60 e0       	ldi	r22, 0x00	; 0
 524:	70 e0       	ldi	r23, 0x00	; 0
 526:	80 ea       	ldi	r24, 0xA0	; 160
 528:	90 e4       	ldi	r25, 0x40	; 64
 52a:	c2 d0       	rcall	.+388    	; 0x6b0 <__divsf3>
 52c:	20 e0       	ldi	r18, 0x00	; 0
 52e:	30 ee       	ldi	r19, 0xE0	; 224
 530:	42 e9       	ldi	r20, 0x92	; 146
 532:	55 e4       	ldi	r21, 0x45	; 69
 534:	33 d2       	rcall	.+1126   	; 0x99c <__mulsf3>
 536:	20 e0       	ldi	r18, 0x00	; 0
 538:	30 ee       	ldi	r19, 0xE0	; 224
 53a:	42 e9       	ldi	r20, 0x92	; 146
 53c:	55 e4       	ldi	r21, 0x45	; 69
 53e:	53 d0       	rcall	.+166    	; 0x5e6 <__subsf3>
 540:	20 e0       	ldi	r18, 0x00	; 0
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	4a e7       	ldi	r20, 0x7A	; 122
 546:	54 e4       	ldi	r21, 0x44	; 68
 548:	b3 d0       	rcall	.+358    	; 0x6b0 <__divsf3>
 54a:	e8 d1       	rcall	.+976    	; 0x91c <log>
	float Tth = T - 273.5 ;   //+a
	return Tth;
 54c:	2b ef       	ldi	r18, 0xFB	; 251
 54e:	33 ea       	ldi	r19, 0xA3	; 163
 550:	4f e8       	ldi	r20, 0x8F	; 143
 552:	59 e3       	ldi	r21, 0x39	; 57
 554:	23 d2       	rcall	.+1094   	; 0x99c <__mulsf3>
 556:	2f e0       	ldi	r18, 0x0F	; 15
 558:	3f ec       	ldi	r19, 0xCF	; 207
 55a:	4b e5       	ldi	r20, 0x5B	; 91
 55c:	5b e3       	ldi	r21, 0x3B	; 59
 55e:	44 d0       	rcall	.+136    	; 0x5e8 <__addsf3>
 560:	9b 01       	movw	r18, r22
 562:	ac 01       	movw	r20, r24
 564:	60 e0       	ldi	r22, 0x00	; 0
 566:	70 e0       	ldi	r23, 0x00	; 0
 568:	80 e8       	ldi	r24, 0x80	; 128
 56a:	9f e3       	ldi	r25, 0x3F	; 63
 56c:	a1 d0       	rcall	.+322    	; 0x6b0 <__divsf3>
 56e:	20 e0       	ldi	r18, 0x00	; 0
 570:	30 ec       	ldi	r19, 0xC0	; 192
 572:	48 e8       	ldi	r20, 0x88	; 136
 574:	53 e4       	ldi	r21, 0x43	; 67
 576:	37 d0       	rcall	.+110    	; 0x5e6 <__subsf3>
 578:	03 d1       	rcall	.+518    	; 0x780 <__fixsfsi>
 57a:	cb 01       	movw	r24, r22
}
 57c:	08 95       	ret

0000057e <GetGAS>:
 57e:	86 e0       	ldi	r24, 0x06	; 6
//GetGAS
// Input :
// Output : GAS
//////////////////////////////////////////////////////////////////
int GetGAS(){
	int adc = GetADC(ADC_MUX_GAS);
 580:	ef ce       	rjmp	.-546    	; 0x360 <GetADC>
	return adc;
}
 582:	08 95       	ret

00000584 <GetPOWER>:
//GetPOWER
// Input :
// Output : pressure
// feature : 800g까지 측정할 수 있다!(오차 +- 50)
//////////////////////////////////////////////////////////////////
int GetPOWER(){
 584:	0f 93       	push	r16
 586:	1f 93       	push	r17
 588:	cf 93       	push	r28
 58a:	df 93       	push	r29
	int adc = GetADC(ADC_MUX_POWER);
 58c:	87 e0       	ldi	r24, 0x07	; 7
 58e:	e8 de       	rcall	.-560    	; 0x360 <GetADC>
	float vout = 5 * ((double)1/1023) * adc;
	float power = powf(4.23, vout);
 590:	bc 01       	movw	r22, r24
 592:	99 0f       	add	r25, r25
 594:	88 0b       	sbc	r24, r24
 596:	99 0b       	sbc	r25, r25
 598:	26 d1       	rcall	.+588    	; 0x7e6 <__floatsisf>
 59a:	2a e0       	ldi	r18, 0x0A	; 10
 59c:	38 e2       	ldi	r19, 0x28	; 40
 59e:	40 ea       	ldi	r20, 0xA0	; 160
 5a0:	5b e3       	ldi	r21, 0x3B	; 59
 5a2:	fc d1       	rcall	.+1016   	; 0x99c <__mulsf3>
 5a4:	9b 01       	movw	r18, r22
 5a6:	ac 01       	movw	r20, r24
 5a8:	69 e2       	ldi	r22, 0x29	; 41
 5aa:	7c e5       	ldi	r23, 0x5C	; 92
 5ac:	87 e8       	ldi	r24, 0x87	; 135
 5ae:	90 e4       	ldi	r25, 0x40	; 64
 5b0:	58 d2       	rcall	.+1200   	; 0xa62 <pow>
 5b2:	06 2f       	mov	r16, r22
 5b4:	17 2f       	mov	r17, r23
 5b6:	d8 2f       	mov	r29, r24
 5b8:	c9 2f       	mov	r28, r25
	if(power >= 10000)
 5ba:	20 e0       	ldi	r18, 0x00	; 0
 5bc:	30 e4       	ldi	r19, 0x40	; 64
 5be:	4c e1       	ldi	r20, 0x1C	; 28
 5c0:	56 e4       	ldi	r21, 0x46	; 70
 5c2:	9d d1       	rcall	.+826    	; 0x8fe <__gesf2>
 5c4:	88 23       	and	r24, r24
 5c6:	24 f0       	brlt	.+8      	; 0x5d0 <GetPOWER+0x4c>
		power = 9999;
 5c8:	00 e0       	ldi	r16, 0x00	; 0
 5ca:	1c e3       	ldi	r17, 0x3C	; 60
 5cc:	dc e1       	ldi	r29, 0x1C	; 28
	return power;
 5ce:	c6 e4       	ldi	r28, 0x46	; 70
 5d0:	60 2f       	mov	r22, r16
 5d2:	71 2f       	mov	r23, r17
 5d4:	8d 2f       	mov	r24, r29
 5d6:	9c 2f       	mov	r25, r28
 5d8:	d3 d0       	rcall	.+422    	; 0x780 <__fixsfsi>
}
 5da:	cb 01       	movw	r24, r22
 5dc:	df 91       	pop	r29
 5de:	cf 91       	pop	r28
 5e0:	1f 91       	pop	r17
 5e2:	0f 91       	pop	r16
 5e4:	08 95       	ret

000005e6 <__subsf3>:
 5e6:	50 58       	subi	r21, 0x80	; 128

000005e8 <__addsf3>:
 5e8:	bb 27       	eor	r27, r27
 5ea:	aa 27       	eor	r26, r26
 5ec:	0e d0       	rcall	.+28     	; 0x60a <__addsf3x>
 5ee:	4d c1       	rjmp	.+666    	; 0x88a <__fp_round>
 5f0:	3e d1       	rcall	.+636    	; 0x86e <__fp_pscA>
 5f2:	30 f0       	brcs	.+12     	; 0x600 <__addsf3+0x18>
 5f4:	43 d1       	rcall	.+646    	; 0x87c <__fp_pscB>
 5f6:	20 f0       	brcs	.+8      	; 0x600 <__addsf3+0x18>
 5f8:	31 f4       	brne	.+12     	; 0x606 <__addsf3+0x1e>
 5fa:	9f 3f       	cpi	r25, 0xFF	; 255
 5fc:	11 f4       	brne	.+4      	; 0x602 <__addsf3+0x1a>
 5fe:	1e f4       	brtc	.+6      	; 0x606 <__addsf3+0x1e>
 600:	33 c1       	rjmp	.+614    	; 0x868 <__fp_nan>
 602:	0e f4       	brtc	.+2      	; 0x606 <__addsf3+0x1e>
 604:	e0 95       	com	r30
 606:	e7 fb       	bst	r30, 7
 608:	29 c1       	rjmp	.+594    	; 0x85c <__fp_inf>

0000060a <__addsf3x>:
 60a:	e9 2f       	mov	r30, r25
 60c:	4f d1       	rcall	.+670    	; 0x8ac <__fp_split3>
 60e:	80 f3       	brcs	.-32     	; 0x5f0 <__addsf3+0x8>
 610:	ba 17       	cp	r27, r26
 612:	62 07       	cpc	r22, r18
 614:	73 07       	cpc	r23, r19
 616:	84 07       	cpc	r24, r20
 618:	95 07       	cpc	r25, r21
 61a:	18 f0       	brcs	.+6      	; 0x622 <__addsf3x+0x18>
 61c:	71 f4       	brne	.+28     	; 0x63a <__addsf3x+0x30>
 61e:	9e f5       	brtc	.+102    	; 0x686 <__addsf3x+0x7c>
 620:	67 c1       	rjmp	.+718    	; 0x8f0 <__fp_zero>
 622:	0e f4       	brtc	.+2      	; 0x626 <__addsf3x+0x1c>
 624:	e0 95       	com	r30
 626:	0b 2e       	mov	r0, r27
 628:	ba 2f       	mov	r27, r26
 62a:	a0 2d       	mov	r26, r0
 62c:	0b 01       	movw	r0, r22
 62e:	b9 01       	movw	r22, r18
 630:	90 01       	movw	r18, r0
 632:	0c 01       	movw	r0, r24
 634:	ca 01       	movw	r24, r20
 636:	a0 01       	movw	r20, r0
 638:	11 24       	eor	r1, r1
 63a:	ff 27       	eor	r31, r31
 63c:	59 1b       	sub	r21, r25
 63e:	99 f0       	breq	.+38     	; 0x666 <__addsf3x+0x5c>
 640:	59 3f       	cpi	r21, 0xF9	; 249
 642:	50 f4       	brcc	.+20     	; 0x658 <__addsf3x+0x4e>
 644:	50 3e       	cpi	r21, 0xE0	; 224
 646:	68 f1       	brcs	.+90     	; 0x6a2 <__addsf3x+0x98>
 648:	1a 16       	cp	r1, r26
 64a:	f0 40       	sbci	r31, 0x00	; 0
 64c:	a2 2f       	mov	r26, r18
 64e:	23 2f       	mov	r18, r19
 650:	34 2f       	mov	r19, r20
 652:	44 27       	eor	r20, r20
 654:	58 5f       	subi	r21, 0xF8	; 248
 656:	f3 cf       	rjmp	.-26     	; 0x63e <__addsf3x+0x34>
 658:	46 95       	lsr	r20
 65a:	37 95       	ror	r19
 65c:	27 95       	ror	r18
 65e:	a7 95       	ror	r26
 660:	f0 40       	sbci	r31, 0x00	; 0
 662:	53 95       	inc	r21
 664:	c9 f7       	brne	.-14     	; 0x658 <__addsf3x+0x4e>
 666:	7e f4       	brtc	.+30     	; 0x686 <__addsf3x+0x7c>
 668:	1f 16       	cp	r1, r31
 66a:	ba 0b       	sbc	r27, r26
 66c:	62 0b       	sbc	r22, r18
 66e:	73 0b       	sbc	r23, r19
 670:	84 0b       	sbc	r24, r20
 672:	ba f0       	brmi	.+46     	; 0x6a2 <__addsf3x+0x98>
 674:	91 50       	subi	r25, 0x01	; 1
 676:	a1 f0       	breq	.+40     	; 0x6a0 <__addsf3x+0x96>
 678:	ff 0f       	add	r31, r31
 67a:	bb 1f       	adc	r27, r27
 67c:	66 1f       	adc	r22, r22
 67e:	77 1f       	adc	r23, r23
 680:	88 1f       	adc	r24, r24
 682:	c2 f7       	brpl	.-16     	; 0x674 <__addsf3x+0x6a>
 684:	0e c0       	rjmp	.+28     	; 0x6a2 <__addsf3x+0x98>
 686:	ba 0f       	add	r27, r26
 688:	62 1f       	adc	r22, r18
 68a:	73 1f       	adc	r23, r19
 68c:	84 1f       	adc	r24, r20
 68e:	48 f4       	brcc	.+18     	; 0x6a2 <__addsf3x+0x98>
 690:	87 95       	ror	r24
 692:	77 95       	ror	r23
 694:	67 95       	ror	r22
 696:	b7 95       	ror	r27
 698:	f7 95       	ror	r31
 69a:	9e 3f       	cpi	r25, 0xFE	; 254
 69c:	08 f0       	brcs	.+2      	; 0x6a0 <__addsf3x+0x96>
 69e:	b3 cf       	rjmp	.-154    	; 0x606 <__addsf3+0x1e>
 6a0:	93 95       	inc	r25
 6a2:	88 0f       	add	r24, r24
 6a4:	08 f0       	brcs	.+2      	; 0x6a8 <__addsf3x+0x9e>
 6a6:	99 27       	eor	r25, r25
 6a8:	ee 0f       	add	r30, r30
 6aa:	97 95       	ror	r25
 6ac:	87 95       	ror	r24
 6ae:	08 95       	ret

000006b0 <__divsf3>:
 6b0:	0c d0       	rcall	.+24     	; 0x6ca <__divsf3x>
 6b2:	eb c0       	rjmp	.+470    	; 0x88a <__fp_round>
 6b4:	e3 d0       	rcall	.+454    	; 0x87c <__fp_pscB>
 6b6:	40 f0       	brcs	.+16     	; 0x6c8 <__divsf3+0x18>
 6b8:	da d0       	rcall	.+436    	; 0x86e <__fp_pscA>
 6ba:	30 f0       	brcs	.+12     	; 0x6c8 <__divsf3+0x18>
 6bc:	21 f4       	brne	.+8      	; 0x6c6 <__divsf3+0x16>
 6be:	5f 3f       	cpi	r21, 0xFF	; 255
 6c0:	19 f0       	breq	.+6      	; 0x6c8 <__divsf3+0x18>
 6c2:	cc c0       	rjmp	.+408    	; 0x85c <__fp_inf>
 6c4:	51 11       	cpse	r21, r1
 6c6:	15 c1       	rjmp	.+554    	; 0x8f2 <__fp_szero>
 6c8:	cf c0       	rjmp	.+414    	; 0x868 <__fp_nan>

000006ca <__divsf3x>:
 6ca:	f0 d0       	rcall	.+480    	; 0x8ac <__fp_split3>
 6cc:	98 f3       	brcs	.-26     	; 0x6b4 <__divsf3+0x4>

000006ce <__divsf3_pse>:
 6ce:	99 23       	and	r25, r25
 6d0:	c9 f3       	breq	.-14     	; 0x6c4 <__divsf3+0x14>
 6d2:	55 23       	and	r21, r21
 6d4:	b1 f3       	breq	.-20     	; 0x6c2 <__divsf3+0x12>
 6d6:	95 1b       	sub	r25, r21
 6d8:	55 0b       	sbc	r21, r21
 6da:	bb 27       	eor	r27, r27
 6dc:	aa 27       	eor	r26, r26
 6de:	62 17       	cp	r22, r18
 6e0:	73 07       	cpc	r23, r19
 6e2:	84 07       	cpc	r24, r20
 6e4:	38 f0       	brcs	.+14     	; 0x6f4 <__divsf3_pse+0x26>
 6e6:	9f 5f       	subi	r25, 0xFF	; 255
 6e8:	5f 4f       	sbci	r21, 0xFF	; 255
 6ea:	22 0f       	add	r18, r18
 6ec:	33 1f       	adc	r19, r19
 6ee:	44 1f       	adc	r20, r20
 6f0:	aa 1f       	adc	r26, r26
 6f2:	a9 f3       	breq	.-22     	; 0x6de <__divsf3_pse+0x10>
 6f4:	33 d0       	rcall	.+102    	; 0x75c <__divsf3_pse+0x8e>
 6f6:	0e 2e       	mov	r0, r30
 6f8:	3a f0       	brmi	.+14     	; 0x708 <__divsf3_pse+0x3a>
 6fa:	e0 e8       	ldi	r30, 0x80	; 128
 6fc:	30 d0       	rcall	.+96     	; 0x75e <__divsf3_pse+0x90>
 6fe:	91 50       	subi	r25, 0x01	; 1
 700:	50 40       	sbci	r21, 0x00	; 0
 702:	e6 95       	lsr	r30
 704:	00 1c       	adc	r0, r0
 706:	ca f7       	brpl	.-14     	; 0x6fa <__divsf3_pse+0x2c>
 708:	29 d0       	rcall	.+82     	; 0x75c <__divsf3_pse+0x8e>
 70a:	fe 2f       	mov	r31, r30
 70c:	27 d0       	rcall	.+78     	; 0x75c <__divsf3_pse+0x8e>
 70e:	66 0f       	add	r22, r22
 710:	77 1f       	adc	r23, r23
 712:	88 1f       	adc	r24, r24
 714:	bb 1f       	adc	r27, r27
 716:	26 17       	cp	r18, r22
 718:	37 07       	cpc	r19, r23
 71a:	48 07       	cpc	r20, r24
 71c:	ab 07       	cpc	r26, r27
 71e:	b0 e8       	ldi	r27, 0x80	; 128
 720:	09 f0       	breq	.+2      	; 0x724 <__divsf3_pse+0x56>
 722:	bb 0b       	sbc	r27, r27
 724:	80 2d       	mov	r24, r0
 726:	bf 01       	movw	r22, r30
 728:	ff 27       	eor	r31, r31
 72a:	93 58       	subi	r25, 0x83	; 131
 72c:	5f 4f       	sbci	r21, 0xFF	; 255
 72e:	2a f0       	brmi	.+10     	; 0x73a <__divsf3_pse+0x6c>
 730:	9e 3f       	cpi	r25, 0xFE	; 254
 732:	51 05       	cpc	r21, r1
 734:	68 f0       	brcs	.+26     	; 0x750 <__divsf3_pse+0x82>
 736:	92 c0       	rjmp	.+292    	; 0x85c <__fp_inf>
 738:	dc c0       	rjmp	.+440    	; 0x8f2 <__fp_szero>
 73a:	5f 3f       	cpi	r21, 0xFF	; 255
 73c:	ec f3       	brlt	.-6      	; 0x738 <__divsf3_pse+0x6a>
 73e:	98 3e       	cpi	r25, 0xE8	; 232
 740:	dc f3       	brlt	.-10     	; 0x738 <__divsf3_pse+0x6a>
 742:	86 95       	lsr	r24
 744:	77 95       	ror	r23
 746:	67 95       	ror	r22
 748:	b7 95       	ror	r27
 74a:	f7 95       	ror	r31
 74c:	9f 5f       	subi	r25, 0xFF	; 255
 74e:	c9 f7       	brne	.-14     	; 0x742 <__divsf3_pse+0x74>
 750:	88 0f       	add	r24, r24
 752:	91 1d       	adc	r25, r1
 754:	96 95       	lsr	r25
 756:	87 95       	ror	r24
 758:	97 f9       	bld	r25, 7
 75a:	08 95       	ret
 75c:	e1 e0       	ldi	r30, 0x01	; 1
 75e:	66 0f       	add	r22, r22
 760:	77 1f       	adc	r23, r23
 762:	88 1f       	adc	r24, r24
 764:	bb 1f       	adc	r27, r27
 766:	62 17       	cp	r22, r18
 768:	73 07       	cpc	r23, r19
 76a:	84 07       	cpc	r24, r20
 76c:	ba 07       	cpc	r27, r26
 76e:	20 f0       	brcs	.+8      	; 0x778 <__divsf3_pse+0xaa>
 770:	62 1b       	sub	r22, r18
 772:	73 0b       	sbc	r23, r19
 774:	84 0b       	sbc	r24, r20
 776:	ba 0b       	sbc	r27, r26
 778:	ee 1f       	adc	r30, r30
 77a:	88 f7       	brcc	.-30     	; 0x75e <__divsf3_pse+0x90>
 77c:	e0 95       	com	r30
 77e:	08 95       	ret

00000780 <__fixsfsi>:
 780:	04 d0       	rcall	.+8      	; 0x78a <__fixunssfsi>
 782:	68 94       	set
 784:	b1 11       	cpse	r27, r1
 786:	b5 c0       	rjmp	.+362    	; 0x8f2 <__fp_szero>
 788:	08 95       	ret

0000078a <__fixunssfsi>:
 78a:	98 d0       	rcall	.+304    	; 0x8bc <__fp_splitA>
 78c:	88 f0       	brcs	.+34     	; 0x7b0 <__fixunssfsi+0x26>
 78e:	9f 57       	subi	r25, 0x7F	; 127
 790:	90 f0       	brcs	.+36     	; 0x7b6 <__fixunssfsi+0x2c>
 792:	b9 2f       	mov	r27, r25
 794:	99 27       	eor	r25, r25
 796:	b7 51       	subi	r27, 0x17	; 23
 798:	a0 f0       	brcs	.+40     	; 0x7c2 <__fixunssfsi+0x38>
 79a:	d1 f0       	breq	.+52     	; 0x7d0 <__fixunssfsi+0x46>
 79c:	66 0f       	add	r22, r22
 79e:	77 1f       	adc	r23, r23
 7a0:	88 1f       	adc	r24, r24
 7a2:	99 1f       	adc	r25, r25
 7a4:	1a f0       	brmi	.+6      	; 0x7ac <__fixunssfsi+0x22>
 7a6:	ba 95       	dec	r27
 7a8:	c9 f7       	brne	.-14     	; 0x79c <__fixunssfsi+0x12>
 7aa:	12 c0       	rjmp	.+36     	; 0x7d0 <__fixunssfsi+0x46>
 7ac:	b1 30       	cpi	r27, 0x01	; 1
 7ae:	81 f0       	breq	.+32     	; 0x7d0 <__fixunssfsi+0x46>
 7b0:	9f d0       	rcall	.+318    	; 0x8f0 <__fp_zero>
 7b2:	b1 e0       	ldi	r27, 0x01	; 1
 7b4:	08 95       	ret
 7b6:	9c c0       	rjmp	.+312    	; 0x8f0 <__fp_zero>
 7b8:	67 2f       	mov	r22, r23
 7ba:	78 2f       	mov	r23, r24
 7bc:	88 27       	eor	r24, r24
 7be:	b8 5f       	subi	r27, 0xF8	; 248
 7c0:	39 f0       	breq	.+14     	; 0x7d0 <__fixunssfsi+0x46>
 7c2:	b9 3f       	cpi	r27, 0xF9	; 249
 7c4:	cc f3       	brlt	.-14     	; 0x7b8 <__fixunssfsi+0x2e>
 7c6:	86 95       	lsr	r24
 7c8:	77 95       	ror	r23
 7ca:	67 95       	ror	r22
 7cc:	b3 95       	inc	r27
 7ce:	d9 f7       	brne	.-10     	; 0x7c6 <__fixunssfsi+0x3c>
 7d0:	3e f4       	brtc	.+14     	; 0x7e0 <__fixunssfsi+0x56>
 7d2:	90 95       	com	r25
 7d4:	80 95       	com	r24
 7d6:	70 95       	com	r23
 7d8:	61 95       	neg	r22
 7da:	7f 4f       	sbci	r23, 0xFF	; 255
 7dc:	8f 4f       	sbci	r24, 0xFF	; 255
 7de:	9f 4f       	sbci	r25, 0xFF	; 255
 7e0:	08 95       	ret

000007e2 <__floatunsisf>:
 7e2:	e8 94       	clt
 7e4:	09 c0       	rjmp	.+18     	; 0x7f8 <__floatsisf+0x12>

000007e6 <__floatsisf>:
 7e6:	97 fb       	bst	r25, 7
 7e8:	3e f4       	brtc	.+14     	; 0x7f8 <__floatsisf+0x12>
 7ea:	90 95       	com	r25
 7ec:	80 95       	com	r24
 7ee:	70 95       	com	r23
 7f0:	61 95       	neg	r22
 7f2:	7f 4f       	sbci	r23, 0xFF	; 255
 7f4:	8f 4f       	sbci	r24, 0xFF	; 255
 7f6:	9f 4f       	sbci	r25, 0xFF	; 255
 7f8:	99 23       	and	r25, r25
 7fa:	a9 f0       	breq	.+42     	; 0x826 <__floatsisf+0x40>
 7fc:	f9 2f       	mov	r31, r25
 7fe:	96 e9       	ldi	r25, 0x96	; 150
 800:	bb 27       	eor	r27, r27
 802:	93 95       	inc	r25
 804:	f6 95       	lsr	r31
 806:	87 95       	ror	r24
 808:	77 95       	ror	r23
 80a:	67 95       	ror	r22
 80c:	b7 95       	ror	r27
 80e:	f1 11       	cpse	r31, r1
 810:	f8 cf       	rjmp	.-16     	; 0x802 <__floatsisf+0x1c>
 812:	fa f4       	brpl	.+62     	; 0x852 <__floatsisf+0x6c>
 814:	bb 0f       	add	r27, r27
 816:	11 f4       	brne	.+4      	; 0x81c <__floatsisf+0x36>
 818:	60 ff       	sbrs	r22, 0
 81a:	1b c0       	rjmp	.+54     	; 0x852 <__floatsisf+0x6c>
 81c:	6f 5f       	subi	r22, 0xFF	; 255
 81e:	7f 4f       	sbci	r23, 0xFF	; 255
 820:	8f 4f       	sbci	r24, 0xFF	; 255
 822:	9f 4f       	sbci	r25, 0xFF	; 255
 824:	16 c0       	rjmp	.+44     	; 0x852 <__floatsisf+0x6c>
 826:	88 23       	and	r24, r24
 828:	11 f0       	breq	.+4      	; 0x82e <__floatsisf+0x48>
 82a:	96 e9       	ldi	r25, 0x96	; 150
 82c:	11 c0       	rjmp	.+34     	; 0x850 <__floatsisf+0x6a>
 82e:	77 23       	and	r23, r23
 830:	21 f0       	breq	.+8      	; 0x83a <__floatsisf+0x54>
 832:	9e e8       	ldi	r25, 0x8E	; 142
 834:	87 2f       	mov	r24, r23
 836:	76 2f       	mov	r23, r22
 838:	05 c0       	rjmp	.+10     	; 0x844 <__floatsisf+0x5e>
 83a:	66 23       	and	r22, r22
 83c:	71 f0       	breq	.+28     	; 0x85a <__floatsisf+0x74>
 83e:	96 e8       	ldi	r25, 0x86	; 134
 840:	86 2f       	mov	r24, r22
 842:	70 e0       	ldi	r23, 0x00	; 0
 844:	60 e0       	ldi	r22, 0x00	; 0
 846:	2a f0       	brmi	.+10     	; 0x852 <__floatsisf+0x6c>
 848:	9a 95       	dec	r25
 84a:	66 0f       	add	r22, r22
 84c:	77 1f       	adc	r23, r23
 84e:	88 1f       	adc	r24, r24
 850:	da f7       	brpl	.-10     	; 0x848 <__floatsisf+0x62>
 852:	88 0f       	add	r24, r24
 854:	96 95       	lsr	r25
 856:	87 95       	ror	r24
 858:	97 f9       	bld	r25, 7
 85a:	08 95       	ret

0000085c <__fp_inf>:
 85c:	97 f9       	bld	r25, 7
 85e:	9f 67       	ori	r25, 0x7F	; 127
 860:	80 e8       	ldi	r24, 0x80	; 128
 862:	70 e0       	ldi	r23, 0x00	; 0
 864:	60 e0       	ldi	r22, 0x00	; 0
 866:	08 95       	ret

00000868 <__fp_nan>:
 868:	9f ef       	ldi	r25, 0xFF	; 255
 86a:	80 ec       	ldi	r24, 0xC0	; 192
 86c:	08 95       	ret

0000086e <__fp_pscA>:
 86e:	00 24       	eor	r0, r0
 870:	0a 94       	dec	r0
 872:	16 16       	cp	r1, r22
 874:	17 06       	cpc	r1, r23
 876:	18 06       	cpc	r1, r24
 878:	09 06       	cpc	r0, r25
 87a:	08 95       	ret

0000087c <__fp_pscB>:
 87c:	00 24       	eor	r0, r0
 87e:	0a 94       	dec	r0
 880:	12 16       	cp	r1, r18
 882:	13 06       	cpc	r1, r19
 884:	14 06       	cpc	r1, r20
 886:	05 06       	cpc	r0, r21
 888:	08 95       	ret

0000088a <__fp_round>:
 88a:	09 2e       	mov	r0, r25
 88c:	03 94       	inc	r0
 88e:	00 0c       	add	r0, r0
 890:	11 f4       	brne	.+4      	; 0x896 <__fp_round+0xc>
 892:	88 23       	and	r24, r24
 894:	52 f0       	brmi	.+20     	; 0x8aa <__fp_round+0x20>
 896:	bb 0f       	add	r27, r27
 898:	40 f4       	brcc	.+16     	; 0x8aa <__fp_round+0x20>
 89a:	bf 2b       	or	r27, r31
 89c:	11 f4       	brne	.+4      	; 0x8a2 <__fp_round+0x18>
 89e:	60 ff       	sbrs	r22, 0
 8a0:	04 c0       	rjmp	.+8      	; 0x8aa <__fp_round+0x20>
 8a2:	6f 5f       	subi	r22, 0xFF	; 255
 8a4:	7f 4f       	sbci	r23, 0xFF	; 255
 8a6:	8f 4f       	sbci	r24, 0xFF	; 255
 8a8:	9f 4f       	sbci	r25, 0xFF	; 255
 8aa:	08 95       	ret

000008ac <__fp_split3>:
 8ac:	57 fd       	sbrc	r21, 7
 8ae:	90 58       	subi	r25, 0x80	; 128
 8b0:	44 0f       	add	r20, r20
 8b2:	55 1f       	adc	r21, r21
 8b4:	59 f0       	breq	.+22     	; 0x8cc <__fp_splitA+0x10>
 8b6:	5f 3f       	cpi	r21, 0xFF	; 255
 8b8:	71 f0       	breq	.+28     	; 0x8d6 <__fp_splitA+0x1a>
 8ba:	47 95       	ror	r20

000008bc <__fp_splitA>:
 8bc:	88 0f       	add	r24, r24
 8be:	97 fb       	bst	r25, 7
 8c0:	99 1f       	adc	r25, r25
 8c2:	61 f0       	breq	.+24     	; 0x8dc <__fp_splitA+0x20>
 8c4:	9f 3f       	cpi	r25, 0xFF	; 255
 8c6:	79 f0       	breq	.+30     	; 0x8e6 <__fp_splitA+0x2a>
 8c8:	87 95       	ror	r24
 8ca:	08 95       	ret
 8cc:	12 16       	cp	r1, r18
 8ce:	13 06       	cpc	r1, r19
 8d0:	14 06       	cpc	r1, r20
 8d2:	55 1f       	adc	r21, r21
 8d4:	f2 cf       	rjmp	.-28     	; 0x8ba <__fp_split3+0xe>
 8d6:	46 95       	lsr	r20
 8d8:	f1 df       	rcall	.-30     	; 0x8bc <__fp_splitA>
 8da:	08 c0       	rjmp	.+16     	; 0x8ec <__fp_splitA+0x30>
 8dc:	16 16       	cp	r1, r22
 8de:	17 06       	cpc	r1, r23
 8e0:	18 06       	cpc	r1, r24
 8e2:	99 1f       	adc	r25, r25
 8e4:	f1 cf       	rjmp	.-30     	; 0x8c8 <__fp_splitA+0xc>
 8e6:	86 95       	lsr	r24
 8e8:	71 05       	cpc	r23, r1
 8ea:	61 05       	cpc	r22, r1
 8ec:	08 94       	sec
 8ee:	08 95       	ret

000008f0 <__fp_zero>:
 8f0:	e8 94       	clt

000008f2 <__fp_szero>:
 8f2:	bb 27       	eor	r27, r27
 8f4:	66 27       	eor	r22, r22
 8f6:	77 27       	eor	r23, r23
 8f8:	cb 01       	movw	r24, r22
 8fa:	97 f9       	bld	r25, 7
 8fc:	08 95       	ret

000008fe <__gesf2>:
 8fe:	2e d1       	rcall	.+604    	; 0xb5c <__fp_cmp>
 900:	08 f4       	brcc	.+2      	; 0x904 <__gesf2+0x6>
 902:	8f ef       	ldi	r24, 0xFF	; 255
 904:	08 95       	ret

00000906 <log10>:
 906:	0a d0       	rcall	.+20     	; 0x91c <log>
 908:	29 ed       	ldi	r18, 0xD9	; 217
 90a:	3b e5       	ldi	r19, 0x5B	; 91
 90c:	4e ed       	ldi	r20, 0xDE	; 222
 90e:	5e e3       	ldi	r21, 0x3E	; 62
 910:	45 c0       	rjmp	.+138    	; 0x99c <__mulsf3>
 912:	0e f0       	brts	.+2      	; 0x916 <log10+0x10>
 914:	47 c1       	rjmp	.+654    	; 0xba4 <__fp_mpack>
 916:	a8 cf       	rjmp	.-176    	; 0x868 <__fp_nan>
 918:	68 94       	set
 91a:	a0 cf       	rjmp	.-192    	; 0x85c <__fp_inf>

0000091c <log>:
 91c:	cf df       	rcall	.-98     	; 0x8bc <__fp_splitA>
 91e:	c8 f3       	brcs	.-14     	; 0x912 <log10+0xc>
 920:	99 23       	and	r25, r25
 922:	d1 f3       	breq	.-12     	; 0x918 <log10+0x12>
 924:	c6 f3       	brts	.-16     	; 0x916 <log10+0x10>
 926:	df 93       	push	r29
 928:	cf 93       	push	r28
 92a:	1f 93       	push	r17
 92c:	0f 93       	push	r16
 92e:	ff 92       	push	r15
 930:	c9 2f       	mov	r28, r25
 932:	dd 27       	eor	r29, r29
 934:	88 23       	and	r24, r24
 936:	2a f0       	brmi	.+10     	; 0x942 <log+0x26>
 938:	21 97       	sbiw	r28, 0x01	; 1
 93a:	66 0f       	add	r22, r22
 93c:	77 1f       	adc	r23, r23
 93e:	88 1f       	adc	r24, r24
 940:	da f7       	brpl	.-10     	; 0x938 <log+0x1c>
 942:	20 e0       	ldi	r18, 0x00	; 0
 944:	30 e0       	ldi	r19, 0x00	; 0
 946:	40 e8       	ldi	r20, 0x80	; 128
 948:	5f eb       	ldi	r21, 0xBF	; 191
 94a:	9f e3       	ldi	r25, 0x3F	; 63
 94c:	88 39       	cpi	r24, 0x98	; 152
 94e:	20 f0       	brcs	.+8      	; 0x958 <log+0x3c>
 950:	80 3e       	cpi	r24, 0xE0	; 224
 952:	30 f0       	brcs	.+12     	; 0x960 <log+0x44>
 954:	21 96       	adiw	r28, 0x01	; 1
 956:	8f 77       	andi	r24, 0x7F	; 127
 958:	47 de       	rcall	.-882    	; 0x5e8 <__addsf3>
 95a:	ec e8       	ldi	r30, 0x8C	; 140
 95c:	f0 e0       	ldi	r31, 0x00	; 0
 95e:	03 c0       	rjmp	.+6      	; 0x966 <log+0x4a>
 960:	43 de       	rcall	.-890    	; 0x5e8 <__addsf3>
 962:	e9 eb       	ldi	r30, 0xB9	; 185
 964:	f0 e0       	ldi	r31, 0x00	; 0
 966:	2c d1       	rcall	.+600    	; 0xbc0 <__fp_powser>
 968:	8b 01       	movw	r16, r22
 96a:	be 01       	movw	r22, r28
 96c:	ec 01       	movw	r28, r24
 96e:	fb 2e       	mov	r15, r27
 970:	6f 57       	subi	r22, 0x7F	; 127
 972:	71 09       	sbc	r23, r1
 974:	75 95       	asr	r23
 976:	77 1f       	adc	r23, r23
 978:	88 0b       	sbc	r24, r24
 97a:	99 0b       	sbc	r25, r25
 97c:	34 df       	rcall	.-408    	; 0x7e6 <__floatsisf>
 97e:	28 e1       	ldi	r18, 0x18	; 24
 980:	32 e7       	ldi	r19, 0x72	; 114
 982:	41 e3       	ldi	r20, 0x31	; 49
 984:	5f e3       	ldi	r21, 0x3F	; 63
 986:	16 d0       	rcall	.+44     	; 0x9b4 <__mulsf3x>
 988:	af 2d       	mov	r26, r15
 98a:	98 01       	movw	r18, r16
 98c:	ae 01       	movw	r20, r28
 98e:	ff 90       	pop	r15
 990:	0f 91       	pop	r16
 992:	1f 91       	pop	r17
 994:	cf 91       	pop	r28
 996:	df 91       	pop	r29
 998:	38 de       	rcall	.-912    	; 0x60a <__addsf3x>
 99a:	77 cf       	rjmp	.-274    	; 0x88a <__fp_round>

0000099c <__mulsf3>:
 99c:	0b d0       	rcall	.+22     	; 0x9b4 <__mulsf3x>
 99e:	75 cf       	rjmp	.-278    	; 0x88a <__fp_round>
 9a0:	66 df       	rcall	.-308    	; 0x86e <__fp_pscA>
 9a2:	28 f0       	brcs	.+10     	; 0x9ae <__mulsf3+0x12>
 9a4:	6b df       	rcall	.-298    	; 0x87c <__fp_pscB>
 9a6:	18 f0       	brcs	.+6      	; 0x9ae <__mulsf3+0x12>
 9a8:	95 23       	and	r25, r21
 9aa:	09 f0       	breq	.+2      	; 0x9ae <__mulsf3+0x12>
 9ac:	57 cf       	rjmp	.-338    	; 0x85c <__fp_inf>
 9ae:	5c cf       	rjmp	.-328    	; 0x868 <__fp_nan>
 9b0:	11 24       	eor	r1, r1
 9b2:	9f cf       	rjmp	.-194    	; 0x8f2 <__fp_szero>

000009b4 <__mulsf3x>:
 9b4:	7b df       	rcall	.-266    	; 0x8ac <__fp_split3>
 9b6:	a0 f3       	brcs	.-24     	; 0x9a0 <__mulsf3+0x4>

000009b8 <__mulsf3_pse>:
 9b8:	95 9f       	mul	r25, r21
 9ba:	d1 f3       	breq	.-12     	; 0x9b0 <__mulsf3+0x14>
 9bc:	95 0f       	add	r25, r21
 9be:	50 e0       	ldi	r21, 0x00	; 0
 9c0:	55 1f       	adc	r21, r21
 9c2:	62 9f       	mul	r22, r18
 9c4:	f0 01       	movw	r30, r0
 9c6:	72 9f       	mul	r23, r18
 9c8:	bb 27       	eor	r27, r27
 9ca:	f0 0d       	add	r31, r0
 9cc:	b1 1d       	adc	r27, r1
 9ce:	63 9f       	mul	r22, r19
 9d0:	aa 27       	eor	r26, r26
 9d2:	f0 0d       	add	r31, r0
 9d4:	b1 1d       	adc	r27, r1
 9d6:	aa 1f       	adc	r26, r26
 9d8:	64 9f       	mul	r22, r20
 9da:	66 27       	eor	r22, r22
 9dc:	b0 0d       	add	r27, r0
 9de:	a1 1d       	adc	r26, r1
 9e0:	66 1f       	adc	r22, r22
 9e2:	82 9f       	mul	r24, r18
 9e4:	22 27       	eor	r18, r18
 9e6:	b0 0d       	add	r27, r0
 9e8:	a1 1d       	adc	r26, r1
 9ea:	62 1f       	adc	r22, r18
 9ec:	73 9f       	mul	r23, r19
 9ee:	b0 0d       	add	r27, r0
 9f0:	a1 1d       	adc	r26, r1
 9f2:	62 1f       	adc	r22, r18
 9f4:	83 9f       	mul	r24, r19
 9f6:	a0 0d       	add	r26, r0
 9f8:	61 1d       	adc	r22, r1
 9fa:	22 1f       	adc	r18, r18
 9fc:	74 9f       	mul	r23, r20
 9fe:	33 27       	eor	r19, r19
 a00:	a0 0d       	add	r26, r0
 a02:	61 1d       	adc	r22, r1
 a04:	23 1f       	adc	r18, r19
 a06:	84 9f       	mul	r24, r20
 a08:	60 0d       	add	r22, r0
 a0a:	21 1d       	adc	r18, r1
 a0c:	82 2f       	mov	r24, r18
 a0e:	76 2f       	mov	r23, r22
 a10:	6a 2f       	mov	r22, r26
 a12:	11 24       	eor	r1, r1
 a14:	9f 57       	subi	r25, 0x7F	; 127
 a16:	50 40       	sbci	r21, 0x00	; 0
 a18:	8a f0       	brmi	.+34     	; 0xa3c <__mulsf3_pse+0x84>
 a1a:	e1 f0       	breq	.+56     	; 0xa54 <__mulsf3_pse+0x9c>
 a1c:	88 23       	and	r24, r24
 a1e:	4a f0       	brmi	.+18     	; 0xa32 <__mulsf3_pse+0x7a>
 a20:	ee 0f       	add	r30, r30
 a22:	ff 1f       	adc	r31, r31
 a24:	bb 1f       	adc	r27, r27
 a26:	66 1f       	adc	r22, r22
 a28:	77 1f       	adc	r23, r23
 a2a:	88 1f       	adc	r24, r24
 a2c:	91 50       	subi	r25, 0x01	; 1
 a2e:	50 40       	sbci	r21, 0x00	; 0
 a30:	a9 f7       	brne	.-22     	; 0xa1c <__mulsf3_pse+0x64>
 a32:	9e 3f       	cpi	r25, 0xFE	; 254
 a34:	51 05       	cpc	r21, r1
 a36:	70 f0       	brcs	.+28     	; 0xa54 <__mulsf3_pse+0x9c>
 a38:	11 cf       	rjmp	.-478    	; 0x85c <__fp_inf>
 a3a:	5b cf       	rjmp	.-330    	; 0x8f2 <__fp_szero>
 a3c:	5f 3f       	cpi	r21, 0xFF	; 255
 a3e:	ec f3       	brlt	.-6      	; 0xa3a <__mulsf3_pse+0x82>
 a40:	98 3e       	cpi	r25, 0xE8	; 232
 a42:	dc f3       	brlt	.-10     	; 0xa3a <__mulsf3_pse+0x82>
 a44:	86 95       	lsr	r24
 a46:	77 95       	ror	r23
 a48:	67 95       	ror	r22
 a4a:	b7 95       	ror	r27
 a4c:	f7 95       	ror	r31
 a4e:	e7 95       	ror	r30
 a50:	9f 5f       	subi	r25, 0xFF	; 255
 a52:	c1 f7       	brne	.-16     	; 0xa44 <__mulsf3_pse+0x8c>
 a54:	fe 2b       	or	r31, r30
 a56:	88 0f       	add	r24, r24
 a58:	91 1d       	adc	r25, r1
 a5a:	96 95       	lsr	r25
 a5c:	87 95       	ror	r24
 a5e:	97 f9       	bld	r25, 7
 a60:	08 95       	ret

00000a62 <pow>:
 a62:	fa 01       	movw	r30, r20
 a64:	ee 0f       	add	r30, r30
 a66:	ff 1f       	adc	r31, r31
 a68:	30 96       	adiw	r30, 0x00	; 0
 a6a:	21 05       	cpc	r18, r1
 a6c:	31 05       	cpc	r19, r1
 a6e:	99 f1       	breq	.+102    	; 0xad6 <pow+0x74>
 a70:	61 15       	cp	r22, r1
 a72:	71 05       	cpc	r23, r1
 a74:	61 f4       	brne	.+24     	; 0xa8e <pow+0x2c>
 a76:	80 38       	cpi	r24, 0x80	; 128
 a78:	bf e3       	ldi	r27, 0x3F	; 63
 a7a:	9b 07       	cpc	r25, r27
 a7c:	49 f1       	breq	.+82     	; 0xad0 <pow+0x6e>
 a7e:	68 94       	set
 a80:	90 38       	cpi	r25, 0x80	; 128
 a82:	81 05       	cpc	r24, r1
 a84:	61 f0       	breq	.+24     	; 0xa9e <pow+0x3c>
 a86:	80 38       	cpi	r24, 0x80	; 128
 a88:	bf ef       	ldi	r27, 0xFF	; 255
 a8a:	9b 07       	cpc	r25, r27
 a8c:	41 f0       	breq	.+16     	; 0xa9e <pow+0x3c>
 a8e:	99 23       	and	r25, r25
 a90:	42 f5       	brpl	.+80     	; 0xae2 <pow+0x80>
 a92:	ff 3f       	cpi	r31, 0xFF	; 255
 a94:	e1 05       	cpc	r30, r1
 a96:	31 05       	cpc	r19, r1
 a98:	21 05       	cpc	r18, r1
 a9a:	11 f1       	breq	.+68     	; 0xae0 <pow+0x7e>
 a9c:	e8 94       	clt
 a9e:	08 94       	sec
 aa0:	e7 95       	ror	r30
 aa2:	d9 01       	movw	r26, r18
 aa4:	aa 23       	and	r26, r26
 aa6:	29 f4       	brne	.+10     	; 0xab2 <pow+0x50>
 aa8:	ab 2f       	mov	r26, r27
 aaa:	be 2f       	mov	r27, r30
 aac:	f8 5f       	subi	r31, 0xF8	; 248
 aae:	d0 f3       	brcs	.-12     	; 0xaa4 <pow+0x42>
 ab0:	10 c0       	rjmp	.+32     	; 0xad2 <pow+0x70>
 ab2:	ff 5f       	subi	r31, 0xFF	; 255
 ab4:	70 f4       	brcc	.+28     	; 0xad2 <pow+0x70>
 ab6:	a6 95       	lsr	r26
 ab8:	e0 f7       	brcc	.-8      	; 0xab2 <pow+0x50>
 aba:	f7 39       	cpi	r31, 0x97	; 151
 abc:	50 f0       	brcs	.+20     	; 0xad2 <pow+0x70>
 abe:	19 f0       	breq	.+6      	; 0xac6 <pow+0x64>
 ac0:	ff 3a       	cpi	r31, 0xAF	; 175
 ac2:	38 f4       	brcc	.+14     	; 0xad2 <pow+0x70>
 ac4:	9f 77       	andi	r25, 0x7F	; 127
 ac6:	9f 93       	push	r25
 ac8:	0c d0       	rcall	.+24     	; 0xae2 <pow+0x80>
 aca:	0f 90       	pop	r0
 acc:	07 fc       	sbrc	r0, 7
 ace:	90 58       	subi	r25, 0x80	; 128
 ad0:	08 95       	ret
 ad2:	3e f0       	brts	.+14     	; 0xae2 <pow+0x80>
 ad4:	c9 ce       	rjmp	.-622    	; 0x868 <__fp_nan>
 ad6:	60 e0       	ldi	r22, 0x00	; 0
 ad8:	70 e0       	ldi	r23, 0x00	; 0
 ada:	80 e8       	ldi	r24, 0x80	; 128
 adc:	9f e3       	ldi	r25, 0x3F	; 63
 ade:	08 95       	ret
 ae0:	4f e7       	ldi	r20, 0x7F	; 127
 ae2:	9f 77       	andi	r25, 0x7F	; 127
 ae4:	5f 93       	push	r21
 ae6:	4f 93       	push	r20
 ae8:	3f 93       	push	r19
 aea:	2f 93       	push	r18
 aec:	17 df       	rcall	.-466    	; 0x91c <log>
 aee:	2f 91       	pop	r18
 af0:	3f 91       	pop	r19
 af2:	4f 91       	pop	r20
 af4:	5f 91       	pop	r21
 af6:	52 df       	rcall	.-348    	; 0x99c <__mulsf3>
 af8:	05 c0       	rjmp	.+10     	; 0xb04 <exp>
 afa:	19 f4       	brne	.+6      	; 0xb02 <pow+0xa0>
 afc:	0e f0       	brts	.+2      	; 0xb00 <pow+0x9e>
 afe:	ae ce       	rjmp	.-676    	; 0x85c <__fp_inf>
 b00:	f7 ce       	rjmp	.-530    	; 0x8f0 <__fp_zero>
 b02:	b2 ce       	rjmp	.-668    	; 0x868 <__fp_nan>

00000b04 <exp>:
 b04:	db de       	rcall	.-586    	; 0x8bc <__fp_splitA>
 b06:	c8 f3       	brcs	.-14     	; 0xafa <pow+0x98>
 b08:	96 38       	cpi	r25, 0x86	; 134
 b0a:	c0 f7       	brcc	.-16     	; 0xafc <pow+0x9a>
 b0c:	07 f8       	bld	r0, 7
 b0e:	0f 92       	push	r0
 b10:	e8 94       	clt
 b12:	2b e3       	ldi	r18, 0x3B	; 59
 b14:	3a ea       	ldi	r19, 0xAA	; 170
 b16:	48 eb       	ldi	r20, 0xB8	; 184
 b18:	5f e7       	ldi	r21, 0x7F	; 127
 b1a:	4e df       	rcall	.-356    	; 0x9b8 <__mulsf3_pse>
 b1c:	0f 92       	push	r0
 b1e:	0f 92       	push	r0
 b20:	0f 92       	push	r0
 b22:	4d b7       	in	r20, 0x3d	; 61
 b24:	5e b7       	in	r21, 0x3e	; 62
 b26:	0f 92       	push	r0
 b28:	ad d0       	rcall	.+346    	; 0xc84 <modf>
 b2a:	e6 ee       	ldi	r30, 0xE6	; 230
 b2c:	f0 e0       	ldi	r31, 0x00	; 0
 b2e:	48 d0       	rcall	.+144    	; 0xbc0 <__fp_powser>
 b30:	4f 91       	pop	r20
 b32:	5f 91       	pop	r21
 b34:	ef 91       	pop	r30
 b36:	ff 91       	pop	r31
 b38:	e5 95       	asr	r30
 b3a:	ee 1f       	adc	r30, r30
 b3c:	ff 1f       	adc	r31, r31
 b3e:	49 f0       	breq	.+18     	; 0xb52 <exp+0x4e>
 b40:	fe 57       	subi	r31, 0x7E	; 126
 b42:	e0 68       	ori	r30, 0x80	; 128
 b44:	44 27       	eor	r20, r20
 b46:	ee 0f       	add	r30, r30
 b48:	44 1f       	adc	r20, r20
 b4a:	fa 95       	dec	r31
 b4c:	e1 f7       	brne	.-8      	; 0xb46 <exp+0x42>
 b4e:	41 95       	neg	r20
 b50:	55 0b       	sbc	r21, r21
 b52:	64 d0       	rcall	.+200    	; 0xc1c <ldexp>
 b54:	0f 90       	pop	r0
 b56:	07 fe       	sbrs	r0, 7
 b58:	58 c0       	rjmp	.+176    	; 0xc0a <inverse>
 b5a:	08 95       	ret

00000b5c <__fp_cmp>:
 b5c:	99 0f       	add	r25, r25
 b5e:	00 08       	sbc	r0, r0
 b60:	55 0f       	add	r21, r21
 b62:	aa 0b       	sbc	r26, r26
 b64:	e0 e8       	ldi	r30, 0x80	; 128
 b66:	fe ef       	ldi	r31, 0xFE	; 254
 b68:	16 16       	cp	r1, r22
 b6a:	17 06       	cpc	r1, r23
 b6c:	e8 07       	cpc	r30, r24
 b6e:	f9 07       	cpc	r31, r25
 b70:	c0 f0       	brcs	.+48     	; 0xba2 <__fp_cmp+0x46>
 b72:	12 16       	cp	r1, r18
 b74:	13 06       	cpc	r1, r19
 b76:	e4 07       	cpc	r30, r20
 b78:	f5 07       	cpc	r31, r21
 b7a:	98 f0       	brcs	.+38     	; 0xba2 <__fp_cmp+0x46>
 b7c:	62 1b       	sub	r22, r18
 b7e:	73 0b       	sbc	r23, r19
 b80:	84 0b       	sbc	r24, r20
 b82:	95 0b       	sbc	r25, r21
 b84:	39 f4       	brne	.+14     	; 0xb94 <__fp_cmp+0x38>
 b86:	0a 26       	eor	r0, r26
 b88:	61 f0       	breq	.+24     	; 0xba2 <__fp_cmp+0x46>
 b8a:	23 2b       	or	r18, r19
 b8c:	24 2b       	or	r18, r20
 b8e:	25 2b       	or	r18, r21
 b90:	21 f4       	brne	.+8      	; 0xb9a <__fp_cmp+0x3e>
 b92:	08 95       	ret
 b94:	0a 26       	eor	r0, r26
 b96:	09 f4       	brne	.+2      	; 0xb9a <__fp_cmp+0x3e>
 b98:	a1 40       	sbci	r26, 0x01	; 1
 b9a:	a6 95       	lsr	r26
 b9c:	8f ef       	ldi	r24, 0xFF	; 255
 b9e:	81 1d       	adc	r24, r1
 ba0:	81 1d       	adc	r24, r1
 ba2:	08 95       	ret

00000ba4 <__fp_mpack>:
 ba4:	9f 3f       	cpi	r25, 0xFF	; 255
 ba6:	31 f0       	breq	.+12     	; 0xbb4 <__fp_mpack_finite+0xc>

00000ba8 <__fp_mpack_finite>:
 ba8:	91 50       	subi	r25, 0x01	; 1
 baa:	20 f4       	brcc	.+8      	; 0xbb4 <__fp_mpack_finite+0xc>
 bac:	87 95       	ror	r24
 bae:	77 95       	ror	r23
 bb0:	67 95       	ror	r22
 bb2:	b7 95       	ror	r27
 bb4:	88 0f       	add	r24, r24
 bb6:	91 1d       	adc	r25, r1
 bb8:	96 95       	lsr	r25
 bba:	87 95       	ror	r24
 bbc:	97 f9       	bld	r25, 7
 bbe:	08 95       	ret

00000bc0 <__fp_powser>:
 bc0:	df 93       	push	r29
 bc2:	cf 93       	push	r28
 bc4:	1f 93       	push	r17
 bc6:	0f 93       	push	r16
 bc8:	ff 92       	push	r15
 bca:	ef 92       	push	r14
 bcc:	df 92       	push	r13
 bce:	7b 01       	movw	r14, r22
 bd0:	8c 01       	movw	r16, r24
 bd2:	68 94       	set
 bd4:	05 c0       	rjmp	.+10     	; 0xbe0 <__fp_powser+0x20>
 bd6:	da 2e       	mov	r13, r26
 bd8:	ef 01       	movw	r28, r30
 bda:	ec de       	rcall	.-552    	; 0x9b4 <__mulsf3x>
 bdc:	fe 01       	movw	r30, r28
 bde:	e8 94       	clt
 be0:	a5 91       	lpm	r26, Z+
 be2:	25 91       	lpm	r18, Z+
 be4:	35 91       	lpm	r19, Z+
 be6:	45 91       	lpm	r20, Z+
 be8:	55 91       	lpm	r21, Z+
 bea:	ae f3       	brts	.-22     	; 0xbd6 <__fp_powser+0x16>
 bec:	ef 01       	movw	r28, r30
 bee:	0d dd       	rcall	.-1510   	; 0x60a <__addsf3x>
 bf0:	fe 01       	movw	r30, r28
 bf2:	97 01       	movw	r18, r14
 bf4:	a8 01       	movw	r20, r16
 bf6:	da 94       	dec	r13
 bf8:	79 f7       	brne	.-34     	; 0xbd8 <__fp_powser+0x18>
 bfa:	df 90       	pop	r13
 bfc:	ef 90       	pop	r14
 bfe:	ff 90       	pop	r15
 c00:	0f 91       	pop	r16
 c02:	1f 91       	pop	r17
 c04:	cf 91       	pop	r28
 c06:	df 91       	pop	r29
 c08:	08 95       	ret

00000c0a <inverse>:
 c0a:	9b 01       	movw	r18, r22
 c0c:	ac 01       	movw	r20, r24
 c0e:	60 e0       	ldi	r22, 0x00	; 0
 c10:	70 e0       	ldi	r23, 0x00	; 0
 c12:	80 e8       	ldi	r24, 0x80	; 128
 c14:	9f e3       	ldi	r25, 0x3F	; 63
 c16:	4c cd       	rjmp	.-1384   	; 0x6b0 <__divsf3>
 c18:	21 ce       	rjmp	.-958    	; 0x85c <__fp_inf>
 c1a:	c4 cf       	rjmp	.-120    	; 0xba4 <__fp_mpack>

00000c1c <ldexp>:
 c1c:	4f de       	rcall	.-866    	; 0x8bc <__fp_splitA>
 c1e:	e8 f3       	brcs	.-6      	; 0xc1a <inverse+0x10>
 c20:	99 23       	and	r25, r25
 c22:	d9 f3       	breq	.-10     	; 0xc1a <inverse+0x10>
 c24:	94 0f       	add	r25, r20
 c26:	51 1d       	adc	r21, r1
 c28:	bb f3       	brvs	.-18     	; 0xc18 <inverse+0xe>
 c2a:	91 50       	subi	r25, 0x01	; 1
 c2c:	50 40       	sbci	r21, 0x00	; 0
 c2e:	94 f0       	brlt	.+36     	; 0xc54 <ldexp+0x38>
 c30:	59 f0       	breq	.+22     	; 0xc48 <ldexp+0x2c>
 c32:	88 23       	and	r24, r24
 c34:	32 f0       	brmi	.+12     	; 0xc42 <ldexp+0x26>
 c36:	66 0f       	add	r22, r22
 c38:	77 1f       	adc	r23, r23
 c3a:	88 1f       	adc	r24, r24
 c3c:	91 50       	subi	r25, 0x01	; 1
 c3e:	50 40       	sbci	r21, 0x00	; 0
 c40:	c1 f7       	brne	.-16     	; 0xc32 <ldexp+0x16>
 c42:	9e 3f       	cpi	r25, 0xFE	; 254
 c44:	51 05       	cpc	r21, r1
 c46:	44 f7       	brge	.-48     	; 0xc18 <inverse+0xe>
 c48:	88 0f       	add	r24, r24
 c4a:	91 1d       	adc	r25, r1
 c4c:	96 95       	lsr	r25
 c4e:	87 95       	ror	r24
 c50:	97 f9       	bld	r25, 7
 c52:	08 95       	ret
 c54:	5f 3f       	cpi	r21, 0xFF	; 255
 c56:	ac f0       	brlt	.+42     	; 0xc82 <ldexp+0x66>
 c58:	98 3e       	cpi	r25, 0xE8	; 232
 c5a:	9c f0       	brlt	.+38     	; 0xc82 <ldexp+0x66>
 c5c:	bb 27       	eor	r27, r27
 c5e:	86 95       	lsr	r24
 c60:	77 95       	ror	r23
 c62:	67 95       	ror	r22
 c64:	b7 95       	ror	r27
 c66:	08 f4       	brcc	.+2      	; 0xc6a <ldexp+0x4e>
 c68:	b1 60       	ori	r27, 0x01	; 1
 c6a:	93 95       	inc	r25
 c6c:	c1 f7       	brne	.-16     	; 0xc5e <ldexp+0x42>
 c6e:	bb 0f       	add	r27, r27
 c70:	58 f7       	brcc	.-42     	; 0xc48 <ldexp+0x2c>
 c72:	11 f4       	brne	.+4      	; 0xc78 <ldexp+0x5c>
 c74:	60 ff       	sbrs	r22, 0
 c76:	e8 cf       	rjmp	.-48     	; 0xc48 <ldexp+0x2c>
 c78:	6f 5f       	subi	r22, 0xFF	; 255
 c7a:	7f 4f       	sbci	r23, 0xFF	; 255
 c7c:	8f 4f       	sbci	r24, 0xFF	; 255
 c7e:	9f 4f       	sbci	r25, 0xFF	; 255
 c80:	e3 cf       	rjmp	.-58     	; 0xc48 <ldexp+0x2c>
 c82:	37 ce       	rjmp	.-914    	; 0x8f2 <__fp_szero>

00000c84 <modf>:
 c84:	fa 01       	movw	r30, r20
 c86:	dc 01       	movw	r26, r24
 c88:	aa 0f       	add	r26, r26
 c8a:	bb 1f       	adc	r27, r27
 c8c:	9b 01       	movw	r18, r22
 c8e:	ac 01       	movw	r20, r24
 c90:	bf 57       	subi	r27, 0x7F	; 127
 c92:	28 f4       	brcc	.+10     	; 0xc9e <modf+0x1a>
 c94:	22 27       	eor	r18, r18
 c96:	33 27       	eor	r19, r19
 c98:	44 27       	eor	r20, r20
 c9a:	50 78       	andi	r21, 0x80	; 128
 c9c:	1f c0       	rjmp	.+62     	; 0xcdc <modf+0x58>
 c9e:	b7 51       	subi	r27, 0x17	; 23
 ca0:	88 f4       	brcc	.+34     	; 0xcc4 <modf+0x40>
 ca2:	ab 2f       	mov	r26, r27
 ca4:	00 24       	eor	r0, r0
 ca6:	46 95       	lsr	r20
 ca8:	37 95       	ror	r19
 caa:	27 95       	ror	r18
 cac:	01 1c       	adc	r0, r1
 cae:	a3 95       	inc	r26
 cb0:	d2 f3       	brmi	.-12     	; 0xca6 <modf+0x22>
 cb2:	00 20       	and	r0, r0
 cb4:	69 f0       	breq	.+26     	; 0xcd0 <modf+0x4c>
 cb6:	22 0f       	add	r18, r18
 cb8:	33 1f       	adc	r19, r19
 cba:	44 1f       	adc	r20, r20
 cbc:	b3 95       	inc	r27
 cbe:	da f3       	brmi	.-10     	; 0xcb6 <modf+0x32>
 cc0:	0d d0       	rcall	.+26     	; 0xcdc <modf+0x58>
 cc2:	91 cc       	rjmp	.-1758   	; 0x5e6 <__subsf3>
 cc4:	61 30       	cpi	r22, 0x01	; 1
 cc6:	71 05       	cpc	r23, r1
 cc8:	a0 e8       	ldi	r26, 0x80	; 128
 cca:	8a 07       	cpc	r24, r26
 ccc:	b9 46       	sbci	r27, 0x69	; 105
 cce:	30 f4       	brcc	.+12     	; 0xcdc <modf+0x58>
 cd0:	9b 01       	movw	r18, r22
 cd2:	ac 01       	movw	r20, r24
 cd4:	66 27       	eor	r22, r22
 cd6:	77 27       	eor	r23, r23
 cd8:	88 27       	eor	r24, r24
 cda:	90 78       	andi	r25, 0x80	; 128
 cdc:	30 96       	adiw	r30, 0x00	; 0
 cde:	21 f0       	breq	.+8      	; 0xce8 <modf+0x64>
 ce0:	20 83       	st	Z, r18
 ce2:	31 83       	std	Z+1, r19	; 0x01
 ce4:	42 83       	std	Z+2, r20	; 0x02
 ce6:	53 83       	std	Z+3, r21	; 0x03
 ce8:	08 95       	ret

00000cea <__divmodhi4>:
 cea:	97 fb       	bst	r25, 7
 cec:	07 2e       	mov	r0, r23
 cee:	16 f4       	brtc	.+4      	; 0xcf4 <__divmodhi4+0xa>
 cf0:	00 94       	com	r0
 cf2:	06 d0       	rcall	.+12     	; 0xd00 <__divmodhi4_neg1>
 cf4:	77 fd       	sbrc	r23, 7
 cf6:	08 d0       	rcall	.+16     	; 0xd08 <__divmodhi4_neg2>
 cf8:	0b d0       	rcall	.+22     	; 0xd10 <__udivmodhi4>
 cfa:	07 fc       	sbrc	r0, 7
 cfc:	05 d0       	rcall	.+10     	; 0xd08 <__divmodhi4_neg2>
 cfe:	3e f4       	brtc	.+14     	; 0xd0e <__divmodhi4_exit>

00000d00 <__divmodhi4_neg1>:
 d00:	90 95       	com	r25
 d02:	81 95       	neg	r24
 d04:	9f 4f       	sbci	r25, 0xFF	; 255
 d06:	08 95       	ret

00000d08 <__divmodhi4_neg2>:
 d08:	70 95       	com	r23
 d0a:	61 95       	neg	r22
 d0c:	7f 4f       	sbci	r23, 0xFF	; 255

00000d0e <__divmodhi4_exit>:
 d0e:	08 95       	ret

00000d10 <__udivmodhi4>:
 d10:	aa 1b       	sub	r26, r26
 d12:	bb 1b       	sub	r27, r27
 d14:	51 e1       	ldi	r21, 0x11	; 17
 d16:	07 c0       	rjmp	.+14     	; 0xd26 <__udivmodhi4_ep>

00000d18 <__udivmodhi4_loop>:
 d18:	aa 1f       	adc	r26, r26
 d1a:	bb 1f       	adc	r27, r27
 d1c:	a6 17       	cp	r26, r22
 d1e:	b7 07       	cpc	r27, r23
 d20:	10 f0       	brcs	.+4      	; 0xd26 <__udivmodhi4_ep>
 d22:	a6 1b       	sub	r26, r22
 d24:	b7 0b       	sbc	r27, r23

00000d26 <__udivmodhi4_ep>:
 d26:	88 1f       	adc	r24, r24
 d28:	99 1f       	adc	r25, r25
 d2a:	5a 95       	dec	r21
 d2c:	a9 f7       	brne	.-22     	; 0xd18 <__udivmodhi4_loop>
 d2e:	80 95       	com	r24
 d30:	90 95       	com	r25
 d32:	bc 01       	movw	r22, r24
 d34:	cd 01       	movw	r24, r26
 d36:	08 95       	ret

00000d38 <_exit>:
 d38:	f8 94       	cli

00000d3a <__stop_program>:
 d3a:	ff cf       	rjmp	.-2      	; 0xd3a <__stop_program>
