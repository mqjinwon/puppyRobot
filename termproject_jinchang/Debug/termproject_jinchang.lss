
termproject_jinchang.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d1c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800100  00800100  00000d90  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d90  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014f8  00000000  00000000  00000f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a91  00000000  00000000  00002404  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000081a  00000000  00000000  00002e95  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a4  00000000  00000000  000036b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b56  00000000  00000000  00003954  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000622  00000000  00000000  000044aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00004acc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
   2:	00 00       	nop
   4:	94 c0       	rjmp	.+296    	; 0x12e <__bad_interrupt>
   6:	00 00       	nop
   8:	92 c0       	rjmp	.+292    	; 0x12e <__bad_interrupt>
   a:	00 00       	nop
   c:	91 c0       	rjmp	.+290    	; 0x130 <__vector_3>
   e:	00 00       	nop
  10:	8e c0       	rjmp	.+284    	; 0x12e <__bad_interrupt>
  12:	00 00       	nop
  14:	8c c0       	rjmp	.+280    	; 0x12e <__bad_interrupt>
  16:	00 00       	nop
  18:	8a c0       	rjmp	.+276    	; 0x12e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	88 c0       	rjmp	.+272    	; 0x12e <__bad_interrupt>
  1e:	00 00       	nop
  20:	86 c0       	rjmp	.+268    	; 0x12e <__bad_interrupt>
  22:	00 00       	nop
  24:	84 c0       	rjmp	.+264    	; 0x12e <__bad_interrupt>
  26:	00 00       	nop
  28:	82 c0       	rjmp	.+260    	; 0x12e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	80 c0       	rjmp	.+256    	; 0x12e <__bad_interrupt>
  2e:	00 00       	nop
  30:	7e c0       	rjmp	.+252    	; 0x12e <__bad_interrupt>
  32:	00 00       	nop
  34:	7c c0       	rjmp	.+248    	; 0x12e <__bad_interrupt>
  36:	00 00       	nop
  38:	7a c0       	rjmp	.+244    	; 0x12e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	78 c0       	rjmp	.+240    	; 0x12e <__bad_interrupt>
  3e:	00 00       	nop
  40:	76 c0       	rjmp	.+236    	; 0x12e <__bad_interrupt>
  42:	00 00       	nop
  44:	74 c0       	rjmp	.+232    	; 0x12e <__bad_interrupt>
  46:	00 00       	nop
  48:	72 c0       	rjmp	.+228    	; 0x12e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	70 c0       	rjmp	.+224    	; 0x12e <__bad_interrupt>
  4e:	00 00       	nop
  50:	6e c0       	rjmp	.+220    	; 0x12e <__bad_interrupt>
  52:	00 00       	nop
  54:	6c c0       	rjmp	.+216    	; 0x12e <__bad_interrupt>
  56:	00 00       	nop
  58:	6a c0       	rjmp	.+212    	; 0x12e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	68 c0       	rjmp	.+208    	; 0x12e <__bad_interrupt>
  5e:	00 00       	nop
  60:	66 c0       	rjmp	.+204    	; 0x12e <__bad_interrupt>
  62:	00 00       	nop
  64:	64 c0       	rjmp	.+200    	; 0x12e <__bad_interrupt>
  66:	00 00       	nop
  68:	62 c0       	rjmp	.+196    	; 0x12e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	60 c0       	rjmp	.+192    	; 0x12e <__bad_interrupt>
  6e:	00 00       	nop
  70:	5e c0       	rjmp	.+188    	; 0x12e <__bad_interrupt>
  72:	00 00       	nop
  74:	af c0       	rjmp	.+350    	; 0x1d4 <__vector_29>
  76:	00 00       	nop
  78:	5a c0       	rjmp	.+180    	; 0x12e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	58 c0       	rjmp	.+176    	; 0x12e <__bad_interrupt>
  7e:	00 00       	nop
  80:	56 c0       	rjmp	.+172    	; 0x12e <__bad_interrupt>
  82:	00 00       	nop
  84:	54 c0       	rjmp	.+168    	; 0x12e <__bad_interrupt>
  86:	00 00       	nop
  88:	52 c0       	rjmp	.+164    	; 0x12e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	08 00       	.word	0x0008	; ????
  8e:	00 00       	nop
  90:	be 92       	st	-X, r11
  92:	24 49       	sbci	r18, 0x94	; 148
  94:	12 3e       	cpi	r17, 0xE2	; 226
  96:	ab aa       	std	Y+51, r10	; 0x33
  98:	aa 2a       	or	r10, r26
  9a:	be cd       	rjmp	.-1156   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
  9c:	cc cc       	rjmp	.-1640   	; 0xfffffa36 <__eeprom_end+0xff7efa36>
  9e:	4c 3e       	cpi	r20, 0xEC	; 236
  a0:	00 00       	nop
  a2:	00 80       	ld	r0, Z
  a4:	be ab       	std	Y+54, r27	; 0x36
  a6:	aa aa       	std	Y+50, r10	; 0x32
  a8:	aa 3e       	cpi	r26, 0xEA	; 234
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	bf 00       	.word	0x00bf	; ????
  b0:	00 00       	nop
  b2:	80 3f       	cpi	r24, 0xF0	; 240
  b4:	00 00       	nop
  b6:	00 00       	nop
  b8:	00 08       	sbc	r0, r0
  ba:	41 78       	andi	r20, 0x81	; 129
  bc:	d3 bb       	out	0x13, r29	; 19
  be:	43 87       	std	Z+11, r20	; 0x0b
  c0:	d1 13       	cpse	r29, r17
  c2:	3d 19       	sub	r19, r13
  c4:	0e 3c       	cpi	r16, 0xCE	; 206
  c6:	c3 bd       	out	0x23, r28	; 35
  c8:	42 82       	std	Z+2, r4	; 0x02
  ca:	ad 2b       	or	r26, r29
  cc:	3e 68       	ori	r19, 0x8E	; 142
  ce:	ec 82       	std	Y+4, r14	; 0x04
  d0:	76 be       	out	0x36, r7	; 54
  d2:	d9 8f       	std	Y+25, r29	; 0x19
  d4:	e1 a9       	ldd	r30, Z+49	; 0x31
  d6:	3e 4c       	sbci	r19, 0xCE	; 206
  d8:	80 ef       	ldi	r24, 0xF0	; 240
  da:	ff be       	out	0x3f, r15	; 63
  dc:	01 c4       	rjmp	.+2050   	; 0x8e0 <__gesf2+0x2>
  de:	ff 7f       	andi	r31, 0xFF	; 255
  e0:	3f 00       	.word	0x003f	; ????
  e2:	00 00       	nop
  e4:	00 00       	nop
  e6:	07 63       	ori	r16, 0x37	; 55
  e8:	42 36       	cpi	r20, 0x62	; 98
  ea:	b7 9b       	sbis	0x16, 7	; 22
  ec:	d8 a7       	std	Y+40, r29	; 0x28
  ee:	1a 39       	cpi	r17, 0x9A	; 154
  f0:	68 56       	subi	r22, 0x68	; 104
  f2:	18 ae       	std	Y+56, r1	; 0x38
  f4:	ba ab       	std	Y+50, r27	; 0x32
  f6:	55 8c       	ldd	r5, Z+29	; 0x1d
  f8:	1d 3c       	cpi	r17, 0xCD	; 205
  fa:	b7 cc       	rjmp	.-1682   	; 0xfffffa6a <__eeprom_end+0xff7efa6a>
  fc:	57 63       	ori	r21, 0x37	; 55
  fe:	bd 6d       	ori	r27, 0xDD	; 221
 100:	ed fd       	.word	0xfded	; ????
 102:	75 3e       	cpi	r23, 0xE5	; 229
 104:	f6 17       	cp	r31, r22
 106:	72 31       	cpi	r23, 0x12	; 18
 108:	bf 00       	.word	0x00bf	; ????
 10a:	00 00       	nop
 10c:	80 3f       	cpi	r24, 0xF0	; 240

0000010e <__ctors_end>:
 10e:	11 24       	eor	r1, r1
 110:	1f be       	out	0x3f, r1	; 63
 112:	cf ef       	ldi	r28, 0xFF	; 255
 114:	d0 e1       	ldi	r29, 0x10	; 16
 116:	de bf       	out	0x3e, r29	; 62
 118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_clear_bss>:
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	a0 e0       	ldi	r26, 0x00	; 0
 11e:	b1 e0       	ldi	r27, 0x01	; 1
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	a9 30       	cpi	r26, 0x09	; 9
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	c3 d0       	rcall	.+390    	; 0x2b2 <main>
 12c:	f5 c5       	rjmp	.+3050   	; 0xd18 <_exit>

0000012e <__bad_interrupt>:
 12e:	68 cf       	rjmp	.-304    	; 0x0 <__vectors>

00000130 <__vector_3>:
double u_end = 0;
double u_distance = 0;

unsigned char recvData = 0;

ISR(INT2_vect){
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	0b b6       	in	r0, 0x3b	; 59
 13c:	0f 92       	push	r0
 13e:	2f 93       	push	r18
 140:	3f 93       	push	r19
 142:	4f 93       	push	r20
 144:	5f 93       	push	r21
 146:	6f 93       	push	r22
 148:	7f 93       	push	r23
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	af 93       	push	r26
 150:	bf 93       	push	r27
 152:	ef 93       	push	r30
 154:	ff 93       	push	r31
	if ((EICRA & 0b00110000) == 0b00100000)//falling //TCNT1당 0.064ms 34 cm/ms
 156:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 15a:	80 73       	andi	r24, 0x30	; 48
 15c:	80 32       	cpi	r24, 0x20	; 32
 15e:	01 f5       	brne	.+64     	; 0x1a0 <__vector_3+0x70>
	{
		u_end=TCNT2;
 160:	64 b5       	in	r22, 0x24	; 36
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	2c d3       	rcall	.+1624   	; 0x7c2 <__floatunsisf>
 16a:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <u_end>
 16e:	70 93 06 01 	sts	0x0106, r23	; 0x800106 <u_end+0x1>
 172:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <u_end+0x2>
 176:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <u_end+0x3>
		u_distance= u_end* 1.088;
 17a:	26 e9       	ldi	r18, 0x96	; 150
 17c:	33 e4       	ldi	r19, 0x43	; 67
 17e:	4b e8       	ldi	r20, 0x8B	; 139
 180:	5f e3       	ldi	r21, 0x3F	; 63
 182:	fc d3       	rcall	.+2040   	; 0x97c <__mulsf3>
 184:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <u_distance>
 188:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <u_distance+0x1>
 18c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <u_distance+0x2>
 190:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <u_distance+0x3>
		EICRA = (EICRA &0b11001111)| 0b00110000;//라이징으로 바꿈
 194:	ea e6       	ldi	r30, 0x6A	; 106
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	80 63       	ori	r24, 0x30	; 48
 19c:	80 83       	st	Z, r24
 19e:	07 c0       	rjmp	.+14     	; 0x1ae <__vector_3+0x7e>
	}

	else//rising일때
	{
		TCNT2 = 0;
 1a0:	14 bc       	out	0x24, r1	; 36
		EICRA =(EICRA &0b11001111)| 0b00100000;//폴링으로 바꿈
 1a2:	ea e6       	ldi	r30, 0x6A	; 106
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	8f 7c       	andi	r24, 0xCF	; 207
 1aa:	80 62       	ori	r24, 0x20	; 32
 1ac:	80 83       	st	Z, r24
	}
}
 1ae:	ff 91       	pop	r31
 1b0:	ef 91       	pop	r30
 1b2:	bf 91       	pop	r27
 1b4:	af 91       	pop	r26
 1b6:	9f 91       	pop	r25
 1b8:	8f 91       	pop	r24
 1ba:	7f 91       	pop	r23
 1bc:	6f 91       	pop	r22
 1be:	5f 91       	pop	r21
 1c0:	4f 91       	pop	r20
 1c2:	3f 91       	pop	r19
 1c4:	2f 91       	pop	r18
 1c6:	0f 90       	pop	r0
 1c8:	0b be       	out	0x3b, r0	; 59
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <__vector_29>:


//제어주기 : 20ms
ISR(TIMER3_OVF_vect){
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
 1de:	0b b6       	in	r0, 0x3b	; 59
 1e0:	0f 92       	push	r0
 1e2:	2f 93       	push	r18
 1e4:	3f 93       	push	r19
 1e6:	4f 93       	push	r20
 1e8:	5f 93       	push	r21
 1ea:	6f 93       	push	r22
 1ec:	7f 93       	push	r23
 1ee:	8f 93       	push	r24
 1f0:	9f 93       	push	r25
 1f2:	af 93       	push	r26
 1f4:	bf 93       	push	r27
 1f6:	ef 93       	push	r30
 1f8:	ff 93       	push	r31
	
	TCNT3 = 64285; // Bottom 설정
 1fa:	8d e1       	ldi	r24, 0x1D	; 29
 1fc:	9b ef       	ldi	r25, 0xFB	; 251
 1fe:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 202:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	

	if(recvData == 'a')
 206:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 20a:	81 36       	cpi	r24, 0x61	; 97
 20c:	19 f4       	brne	.+6      	; 0x214 <__vector_29+0x40>
	{
		PORTA = ~PORTA;
 20e:	8b b3       	in	r24, 0x1b	; 27
 210:	80 95       	com	r24
 212:	8b bb       	out	0x1b, r24	; 27
	}

	TransUart0('S');
 214:	83 e5       	ldi	r24, 0x53	; 83
 216:	a6 d0       	rcall	.+332    	; 0x364 <TransUart0>
	TransNumUart0(GetResistor()); TransUart0(',');
 218:	d1 d0       	rcall	.+418    	; 0x3bc <GetResistor>
 21a:	ac d0       	rcall	.+344    	; 0x374 <TransNumUart0>
 21c:	8c e2       	ldi	r24, 0x2C	; 44
 21e:	a2 d0       	rcall	.+324    	; 0x364 <TransUart0>
	TransNumUart0(GetCDS()); TransUart0(',');
 220:	e1 d0       	rcall	.+450    	; 0x3e4 <GetCDS>
 222:	a8 d0       	rcall	.+336    	; 0x374 <TransNumUart0>
 224:	8c e2       	ldi	r24, 0x2C	; 44
 226:	9e d0       	rcall	.+316    	; 0x364 <TransUart0>
	TransNumUart0(GetLM35()); TransUart0(',');
 228:	11 d1       	rcall	.+546    	; 0x44c <GetLM35>
 22a:	a4 d0       	rcall	.+328    	; 0x374 <TransNumUart0>
 22c:	8c e2       	ldi	r24, 0x2C	; 44
 22e:	9a d0       	rcall	.+308    	; 0x364 <TransUart0>
	TransNumUart0(GetTHEMISTER()); TransUart0(',');
 230:	21 d1       	rcall	.+578    	; 0x474 <GetTHEMISTER>
 232:	a0 d0       	rcall	.+320    	; 0x374 <TransNumUart0>
 234:	8c e2       	ldi	r24, 0x2C	; 44
 236:	96 d0       	rcall	.+300    	; 0x364 <TransUart0>
	TransNumUart0(GetGAS()); TransUart0(',');
 238:	59 d1       	rcall	.+690    	; 0x4ec <GetGAS>
 23a:	9c d0       	rcall	.+312    	; 0x374 <TransNumUart0>
 23c:	8c e2       	ldi	r24, 0x2C	; 44
 23e:	92 d0       	rcall	.+292    	; 0x364 <TransUart0>
	TransNumUart0(GetPOWER()); TransUart0(',');
 240:	58 d1       	rcall	.+688    	; 0x4f2 <GetPOWER>
 242:	98 d0       	rcall	.+304    	; 0x374 <TransNumUart0>
 244:	8c e2       	ldi	r24, 0x2C	; 44
 246:	8e d0       	rcall	.+284    	; 0x364 <TransUart0>
 248:	85 d1       	rcall	.+778    	; 0x554 <GetPSD>
 24a:	94 d0       	rcall	.+296    	; 0x374 <TransNumUart0>
 24c:	8c e2       	ldi	r24, 0x2C	; 44
	TransNumUart0(GetPSD()); TransUart0(',');
 24e:	8a d0       	rcall	.+276    	; 0x364 <TransUart0>
 250:	9a d1       	rcall	.+820    	; 0x586 <GetWATER>
 252:	86 d2       	rcall	.+1292   	; 0x760 <__fixsfsi>
 254:	cb 01       	movw	r24, r22
	TransNumUart0(GetWATER()); TransUart0(',');
 256:	8e d0       	rcall	.+284    	; 0x374 <TransNumUart0>
 258:	8c e2       	ldi	r24, 0x2C	; 44
 25a:	84 d0       	rcall	.+264    	; 0x364 <TransUart0>
 25c:	a8 d1       	rcall	.+848    	; 0x5ae <Trigger>
 25e:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <u_distance>
 262:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <u_distance+0x1>
 266:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <u_distance+0x2>
	Trigger();
 26a:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <u_distance+0x3>
	TransNumUart0((int)u_distance); TransUart0(',');
 26e:	78 d2       	rcall	.+1264   	; 0x760 <__fixsfsi>
 270:	cb 01       	movw	r24, r22
 272:	80 d0       	rcall	.+256    	; 0x374 <TransNumUart0>
 274:	8c e2       	ldi	r24, 0x2C	; 44
 276:	76 d0       	rcall	.+236    	; 0x364 <TransUart0>
 278:	85 e4       	ldi	r24, 0x45	; 69
 27a:	74 d0       	rcall	.+232    	; 0x364 <TransUart0>
 27c:	84 ef       	ldi	r24, 0xF4	; 244
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	9b bd       	out	0x2b, r25	; 43
 282:	8a bd       	out	0x2a, r24	; 42
 284:	99 bd       	out	0x29, r25	; 41
 286:	88 bd       	out	0x28, r24	; 40
 288:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 28c:	ff 91       	pop	r31
	TransUart0('E');
 28e:	ef 91       	pop	r30
 290:	bf 91       	pop	r27
 292:	af 91       	pop	r26


	//모터제어
	OCR1A = 500;
 294:	9f 91       	pop	r25
 296:	8f 91       	pop	r24
 298:	7f 91       	pop	r23
 29a:	6f 91       	pop	r22
	OCR1B = 500;
 29c:	5f 91       	pop	r21
 29e:	4f 91       	pop	r20

	recvData = 0; // 받은 데이터 초기화
 2a0:	3f 91       	pop	r19
 2a2:	2f 91       	pop	r18
}
 2a4:	0f 90       	pop	r0
 2a6:	0b be       	out	0x3b, r0	; 59
 2a8:	0f 90       	pop	r0
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	0f 90       	pop	r0
 2ae:	1f 90       	pop	r1
 2b0:	18 95       	reti

000002b2 <main>:
 2b2:	0c d0       	rcall	.+24     	; 0x2cc <InitIO>
 2b4:	17 d0       	rcall	.+46     	; 0x2e4 <InitExtInt>
 2b6:	1d d0       	rcall	.+58     	; 0x2f2 <InitTimer1>
 2b8:	29 d0       	rcall	.+82     	; 0x30c <InitTimer2>
 2ba:	2d d0       	rcall	.+90     	; 0x316 <InitTimer3>
 2bc:	3a d0       	rcall	.+116    	; 0x332 <InitADC>
 2be:	46 d0       	rcall	.+140    	; 0x34c <InitUart0>
 2c0:	50 d0       	rcall	.+160    	; 0x362 <InitUart1>
 2c2:	78 94       	sei
 2c4:	53 d0       	rcall	.+166    	; 0x36c <RecvUart0>
 2c6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	
	sei();
	
    while (1) 
    {				
		recvData = RecvUart0();
 2ca:	fc cf       	rjmp	.-8      	; 0x2c4 <main+0x12>

000002cc <InitIO>:
 2cc:	8f ef       	ldi	r24, 0xFF	; 255
 2ce:	8a bb       	out	0x1a, r24	; 26
 2d0:	84 bb       	out	0x14, r24	; 20
 2d2:	90 e6       	ldi	r25, 0x60	; 96
	//TO DO
	TransUart1(num/1000 + 48);
	TransUart1((num/100)%100 + 48);
	TransUart1((num/10)%10 + 48);
	TransUart1(num%10 + 48);
}
 2d4:	97 bb       	out	0x17, r25	; 23
 2d6:	11 ba       	out	0x11, r1	; 17
 2d8:	15 ba       	out	0x15, r1	; 21
 2da:	95 b3       	in	r25, 0x15	; 21
 2dc:	90 65       	ori	r25, 0x50	; 80
 2de:	95 bb       	out	0x15, r25	; 21
 2e0:	8b bb       	out	0x1b, r24	; 27
 2e2:	08 95       	ret

000002e4 <InitExtInt>:
 2e4:	90 98       	cbi	0x12, 0	; 18
 2e6:	80 e3       	ldi	r24, 0x30	; 48
 2e8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 2ec:	84 e0       	ldi	r24, 0x04	; 4
 2ee:	89 bf       	out	0x39, r24	; 57
 2f0:	08 95       	ret

000002f2 <InitTimer1>:
 2f2:	82 ea       	ldi	r24, 0xA2	; 162
 2f4:	8f bd       	out	0x2f, r24	; 47
 2f6:	89 e1       	ldi	r24, 0x19	; 25
 2f8:	8e bd       	out	0x2e, r24	; 46
 2fa:	80 e2       	ldi	r24, 0x20	; 32
 2fc:	93 e0       	ldi	r25, 0x03	; 3
 2fe:	97 bd       	out	0x27, r25	; 39
 300:	86 bd       	out	0x26, r24	; 38
 302:	1b bc       	out	0x2b, r1	; 43
 304:	1a bc       	out	0x2a, r1	; 42
 306:	19 bc       	out	0x29, r1	; 41
 308:	18 bc       	out	0x28, r1	; 40
 30a:	08 95       	ret

0000030c <InitTimer2>:
 30c:	85 e0       	ldi	r24, 0x05	; 5
 30e:	85 bd       	out	0x25, r24	; 37
 310:	84 e6       	ldi	r24, 0x64	; 100
 312:	84 bd       	out	0x24, r24	; 36
 314:	08 95       	ret

00000316 <InitTimer3>:
 316:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 31a:	84 e0       	ldi	r24, 0x04	; 4
 31c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 320:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7e007d>
 324:	8d e1       	ldi	r24, 0x1D	; 29
 326:	9b ef       	ldi	r25, 0xFB	; 251
 328:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 32c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 330:	08 95       	ret

00000332 <InitADC>:
 332:	80 e4       	ldi	r24, 0x40	; 64
 334:	87 b9       	out	0x07, r24	; 7
 336:	87 e8       	ldi	r24, 0x87	; 135
 338:	86 b9       	out	0x06, r24	; 6
 33a:	08 95       	ret

0000033c <GetADC>:
 33c:	80 64       	ori	r24, 0x40	; 64
 33e:	87 b9       	out	0x07, r24	; 7
 340:	36 9a       	sbi	0x06, 6	; 6
 342:	34 9b       	sbis	0x06, 4	; 6
 344:	fe cf       	rjmp	.-4      	; 0x342 <GetADC+0x6>
 346:	84 b1       	in	r24, 0x04	; 4
 348:	95 b1       	in	r25, 0x05	; 5
 34a:	08 95       	ret

0000034c <InitUart0>:
 34c:	19 9a       	sbi	0x03, 1	; 3
 34e:	18 98       	cbi	0x03, 0	; 3
 350:	1b b8       	out	0x0b, r1	; 11
 352:	88 e1       	ldi	r24, 0x18	; 24
 354:	8a b9       	out	0x0a, r24	; 10
 356:	86 e0       	ldi	r24, 0x06	; 6
 358:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 35c:	88 e0       	ldi	r24, 0x08	; 8
 35e:	89 b9       	out	0x09, r24	; 9
 360:	08 95       	ret

00000362 <InitUart1>:
 362:	08 95       	ret

00000364 <TransUart0>:
 364:	5d 9b       	sbis	0x0b, 5	; 11
 366:	fe cf       	rjmp	.-4      	; 0x364 <TransUart0>
 368:	8c b9       	out	0x0c, r24	; 12
 36a:	08 95       	ret

0000036c <RecvUart0>:
 36c:	5f 9b       	sbis	0x0b, 7	; 11
 36e:	fe cf       	rjmp	.-4      	; 0x36c <RecvUart0>
 370:	8c b1       	in	r24, 0x0c	; 12
 372:	08 95       	ret

00000374 <TransNumUart0>:
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	ec 01       	movw	r28, r24
 37a:	68 ee       	ldi	r22, 0xE8	; 232
 37c:	73 e0       	ldi	r23, 0x03	; 3
 37e:	a5 d4       	rcall	.+2378   	; 0xcca <__divmodhi4>
 380:	80 e3       	ldi	r24, 0x30	; 48
 382:	86 0f       	add	r24, r22
 384:	ef df       	rcall	.-34     	; 0x364 <TransUart0>
 386:	24 e6       	ldi	r18, 0x64	; 100
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	ce 01       	movw	r24, r28
 38c:	b9 01       	movw	r22, r18
 38e:	9d d4       	rcall	.+2362   	; 0xcca <__divmodhi4>
 390:	cb 01       	movw	r24, r22
 392:	b9 01       	movw	r22, r18
 394:	9a d4       	rcall	.+2356   	; 0xcca <__divmodhi4>
 396:	80 5d       	subi	r24, 0xD0	; 208
 398:	e5 df       	rcall	.-54     	; 0x364 <TransUart0>
 39a:	2a e0       	ldi	r18, 0x0A	; 10
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	ce 01       	movw	r24, r28
 3a0:	b9 01       	movw	r22, r18
 3a2:	93 d4       	rcall	.+2342   	; 0xcca <__divmodhi4>
 3a4:	c8 2f       	mov	r28, r24
 3a6:	cb 01       	movw	r24, r22
 3a8:	b9 01       	movw	r22, r18
 3aa:	8f d4       	rcall	.+2334   	; 0xcca <__divmodhi4>
 3ac:	80 5d       	subi	r24, 0xD0	; 208
 3ae:	da df       	rcall	.-76     	; 0x364 <TransUart0>
 3b0:	80 e3       	ldi	r24, 0x30	; 48
 3b2:	8c 0f       	add	r24, r28
 3b4:	d7 df       	rcall	.-82     	; 0x364 <TransUart0>
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
 3ba:	08 95       	ret

000003bc <GetResistor>:
//GetResistor
// Input : 
// Output : 0~100 resistor
//////////////////////////////////////////////////////////////////
int GetResistor(){
	int adc = GetADC(ADC_MUX_RESISTOR);
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	be df       	rcall	.-132    	; 0x33c <GetADC>
	return adc / 1023. * 100.;
 3c0:	bc 01       	movw	r22, r24
 3c2:	99 0f       	add	r25, r25
 3c4:	88 0b       	sbc	r24, r24
 3c6:	99 0b       	sbc	r25, r25
 3c8:	fe d1       	rcall	.+1020   	; 0x7c6 <__floatsisf>
 3ca:	20 e0       	ldi	r18, 0x00	; 0
 3cc:	30 ec       	ldi	r19, 0xC0	; 192
 3ce:	4f e7       	ldi	r20, 0x7F	; 127
 3d0:	54 e4       	ldi	r21, 0x44	; 68
 3d2:	5e d1       	rcall	.+700    	; 0x690 <__divsf3>
 3d4:	20 e0       	ldi	r18, 0x00	; 0
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	48 ec       	ldi	r20, 0xC8	; 200
 3da:	52 e4       	ldi	r21, 0x42	; 66
 3dc:	cf d2       	rcall	.+1438   	; 0x97c <__mulsf3>
 3de:	c0 d1       	rcall	.+896    	; 0x760 <__fixsfsi>
}
 3e0:	cb 01       	movw	r24, r22
 3e2:	08 95       	ret

000003e4 <GetCDS>:
//GetCDS
// Input : 
// Output : LUX
//////////////////////////////////////////////////////////////////
int GetCDS(){
	int adc = GetADC(ADC_MUX_CDS);
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	aa df       	rcall	.-172    	; 0x33c <GetADC>
	float vout = 5. * (1./1023) * adc;
	float R_cds = ((4.7 * 5.) / vout) - 4.7;
	float lux = powf(10., 1. - ( (log10(R_cds)-log10(40.)) / 0.8));   //수식을 그대로 쳐서 넣은건데 살짝씩 어플과 값이 맞게 변형 + 단위는 K + 회로, 환경에 따라 값이 많이 달라질수 있다.
 3e8:	bc 01       	movw	r22, r24
 3ea:	99 0f       	add	r25, r25
 3ec:	88 0b       	sbc	r24, r24
 3ee:	99 0b       	sbc	r25, r25
 3f0:	ea d1       	rcall	.+980    	; 0x7c6 <__floatsisf>
 3f2:	2a e0       	ldi	r18, 0x0A	; 10
 3f4:	38 e2       	ldi	r19, 0x28	; 40
 3f6:	40 ea       	ldi	r20, 0xA0	; 160
 3f8:	5b e3       	ldi	r21, 0x3B	; 59
 3fa:	c0 d2       	rcall	.+1408   	; 0x97c <__mulsf3>
 3fc:	9b 01       	movw	r18, r22
 3fe:	ac 01       	movw	r20, r24
 400:	60 e0       	ldi	r22, 0x00	; 0
 402:	70 e0       	ldi	r23, 0x00	; 0
 404:	8c eb       	ldi	r24, 0xBC	; 188
 406:	91 e4       	ldi	r25, 0x41	; 65
 408:	43 d1       	rcall	.+646    	; 0x690 <__divsf3>
 40a:	26 e6       	ldi	r18, 0x66	; 102
 40c:	36 e6       	ldi	r19, 0x66	; 102
 40e:	46 e9       	ldi	r20, 0x96	; 150
 410:	50 e4       	ldi	r21, 0x40	; 64
 412:	d9 d0       	rcall	.+434    	; 0x5c6 <__subsf3>
 414:	68 d2       	rcall	.+1232   	; 0x8e6 <log10>
 416:	2d e4       	ldi	r18, 0x4D	; 77
 418:	30 e1       	ldi	r19, 0x10	; 16
 41a:	4d ec       	ldi	r20, 0xCD	; 205
 41c:	5f e3       	ldi	r21, 0x3F	; 63
 41e:	d3 d0       	rcall	.+422    	; 0x5c6 <__subsf3>
 420:	2d ec       	ldi	r18, 0xCD	; 205
 422:	3c ec       	ldi	r19, 0xCC	; 204
 424:	4c e4       	ldi	r20, 0x4C	; 76
 426:	5f e3       	ldi	r21, 0x3F	; 63
 428:	33 d1       	rcall	.+614    	; 0x690 <__divsf3>
 42a:	9b 01       	movw	r18, r22
 42c:	ac 01       	movw	r20, r24
 42e:	60 e0       	ldi	r22, 0x00	; 0
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	80 e8       	ldi	r24, 0x80	; 128
 434:	9f e3       	ldi	r25, 0x3F	; 63
 436:	c7 d0       	rcall	.+398    	; 0x5c6 <__subsf3>
 438:	9b 01       	movw	r18, r22
 43a:	ac 01       	movw	r20, r24
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	70 e0       	ldi	r23, 0x00	; 0
 440:	80 e2       	ldi	r24, 0x20	; 32
 442:	91 e4       	ldi	r25, 0x41	; 65

	return lux;
 444:	fe d2       	rcall	.+1532   	; 0xa42 <pow>
 446:	8c d1       	rcall	.+792    	; 0x760 <__fixsfsi>
}
 448:	cb 01       	movw	r24, r22
 44a:	08 95       	ret

0000044c <GetLM35>:
//GetLM35
// Input : 
// Output : temperature
//////////////////////////////////////////////////////////////////
int GetLM35(){
	int adc = GetADC(ADC_MUX_LM35);
 44c:	82 e0       	ldi	r24, 0x02	; 2
 44e:	76 df       	rcall	.-276    	; 0x33c <GetADC>
	return 5 * ((double)1./1023) * adc * 100;  
 450:	bc 01       	movw	r22, r24
 452:	99 0f       	add	r25, r25
 454:	88 0b       	sbc	r24, r24
 456:	99 0b       	sbc	r25, r25
 458:	b6 d1       	rcall	.+876    	; 0x7c6 <__floatsisf>
 45a:	2a e0       	ldi	r18, 0x0A	; 10
 45c:	38 e2       	ldi	r19, 0x28	; 40
 45e:	40 ea       	ldi	r20, 0xA0	; 160
 460:	5b e3       	ldi	r21, 0x3B	; 59
 462:	8c d2       	rcall	.+1304   	; 0x97c <__mulsf3>
 464:	20 e0       	ldi	r18, 0x00	; 0
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	48 ec       	ldi	r20, 0xC8	; 200
 46a:	52 e4       	ldi	r21, 0x42	; 66
 46c:	87 d2       	rcall	.+1294   	; 0x97c <__mulsf3>
 46e:	78 d1       	rcall	.+752    	; 0x760 <__fixsfsi>
}
 470:	cb 01       	movw	r24, r22
 472:	08 95       	ret

00000474 <GetTHEMISTER>:
//GetTHEMISTER
// Input : 
// Output : temperature
//////////////////////////////////////////////////////////////////
int GetTHEMISTER(){
	int adc = GetADC(ADC_MUX_THERMISTER);
 474:	83 e0       	ldi	r24, 0x03	; 3
 476:	62 df       	rcall	.-316    	; 0x33c <GetADC>
	float vout = 5 * ((double)1/1023) * adc;
	float Rth = (5./vout)*4700 - 4700;
	float T = 1 / (1. / (273.15 + 25.) + 1./3650 * log(Rth/1000.) );
 478:	bc 01       	movw	r22, r24
 47a:	99 0f       	add	r25, r25
 47c:	88 0b       	sbc	r24, r24
 47e:	99 0b       	sbc	r25, r25
 480:	a2 d1       	rcall	.+836    	; 0x7c6 <__floatsisf>
 482:	2a e0       	ldi	r18, 0x0A	; 10
 484:	38 e2       	ldi	r19, 0x28	; 40
 486:	40 ea       	ldi	r20, 0xA0	; 160
 488:	5b e3       	ldi	r21, 0x3B	; 59
 48a:	78 d2       	rcall	.+1264   	; 0x97c <__mulsf3>
 48c:	9b 01       	movw	r18, r22
 48e:	ac 01       	movw	r20, r24
 490:	60 e0       	ldi	r22, 0x00	; 0
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	80 ea       	ldi	r24, 0xA0	; 160
 496:	90 e4       	ldi	r25, 0x40	; 64
 498:	fb d0       	rcall	.+502    	; 0x690 <__divsf3>
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	30 ee       	ldi	r19, 0xE0	; 224
 49e:	42 e9       	ldi	r20, 0x92	; 146
 4a0:	55 e4       	ldi	r21, 0x45	; 69
 4a2:	6c d2       	rcall	.+1240   	; 0x97c <__mulsf3>
 4a4:	20 e0       	ldi	r18, 0x00	; 0
 4a6:	30 ee       	ldi	r19, 0xE0	; 224
 4a8:	42 e9       	ldi	r20, 0x92	; 146
 4aa:	55 e4       	ldi	r21, 0x45	; 69
 4ac:	8c d0       	rcall	.+280    	; 0x5c6 <__subsf3>
 4ae:	20 e0       	ldi	r18, 0x00	; 0
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	4a e7       	ldi	r20, 0x7A	; 122
 4b4:	54 e4       	ldi	r21, 0x44	; 68
 4b6:	ec d0       	rcall	.+472    	; 0x690 <__divsf3>
 4b8:	21 d2       	rcall	.+1090   	; 0x8fc <log>
	float Tth = T - 273.5 ;   //+a
	return Tth;
 4ba:	2b ef       	ldi	r18, 0xFB	; 251
 4bc:	33 ea       	ldi	r19, 0xA3	; 163
 4be:	4f e8       	ldi	r20, 0x8F	; 143
 4c0:	59 e3       	ldi	r21, 0x39	; 57
 4c2:	5c d2       	rcall	.+1208   	; 0x97c <__mulsf3>
 4c4:	2f e0       	ldi	r18, 0x0F	; 15
 4c6:	3f ec       	ldi	r19, 0xCF	; 207
 4c8:	4b e5       	ldi	r20, 0x5B	; 91
 4ca:	5b e3       	ldi	r21, 0x3B	; 59
 4cc:	7d d0       	rcall	.+250    	; 0x5c8 <__addsf3>
 4ce:	9b 01       	movw	r18, r22
 4d0:	ac 01       	movw	r20, r24
 4d2:	60 e0       	ldi	r22, 0x00	; 0
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	80 e8       	ldi	r24, 0x80	; 128
 4d8:	9f e3       	ldi	r25, 0x3F	; 63
 4da:	da d0       	rcall	.+436    	; 0x690 <__divsf3>
 4dc:	20 e0       	ldi	r18, 0x00	; 0
 4de:	30 ec       	ldi	r19, 0xC0	; 192
 4e0:	48 e8       	ldi	r20, 0x88	; 136
 4e2:	53 e4       	ldi	r21, 0x43	; 67
 4e4:	70 d0       	rcall	.+224    	; 0x5c6 <__subsf3>
 4e6:	3c d1       	rcall	.+632    	; 0x760 <__fixsfsi>
 4e8:	cb 01       	movw	r24, r22
}
 4ea:	08 95       	ret

000004ec <GetGAS>:
 4ec:	86 e0       	ldi	r24, 0x06	; 6
//GetGAS
// Input :
// Output : GAS
//////////////////////////////////////////////////////////////////
int GetGAS(){
	int adc = GetADC(ADC_MUX_GAS);
 4ee:	26 cf       	rjmp	.-436    	; 0x33c <GetADC>
	return adc;
}
 4f0:	08 95       	ret

000004f2 <GetPOWER>:
//GetPOWER
// Input :
// Output : pressure
// feature : 800g까지 측정할 수 있다!(오차 +- 50)
//////////////////////////////////////////////////////////////////
int GetPOWER(){
 4f2:	0f 93       	push	r16
 4f4:	1f 93       	push	r17
 4f6:	cf 93       	push	r28
 4f8:	df 93       	push	r29
	int adc = GetADC(ADC_MUX_POWER);
 4fa:	87 e0       	ldi	r24, 0x07	; 7
 4fc:	1f df       	rcall	.-450    	; 0x33c <GetADC>
	float vout = 5 * ((double)1/1023) * adc;
	float power = powf(4.23, vout);
 4fe:	bc 01       	movw	r22, r24
 500:	99 0f       	add	r25, r25
 502:	88 0b       	sbc	r24, r24
 504:	99 0b       	sbc	r25, r25
 506:	5f d1       	rcall	.+702    	; 0x7c6 <__floatsisf>
 508:	2a e0       	ldi	r18, 0x0A	; 10
 50a:	38 e2       	ldi	r19, 0x28	; 40
 50c:	40 ea       	ldi	r20, 0xA0	; 160
 50e:	5b e3       	ldi	r21, 0x3B	; 59
 510:	35 d2       	rcall	.+1130   	; 0x97c <__mulsf3>
 512:	9b 01       	movw	r18, r22
 514:	ac 01       	movw	r20, r24
 516:	69 e2       	ldi	r22, 0x29	; 41
 518:	7c e5       	ldi	r23, 0x5C	; 92
 51a:	87 e8       	ldi	r24, 0x87	; 135
 51c:	90 e4       	ldi	r25, 0x40	; 64
 51e:	91 d2       	rcall	.+1314   	; 0xa42 <pow>
 520:	06 2f       	mov	r16, r22
 522:	17 2f       	mov	r17, r23
 524:	d8 2f       	mov	r29, r24
 526:	c9 2f       	mov	r28, r25
	if(power >= 1000)
 528:	20 e0       	ldi	r18, 0x00	; 0
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	4a e7       	ldi	r20, 0x7A	; 122
 52e:	54 e4       	ldi	r21, 0x44	; 68
 530:	d6 d1       	rcall	.+940    	; 0x8de <__gesf2>
 532:	88 23       	and	r24, r24
 534:	24 f0       	brlt	.+8      	; 0x53e <GetPOWER+0x4c>
		power = 999;
 536:	00 e0       	ldi	r16, 0x00	; 0
 538:	10 ec       	ldi	r17, 0xC0	; 192
 53a:	d9 e7       	ldi	r29, 0x79	; 121
	return power;
 53c:	c4 e4       	ldi	r28, 0x44	; 68
 53e:	60 2f       	mov	r22, r16
 540:	71 2f       	mov	r23, r17
 542:	8d 2f       	mov	r24, r29
 544:	9c 2f       	mov	r25, r28
 546:	0c d1       	rcall	.+536    	; 0x760 <__fixsfsi>
}
 548:	cb 01       	movw	r24, r22
 54a:	df 91       	pop	r29
 54c:	cf 91       	pop	r28
 54e:	1f 91       	pop	r17
 550:	0f 91       	pop	r16
 552:	08 95       	ret

00000554 <GetPSD>:
// Input :
// Output : temperature
//////////////////////////////////////////////////////////////////

int GetPSD(){
	int adc  = GetADC(ADC_MUX_PSD);
 554:	84 e0       	ldi	r24, 0x04	; 4
 556:	f2 de       	rcall	.-540    	; 0x33c <GetADC>
	float vout = 5 * ((double)1/1023) * adc;
	int dis = 28.014*pow(vout,-1.234);
 558:	bc 01       	movw	r22, r24
 55a:	99 0f       	add	r25, r25
 55c:	88 0b       	sbc	r24, r24
 55e:	99 0b       	sbc	r25, r25
 560:	32 d1       	rcall	.+612    	; 0x7c6 <__floatsisf>
 562:	2a e0       	ldi	r18, 0x0A	; 10
 564:	38 e2       	ldi	r19, 0x28	; 40
 566:	40 ea       	ldi	r20, 0xA0	; 160
 568:	5b e3       	ldi	r21, 0x3B	; 59
 56a:	08 d2       	rcall	.+1040   	; 0x97c <__mulsf3>
 56c:	26 eb       	ldi	r18, 0xB6	; 182
 56e:	33 ef       	ldi	r19, 0xF3	; 243
 570:	4d e9       	ldi	r20, 0x9D	; 157
 572:	5f eb       	ldi	r21, 0xBF	; 191
 574:	66 d2       	rcall	.+1228   	; 0xa42 <pow>

	return dis;
 576:	2c ea       	ldi	r18, 0xAC	; 172
 578:	3c e1       	ldi	r19, 0x1C	; 28
 57a:	40 ee       	ldi	r20, 0xE0	; 224
 57c:	51 e4       	ldi	r21, 0x41	; 65
 57e:	fe d1       	rcall	.+1020   	; 0x97c <__mulsf3>
 580:	ef d0       	rcall	.+478    	; 0x760 <__fixsfsi>
}
 582:	cb 01       	movw	r24, r22
 584:	08 95       	ret

00000586 <GetWATER>:

double GetWATER(){

	int value = GetADC(ADC_MUX_WATER);
 586:	85 e0       	ldi	r24, 0x05	; 5
 588:	d9 de       	rcall	.-590    	; 0x33c <GetADC>
	double depth = 0;
	if(value > 700){
 58a:	8d 3b       	cpi	r24, 0xBD	; 189
 58c:	22 e0       	ldi	r18, 0x02	; 2
 58e:	92 07       	cpc	r25, r18
 590:	3c f4       	brge	.+14     	; 0x5a0 <GetWATER+0x1a>
		value = WATER_MAX;
	}
	else if(value < 500){
 592:	84 3f       	cpi	r24, 0xF4	; 244
 594:	21 e0       	ldi	r18, 0x01	; 1
 596:	92 07       	cpc	r25, r18
 598:	2c f4       	brge	.+10     	; 0x5a4 <GetWATER+0x1e>
		value = WATER_MIN;
 59a:	84 ef       	ldi	r24, 0xF4	; 244
 59c:	91 e0       	ldi	r25, 0x01	; 1
 59e:	02 c0       	rjmp	.+4      	; 0x5a4 <GetWATER+0x1e>
double GetWATER(){

	int value = GetADC(ADC_MUX_WATER);
	double depth = 0;
	if(value > 700){
		value = WATER_MAX;
 5a0:	8c eb       	ldi	r24, 0xBC	; 188
 5a2:	92 e0       	ldi	r25, 0x02	; 2
		value = WATER_MIN;
	}
	depth = (double)(value-WATER_MIN)/(WATER_MAX-WATER_MIN);
	depth = depth/25;

	return value;
 5a4:	bc 01       	movw	r22, r24
 5a6:	99 0f       	add	r25, r25
 5a8:	88 0b       	sbc	r24, r24
 5aa:	99 0b       	sbc	r25, r25

}
 5ac:	0c c1       	rjmp	.+536    	; 0x7c6 <__floatsisf>

000005ae <Trigger>:
//CalTHEMISTER
// Input :
// Output : 
//////////////////////////////////////////////////////////////////
void Trigger(){
	cbi(PORTC, 0);
 5ae:	a8 98       	cbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5b0:	8a e0       	ldi	r24, 0x0A	; 10
 5b2:	8a 95       	dec	r24
 5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Trigger+0x4>
 5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Trigger+0xa>
	_delay_us(2);
	sbi(PORTC, 0);
 5b8:	a8 9a       	sbi	0x15, 0	; 21
 5ba:	85 e3       	ldi	r24, 0x35	; 53
 5bc:	8a 95       	dec	r24
 5be:	f1 f7       	brne	.-4      	; 0x5bc <Trigger+0xe>
 5c0:	00 00       	nop
	_delay_us(10);
	cbi(PORTC, 0);
 5c2:	a8 98       	cbi	0x15, 0	; 21
 5c4:	08 95       	ret

000005c6 <__subsf3>:
 5c6:	50 58       	subi	r21, 0x80	; 128

000005c8 <__addsf3>:
 5c8:	bb 27       	eor	r27, r27
 5ca:	aa 27       	eor	r26, r26
 5cc:	0e d0       	rcall	.+28     	; 0x5ea <__addsf3x>
 5ce:	4d c1       	rjmp	.+666    	; 0x86a <__fp_round>
 5d0:	3e d1       	rcall	.+636    	; 0x84e <__fp_pscA>
 5d2:	30 f0       	brcs	.+12     	; 0x5e0 <__addsf3+0x18>
 5d4:	43 d1       	rcall	.+646    	; 0x85c <__fp_pscB>
 5d6:	20 f0       	brcs	.+8      	; 0x5e0 <__addsf3+0x18>
 5d8:	31 f4       	brne	.+12     	; 0x5e6 <__addsf3+0x1e>
 5da:	9f 3f       	cpi	r25, 0xFF	; 255
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <__addsf3+0x1a>
 5de:	1e f4       	brtc	.+6      	; 0x5e6 <__addsf3+0x1e>
 5e0:	33 c1       	rjmp	.+614    	; 0x848 <__fp_nan>
 5e2:	0e f4       	brtc	.+2      	; 0x5e6 <__addsf3+0x1e>
 5e4:	e0 95       	com	r30
 5e6:	e7 fb       	bst	r30, 7
 5e8:	29 c1       	rjmp	.+594    	; 0x83c <__fp_inf>

000005ea <__addsf3x>:
 5ea:	e9 2f       	mov	r30, r25
 5ec:	4f d1       	rcall	.+670    	; 0x88c <__fp_split3>
 5ee:	80 f3       	brcs	.-32     	; 0x5d0 <__addsf3+0x8>
 5f0:	ba 17       	cp	r27, r26
 5f2:	62 07       	cpc	r22, r18
 5f4:	73 07       	cpc	r23, r19
 5f6:	84 07       	cpc	r24, r20
 5f8:	95 07       	cpc	r25, r21
 5fa:	18 f0       	brcs	.+6      	; 0x602 <__addsf3x+0x18>
 5fc:	71 f4       	brne	.+28     	; 0x61a <__addsf3x+0x30>
 5fe:	9e f5       	brtc	.+102    	; 0x666 <__addsf3x+0x7c>
 600:	67 c1       	rjmp	.+718    	; 0x8d0 <__fp_zero>
 602:	0e f4       	brtc	.+2      	; 0x606 <__addsf3x+0x1c>
 604:	e0 95       	com	r30
 606:	0b 2e       	mov	r0, r27
 608:	ba 2f       	mov	r27, r26
 60a:	a0 2d       	mov	r26, r0
 60c:	0b 01       	movw	r0, r22
 60e:	b9 01       	movw	r22, r18
 610:	90 01       	movw	r18, r0
 612:	0c 01       	movw	r0, r24
 614:	ca 01       	movw	r24, r20
 616:	a0 01       	movw	r20, r0
 618:	11 24       	eor	r1, r1
 61a:	ff 27       	eor	r31, r31
 61c:	59 1b       	sub	r21, r25
 61e:	99 f0       	breq	.+38     	; 0x646 <__addsf3x+0x5c>
 620:	59 3f       	cpi	r21, 0xF9	; 249
 622:	50 f4       	brcc	.+20     	; 0x638 <__addsf3x+0x4e>
 624:	50 3e       	cpi	r21, 0xE0	; 224
 626:	68 f1       	brcs	.+90     	; 0x682 <__addsf3x+0x98>
 628:	1a 16       	cp	r1, r26
 62a:	f0 40       	sbci	r31, 0x00	; 0
 62c:	a2 2f       	mov	r26, r18
 62e:	23 2f       	mov	r18, r19
 630:	34 2f       	mov	r19, r20
 632:	44 27       	eor	r20, r20
 634:	58 5f       	subi	r21, 0xF8	; 248
 636:	f3 cf       	rjmp	.-26     	; 0x61e <__addsf3x+0x34>
 638:	46 95       	lsr	r20
 63a:	37 95       	ror	r19
 63c:	27 95       	ror	r18
 63e:	a7 95       	ror	r26
 640:	f0 40       	sbci	r31, 0x00	; 0
 642:	53 95       	inc	r21
 644:	c9 f7       	brne	.-14     	; 0x638 <__addsf3x+0x4e>
 646:	7e f4       	brtc	.+30     	; 0x666 <__addsf3x+0x7c>
 648:	1f 16       	cp	r1, r31
 64a:	ba 0b       	sbc	r27, r26
 64c:	62 0b       	sbc	r22, r18
 64e:	73 0b       	sbc	r23, r19
 650:	84 0b       	sbc	r24, r20
 652:	ba f0       	brmi	.+46     	; 0x682 <__addsf3x+0x98>
 654:	91 50       	subi	r25, 0x01	; 1
 656:	a1 f0       	breq	.+40     	; 0x680 <__addsf3x+0x96>
 658:	ff 0f       	add	r31, r31
 65a:	bb 1f       	adc	r27, r27
 65c:	66 1f       	adc	r22, r22
 65e:	77 1f       	adc	r23, r23
 660:	88 1f       	adc	r24, r24
 662:	c2 f7       	brpl	.-16     	; 0x654 <__addsf3x+0x6a>
 664:	0e c0       	rjmp	.+28     	; 0x682 <__addsf3x+0x98>
 666:	ba 0f       	add	r27, r26
 668:	62 1f       	adc	r22, r18
 66a:	73 1f       	adc	r23, r19
 66c:	84 1f       	adc	r24, r20
 66e:	48 f4       	brcc	.+18     	; 0x682 <__addsf3x+0x98>
 670:	87 95       	ror	r24
 672:	77 95       	ror	r23
 674:	67 95       	ror	r22
 676:	b7 95       	ror	r27
 678:	f7 95       	ror	r31
 67a:	9e 3f       	cpi	r25, 0xFE	; 254
 67c:	08 f0       	brcs	.+2      	; 0x680 <__addsf3x+0x96>
 67e:	b3 cf       	rjmp	.-154    	; 0x5e6 <__addsf3+0x1e>
 680:	93 95       	inc	r25
 682:	88 0f       	add	r24, r24
 684:	08 f0       	brcs	.+2      	; 0x688 <__addsf3x+0x9e>
 686:	99 27       	eor	r25, r25
 688:	ee 0f       	add	r30, r30
 68a:	97 95       	ror	r25
 68c:	87 95       	ror	r24
 68e:	08 95       	ret

00000690 <__divsf3>:
 690:	0c d0       	rcall	.+24     	; 0x6aa <__divsf3x>
 692:	eb c0       	rjmp	.+470    	; 0x86a <__fp_round>
 694:	e3 d0       	rcall	.+454    	; 0x85c <__fp_pscB>
 696:	40 f0       	brcs	.+16     	; 0x6a8 <__divsf3+0x18>
 698:	da d0       	rcall	.+436    	; 0x84e <__fp_pscA>
 69a:	30 f0       	brcs	.+12     	; 0x6a8 <__divsf3+0x18>
 69c:	21 f4       	brne	.+8      	; 0x6a6 <__divsf3+0x16>
 69e:	5f 3f       	cpi	r21, 0xFF	; 255
 6a0:	19 f0       	breq	.+6      	; 0x6a8 <__divsf3+0x18>
 6a2:	cc c0       	rjmp	.+408    	; 0x83c <__fp_inf>
 6a4:	51 11       	cpse	r21, r1
 6a6:	15 c1       	rjmp	.+554    	; 0x8d2 <__fp_szero>
 6a8:	cf c0       	rjmp	.+414    	; 0x848 <__fp_nan>

000006aa <__divsf3x>:
 6aa:	f0 d0       	rcall	.+480    	; 0x88c <__fp_split3>
 6ac:	98 f3       	brcs	.-26     	; 0x694 <__divsf3+0x4>

000006ae <__divsf3_pse>:
 6ae:	99 23       	and	r25, r25
 6b0:	c9 f3       	breq	.-14     	; 0x6a4 <__divsf3+0x14>
 6b2:	55 23       	and	r21, r21
 6b4:	b1 f3       	breq	.-20     	; 0x6a2 <__divsf3+0x12>
 6b6:	95 1b       	sub	r25, r21
 6b8:	55 0b       	sbc	r21, r21
 6ba:	bb 27       	eor	r27, r27
 6bc:	aa 27       	eor	r26, r26
 6be:	62 17       	cp	r22, r18
 6c0:	73 07       	cpc	r23, r19
 6c2:	84 07       	cpc	r24, r20
 6c4:	38 f0       	brcs	.+14     	; 0x6d4 <__divsf3_pse+0x26>
 6c6:	9f 5f       	subi	r25, 0xFF	; 255
 6c8:	5f 4f       	sbci	r21, 0xFF	; 255
 6ca:	22 0f       	add	r18, r18
 6cc:	33 1f       	adc	r19, r19
 6ce:	44 1f       	adc	r20, r20
 6d0:	aa 1f       	adc	r26, r26
 6d2:	a9 f3       	breq	.-22     	; 0x6be <__divsf3_pse+0x10>
 6d4:	33 d0       	rcall	.+102    	; 0x73c <__divsf3_pse+0x8e>
 6d6:	0e 2e       	mov	r0, r30
 6d8:	3a f0       	brmi	.+14     	; 0x6e8 <__divsf3_pse+0x3a>
 6da:	e0 e8       	ldi	r30, 0x80	; 128
 6dc:	30 d0       	rcall	.+96     	; 0x73e <__divsf3_pse+0x90>
 6de:	91 50       	subi	r25, 0x01	; 1
 6e0:	50 40       	sbci	r21, 0x00	; 0
 6e2:	e6 95       	lsr	r30
 6e4:	00 1c       	adc	r0, r0
 6e6:	ca f7       	brpl	.-14     	; 0x6da <__divsf3_pse+0x2c>
 6e8:	29 d0       	rcall	.+82     	; 0x73c <__divsf3_pse+0x8e>
 6ea:	fe 2f       	mov	r31, r30
 6ec:	27 d0       	rcall	.+78     	; 0x73c <__divsf3_pse+0x8e>
 6ee:	66 0f       	add	r22, r22
 6f0:	77 1f       	adc	r23, r23
 6f2:	88 1f       	adc	r24, r24
 6f4:	bb 1f       	adc	r27, r27
 6f6:	26 17       	cp	r18, r22
 6f8:	37 07       	cpc	r19, r23
 6fa:	48 07       	cpc	r20, r24
 6fc:	ab 07       	cpc	r26, r27
 6fe:	b0 e8       	ldi	r27, 0x80	; 128
 700:	09 f0       	breq	.+2      	; 0x704 <__divsf3_pse+0x56>
 702:	bb 0b       	sbc	r27, r27
 704:	80 2d       	mov	r24, r0
 706:	bf 01       	movw	r22, r30
 708:	ff 27       	eor	r31, r31
 70a:	93 58       	subi	r25, 0x83	; 131
 70c:	5f 4f       	sbci	r21, 0xFF	; 255
 70e:	2a f0       	brmi	.+10     	; 0x71a <__divsf3_pse+0x6c>
 710:	9e 3f       	cpi	r25, 0xFE	; 254
 712:	51 05       	cpc	r21, r1
 714:	68 f0       	brcs	.+26     	; 0x730 <__divsf3_pse+0x82>
 716:	92 c0       	rjmp	.+292    	; 0x83c <__fp_inf>
 718:	dc c0       	rjmp	.+440    	; 0x8d2 <__fp_szero>
 71a:	5f 3f       	cpi	r21, 0xFF	; 255
 71c:	ec f3       	brlt	.-6      	; 0x718 <__divsf3_pse+0x6a>
 71e:	98 3e       	cpi	r25, 0xE8	; 232
 720:	dc f3       	brlt	.-10     	; 0x718 <__divsf3_pse+0x6a>
 722:	86 95       	lsr	r24
 724:	77 95       	ror	r23
 726:	67 95       	ror	r22
 728:	b7 95       	ror	r27
 72a:	f7 95       	ror	r31
 72c:	9f 5f       	subi	r25, 0xFF	; 255
 72e:	c9 f7       	brne	.-14     	; 0x722 <__divsf3_pse+0x74>
 730:	88 0f       	add	r24, r24
 732:	91 1d       	adc	r25, r1
 734:	96 95       	lsr	r25
 736:	87 95       	ror	r24
 738:	97 f9       	bld	r25, 7
 73a:	08 95       	ret
 73c:	e1 e0       	ldi	r30, 0x01	; 1
 73e:	66 0f       	add	r22, r22
 740:	77 1f       	adc	r23, r23
 742:	88 1f       	adc	r24, r24
 744:	bb 1f       	adc	r27, r27
 746:	62 17       	cp	r22, r18
 748:	73 07       	cpc	r23, r19
 74a:	84 07       	cpc	r24, r20
 74c:	ba 07       	cpc	r27, r26
 74e:	20 f0       	brcs	.+8      	; 0x758 <__divsf3_pse+0xaa>
 750:	62 1b       	sub	r22, r18
 752:	73 0b       	sbc	r23, r19
 754:	84 0b       	sbc	r24, r20
 756:	ba 0b       	sbc	r27, r26
 758:	ee 1f       	adc	r30, r30
 75a:	88 f7       	brcc	.-30     	; 0x73e <__divsf3_pse+0x90>
 75c:	e0 95       	com	r30
 75e:	08 95       	ret

00000760 <__fixsfsi>:
 760:	04 d0       	rcall	.+8      	; 0x76a <__fixunssfsi>
 762:	68 94       	set
 764:	b1 11       	cpse	r27, r1
 766:	b5 c0       	rjmp	.+362    	; 0x8d2 <__fp_szero>
 768:	08 95       	ret

0000076a <__fixunssfsi>:
 76a:	98 d0       	rcall	.+304    	; 0x89c <__fp_splitA>
 76c:	88 f0       	brcs	.+34     	; 0x790 <__fixunssfsi+0x26>
 76e:	9f 57       	subi	r25, 0x7F	; 127
 770:	90 f0       	brcs	.+36     	; 0x796 <__fixunssfsi+0x2c>
 772:	b9 2f       	mov	r27, r25
 774:	99 27       	eor	r25, r25
 776:	b7 51       	subi	r27, 0x17	; 23
 778:	a0 f0       	brcs	.+40     	; 0x7a2 <__fixunssfsi+0x38>
 77a:	d1 f0       	breq	.+52     	; 0x7b0 <__fixunssfsi+0x46>
 77c:	66 0f       	add	r22, r22
 77e:	77 1f       	adc	r23, r23
 780:	88 1f       	adc	r24, r24
 782:	99 1f       	adc	r25, r25
 784:	1a f0       	brmi	.+6      	; 0x78c <__fixunssfsi+0x22>
 786:	ba 95       	dec	r27
 788:	c9 f7       	brne	.-14     	; 0x77c <__fixunssfsi+0x12>
 78a:	12 c0       	rjmp	.+36     	; 0x7b0 <__fixunssfsi+0x46>
 78c:	b1 30       	cpi	r27, 0x01	; 1
 78e:	81 f0       	breq	.+32     	; 0x7b0 <__fixunssfsi+0x46>
 790:	9f d0       	rcall	.+318    	; 0x8d0 <__fp_zero>
 792:	b1 e0       	ldi	r27, 0x01	; 1
 794:	08 95       	ret
 796:	9c c0       	rjmp	.+312    	; 0x8d0 <__fp_zero>
 798:	67 2f       	mov	r22, r23
 79a:	78 2f       	mov	r23, r24
 79c:	88 27       	eor	r24, r24
 79e:	b8 5f       	subi	r27, 0xF8	; 248
 7a0:	39 f0       	breq	.+14     	; 0x7b0 <__fixunssfsi+0x46>
 7a2:	b9 3f       	cpi	r27, 0xF9	; 249
 7a4:	cc f3       	brlt	.-14     	; 0x798 <__fixunssfsi+0x2e>
 7a6:	86 95       	lsr	r24
 7a8:	77 95       	ror	r23
 7aa:	67 95       	ror	r22
 7ac:	b3 95       	inc	r27
 7ae:	d9 f7       	brne	.-10     	; 0x7a6 <__fixunssfsi+0x3c>
 7b0:	3e f4       	brtc	.+14     	; 0x7c0 <__fixunssfsi+0x56>
 7b2:	90 95       	com	r25
 7b4:	80 95       	com	r24
 7b6:	70 95       	com	r23
 7b8:	61 95       	neg	r22
 7ba:	7f 4f       	sbci	r23, 0xFF	; 255
 7bc:	8f 4f       	sbci	r24, 0xFF	; 255
 7be:	9f 4f       	sbci	r25, 0xFF	; 255
 7c0:	08 95       	ret

000007c2 <__floatunsisf>:
 7c2:	e8 94       	clt
 7c4:	09 c0       	rjmp	.+18     	; 0x7d8 <__floatsisf+0x12>

000007c6 <__floatsisf>:
 7c6:	97 fb       	bst	r25, 7
 7c8:	3e f4       	brtc	.+14     	; 0x7d8 <__floatsisf+0x12>
 7ca:	90 95       	com	r25
 7cc:	80 95       	com	r24
 7ce:	70 95       	com	r23
 7d0:	61 95       	neg	r22
 7d2:	7f 4f       	sbci	r23, 0xFF	; 255
 7d4:	8f 4f       	sbci	r24, 0xFF	; 255
 7d6:	9f 4f       	sbci	r25, 0xFF	; 255
 7d8:	99 23       	and	r25, r25
 7da:	a9 f0       	breq	.+42     	; 0x806 <__floatsisf+0x40>
 7dc:	f9 2f       	mov	r31, r25
 7de:	96 e9       	ldi	r25, 0x96	; 150
 7e0:	bb 27       	eor	r27, r27
 7e2:	93 95       	inc	r25
 7e4:	f6 95       	lsr	r31
 7e6:	87 95       	ror	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	b7 95       	ror	r27
 7ee:	f1 11       	cpse	r31, r1
 7f0:	f8 cf       	rjmp	.-16     	; 0x7e2 <__floatsisf+0x1c>
 7f2:	fa f4       	brpl	.+62     	; 0x832 <__floatsisf+0x6c>
 7f4:	bb 0f       	add	r27, r27
 7f6:	11 f4       	brne	.+4      	; 0x7fc <__floatsisf+0x36>
 7f8:	60 ff       	sbrs	r22, 0
 7fa:	1b c0       	rjmp	.+54     	; 0x832 <__floatsisf+0x6c>
 7fc:	6f 5f       	subi	r22, 0xFF	; 255
 7fe:	7f 4f       	sbci	r23, 0xFF	; 255
 800:	8f 4f       	sbci	r24, 0xFF	; 255
 802:	9f 4f       	sbci	r25, 0xFF	; 255
 804:	16 c0       	rjmp	.+44     	; 0x832 <__floatsisf+0x6c>
 806:	88 23       	and	r24, r24
 808:	11 f0       	breq	.+4      	; 0x80e <__floatsisf+0x48>
 80a:	96 e9       	ldi	r25, 0x96	; 150
 80c:	11 c0       	rjmp	.+34     	; 0x830 <__floatsisf+0x6a>
 80e:	77 23       	and	r23, r23
 810:	21 f0       	breq	.+8      	; 0x81a <__floatsisf+0x54>
 812:	9e e8       	ldi	r25, 0x8E	; 142
 814:	87 2f       	mov	r24, r23
 816:	76 2f       	mov	r23, r22
 818:	05 c0       	rjmp	.+10     	; 0x824 <__floatsisf+0x5e>
 81a:	66 23       	and	r22, r22
 81c:	71 f0       	breq	.+28     	; 0x83a <__floatsisf+0x74>
 81e:	96 e8       	ldi	r25, 0x86	; 134
 820:	86 2f       	mov	r24, r22
 822:	70 e0       	ldi	r23, 0x00	; 0
 824:	60 e0       	ldi	r22, 0x00	; 0
 826:	2a f0       	brmi	.+10     	; 0x832 <__floatsisf+0x6c>
 828:	9a 95       	dec	r25
 82a:	66 0f       	add	r22, r22
 82c:	77 1f       	adc	r23, r23
 82e:	88 1f       	adc	r24, r24
 830:	da f7       	brpl	.-10     	; 0x828 <__floatsisf+0x62>
 832:	88 0f       	add	r24, r24
 834:	96 95       	lsr	r25
 836:	87 95       	ror	r24
 838:	97 f9       	bld	r25, 7
 83a:	08 95       	ret

0000083c <__fp_inf>:
 83c:	97 f9       	bld	r25, 7
 83e:	9f 67       	ori	r25, 0x7F	; 127
 840:	80 e8       	ldi	r24, 0x80	; 128
 842:	70 e0       	ldi	r23, 0x00	; 0
 844:	60 e0       	ldi	r22, 0x00	; 0
 846:	08 95       	ret

00000848 <__fp_nan>:
 848:	9f ef       	ldi	r25, 0xFF	; 255
 84a:	80 ec       	ldi	r24, 0xC0	; 192
 84c:	08 95       	ret

0000084e <__fp_pscA>:
 84e:	00 24       	eor	r0, r0
 850:	0a 94       	dec	r0
 852:	16 16       	cp	r1, r22
 854:	17 06       	cpc	r1, r23
 856:	18 06       	cpc	r1, r24
 858:	09 06       	cpc	r0, r25
 85a:	08 95       	ret

0000085c <__fp_pscB>:
 85c:	00 24       	eor	r0, r0
 85e:	0a 94       	dec	r0
 860:	12 16       	cp	r1, r18
 862:	13 06       	cpc	r1, r19
 864:	14 06       	cpc	r1, r20
 866:	05 06       	cpc	r0, r21
 868:	08 95       	ret

0000086a <__fp_round>:
 86a:	09 2e       	mov	r0, r25
 86c:	03 94       	inc	r0
 86e:	00 0c       	add	r0, r0
 870:	11 f4       	brne	.+4      	; 0x876 <__fp_round+0xc>
 872:	88 23       	and	r24, r24
 874:	52 f0       	brmi	.+20     	; 0x88a <__fp_round+0x20>
 876:	bb 0f       	add	r27, r27
 878:	40 f4       	brcc	.+16     	; 0x88a <__fp_round+0x20>
 87a:	bf 2b       	or	r27, r31
 87c:	11 f4       	brne	.+4      	; 0x882 <__fp_round+0x18>
 87e:	60 ff       	sbrs	r22, 0
 880:	04 c0       	rjmp	.+8      	; 0x88a <__fp_round+0x20>
 882:	6f 5f       	subi	r22, 0xFF	; 255
 884:	7f 4f       	sbci	r23, 0xFF	; 255
 886:	8f 4f       	sbci	r24, 0xFF	; 255
 888:	9f 4f       	sbci	r25, 0xFF	; 255
 88a:	08 95       	ret

0000088c <__fp_split3>:
 88c:	57 fd       	sbrc	r21, 7
 88e:	90 58       	subi	r25, 0x80	; 128
 890:	44 0f       	add	r20, r20
 892:	55 1f       	adc	r21, r21
 894:	59 f0       	breq	.+22     	; 0x8ac <__fp_splitA+0x10>
 896:	5f 3f       	cpi	r21, 0xFF	; 255
 898:	71 f0       	breq	.+28     	; 0x8b6 <__fp_splitA+0x1a>
 89a:	47 95       	ror	r20

0000089c <__fp_splitA>:
 89c:	88 0f       	add	r24, r24
 89e:	97 fb       	bst	r25, 7
 8a0:	99 1f       	adc	r25, r25
 8a2:	61 f0       	breq	.+24     	; 0x8bc <__fp_splitA+0x20>
 8a4:	9f 3f       	cpi	r25, 0xFF	; 255
 8a6:	79 f0       	breq	.+30     	; 0x8c6 <__fp_splitA+0x2a>
 8a8:	87 95       	ror	r24
 8aa:	08 95       	ret
 8ac:	12 16       	cp	r1, r18
 8ae:	13 06       	cpc	r1, r19
 8b0:	14 06       	cpc	r1, r20
 8b2:	55 1f       	adc	r21, r21
 8b4:	f2 cf       	rjmp	.-28     	; 0x89a <__fp_split3+0xe>
 8b6:	46 95       	lsr	r20
 8b8:	f1 df       	rcall	.-30     	; 0x89c <__fp_splitA>
 8ba:	08 c0       	rjmp	.+16     	; 0x8cc <__fp_splitA+0x30>
 8bc:	16 16       	cp	r1, r22
 8be:	17 06       	cpc	r1, r23
 8c0:	18 06       	cpc	r1, r24
 8c2:	99 1f       	adc	r25, r25
 8c4:	f1 cf       	rjmp	.-30     	; 0x8a8 <__fp_splitA+0xc>
 8c6:	86 95       	lsr	r24
 8c8:	71 05       	cpc	r23, r1
 8ca:	61 05       	cpc	r22, r1
 8cc:	08 94       	sec
 8ce:	08 95       	ret

000008d0 <__fp_zero>:
 8d0:	e8 94       	clt

000008d2 <__fp_szero>:
 8d2:	bb 27       	eor	r27, r27
 8d4:	66 27       	eor	r22, r22
 8d6:	77 27       	eor	r23, r23
 8d8:	cb 01       	movw	r24, r22
 8da:	97 f9       	bld	r25, 7
 8dc:	08 95       	ret

000008de <__gesf2>:
 8de:	2e d1       	rcall	.+604    	; 0xb3c <__fp_cmp>
 8e0:	08 f4       	brcc	.+2      	; 0x8e4 <__gesf2+0x6>
 8e2:	8f ef       	ldi	r24, 0xFF	; 255
 8e4:	08 95       	ret

000008e6 <log10>:
 8e6:	0a d0       	rcall	.+20     	; 0x8fc <log>
 8e8:	29 ed       	ldi	r18, 0xD9	; 217
 8ea:	3b e5       	ldi	r19, 0x5B	; 91
 8ec:	4e ed       	ldi	r20, 0xDE	; 222
 8ee:	5e e3       	ldi	r21, 0x3E	; 62
 8f0:	45 c0       	rjmp	.+138    	; 0x97c <__mulsf3>
 8f2:	0e f0       	brts	.+2      	; 0x8f6 <log10+0x10>
 8f4:	47 c1       	rjmp	.+654    	; 0xb84 <__fp_mpack>
 8f6:	a8 cf       	rjmp	.-176    	; 0x848 <__fp_nan>
 8f8:	68 94       	set
 8fa:	a0 cf       	rjmp	.-192    	; 0x83c <__fp_inf>

000008fc <log>:
 8fc:	cf df       	rcall	.-98     	; 0x89c <__fp_splitA>
 8fe:	c8 f3       	brcs	.-14     	; 0x8f2 <log10+0xc>
 900:	99 23       	and	r25, r25
 902:	d1 f3       	breq	.-12     	; 0x8f8 <log10+0x12>
 904:	c6 f3       	brts	.-16     	; 0x8f6 <log10+0x10>
 906:	df 93       	push	r29
 908:	cf 93       	push	r28
 90a:	1f 93       	push	r17
 90c:	0f 93       	push	r16
 90e:	ff 92       	push	r15
 910:	c9 2f       	mov	r28, r25
 912:	dd 27       	eor	r29, r29
 914:	88 23       	and	r24, r24
 916:	2a f0       	brmi	.+10     	; 0x922 <log+0x26>
 918:	21 97       	sbiw	r28, 0x01	; 1
 91a:	66 0f       	add	r22, r22
 91c:	77 1f       	adc	r23, r23
 91e:	88 1f       	adc	r24, r24
 920:	da f7       	brpl	.-10     	; 0x918 <log+0x1c>
 922:	20 e0       	ldi	r18, 0x00	; 0
 924:	30 e0       	ldi	r19, 0x00	; 0
 926:	40 e8       	ldi	r20, 0x80	; 128
 928:	5f eb       	ldi	r21, 0xBF	; 191
 92a:	9f e3       	ldi	r25, 0x3F	; 63
 92c:	88 39       	cpi	r24, 0x98	; 152
 92e:	20 f0       	brcs	.+8      	; 0x938 <log+0x3c>
 930:	80 3e       	cpi	r24, 0xE0	; 224
 932:	30 f0       	brcs	.+12     	; 0x940 <log+0x44>
 934:	21 96       	adiw	r28, 0x01	; 1
 936:	8f 77       	andi	r24, 0x7F	; 127
 938:	47 de       	rcall	.-882    	; 0x5c8 <__addsf3>
 93a:	ec e8       	ldi	r30, 0x8C	; 140
 93c:	f0 e0       	ldi	r31, 0x00	; 0
 93e:	03 c0       	rjmp	.+6      	; 0x946 <log+0x4a>
 940:	43 de       	rcall	.-890    	; 0x5c8 <__addsf3>
 942:	e9 eb       	ldi	r30, 0xB9	; 185
 944:	f0 e0       	ldi	r31, 0x00	; 0
 946:	2c d1       	rcall	.+600    	; 0xba0 <__fp_powser>
 948:	8b 01       	movw	r16, r22
 94a:	be 01       	movw	r22, r28
 94c:	ec 01       	movw	r28, r24
 94e:	fb 2e       	mov	r15, r27
 950:	6f 57       	subi	r22, 0x7F	; 127
 952:	71 09       	sbc	r23, r1
 954:	75 95       	asr	r23
 956:	77 1f       	adc	r23, r23
 958:	88 0b       	sbc	r24, r24
 95a:	99 0b       	sbc	r25, r25
 95c:	34 df       	rcall	.-408    	; 0x7c6 <__floatsisf>
 95e:	28 e1       	ldi	r18, 0x18	; 24
 960:	32 e7       	ldi	r19, 0x72	; 114
 962:	41 e3       	ldi	r20, 0x31	; 49
 964:	5f e3       	ldi	r21, 0x3F	; 63
 966:	16 d0       	rcall	.+44     	; 0x994 <__mulsf3x>
 968:	af 2d       	mov	r26, r15
 96a:	98 01       	movw	r18, r16
 96c:	ae 01       	movw	r20, r28
 96e:	ff 90       	pop	r15
 970:	0f 91       	pop	r16
 972:	1f 91       	pop	r17
 974:	cf 91       	pop	r28
 976:	df 91       	pop	r29
 978:	38 de       	rcall	.-912    	; 0x5ea <__addsf3x>
 97a:	77 cf       	rjmp	.-274    	; 0x86a <__fp_round>

0000097c <__mulsf3>:
 97c:	0b d0       	rcall	.+22     	; 0x994 <__mulsf3x>
 97e:	75 cf       	rjmp	.-278    	; 0x86a <__fp_round>
 980:	66 df       	rcall	.-308    	; 0x84e <__fp_pscA>
 982:	28 f0       	brcs	.+10     	; 0x98e <__mulsf3+0x12>
 984:	6b df       	rcall	.-298    	; 0x85c <__fp_pscB>
 986:	18 f0       	brcs	.+6      	; 0x98e <__mulsf3+0x12>
 988:	95 23       	and	r25, r21
 98a:	09 f0       	breq	.+2      	; 0x98e <__mulsf3+0x12>
 98c:	57 cf       	rjmp	.-338    	; 0x83c <__fp_inf>
 98e:	5c cf       	rjmp	.-328    	; 0x848 <__fp_nan>
 990:	11 24       	eor	r1, r1
 992:	9f cf       	rjmp	.-194    	; 0x8d2 <__fp_szero>

00000994 <__mulsf3x>:
 994:	7b df       	rcall	.-266    	; 0x88c <__fp_split3>
 996:	a0 f3       	brcs	.-24     	; 0x980 <__mulsf3+0x4>

00000998 <__mulsf3_pse>:
 998:	95 9f       	mul	r25, r21
 99a:	d1 f3       	breq	.-12     	; 0x990 <__mulsf3+0x14>
 99c:	95 0f       	add	r25, r21
 99e:	50 e0       	ldi	r21, 0x00	; 0
 9a0:	55 1f       	adc	r21, r21
 9a2:	62 9f       	mul	r22, r18
 9a4:	f0 01       	movw	r30, r0
 9a6:	72 9f       	mul	r23, r18
 9a8:	bb 27       	eor	r27, r27
 9aa:	f0 0d       	add	r31, r0
 9ac:	b1 1d       	adc	r27, r1
 9ae:	63 9f       	mul	r22, r19
 9b0:	aa 27       	eor	r26, r26
 9b2:	f0 0d       	add	r31, r0
 9b4:	b1 1d       	adc	r27, r1
 9b6:	aa 1f       	adc	r26, r26
 9b8:	64 9f       	mul	r22, r20
 9ba:	66 27       	eor	r22, r22
 9bc:	b0 0d       	add	r27, r0
 9be:	a1 1d       	adc	r26, r1
 9c0:	66 1f       	adc	r22, r22
 9c2:	82 9f       	mul	r24, r18
 9c4:	22 27       	eor	r18, r18
 9c6:	b0 0d       	add	r27, r0
 9c8:	a1 1d       	adc	r26, r1
 9ca:	62 1f       	adc	r22, r18
 9cc:	73 9f       	mul	r23, r19
 9ce:	b0 0d       	add	r27, r0
 9d0:	a1 1d       	adc	r26, r1
 9d2:	62 1f       	adc	r22, r18
 9d4:	83 9f       	mul	r24, r19
 9d6:	a0 0d       	add	r26, r0
 9d8:	61 1d       	adc	r22, r1
 9da:	22 1f       	adc	r18, r18
 9dc:	74 9f       	mul	r23, r20
 9de:	33 27       	eor	r19, r19
 9e0:	a0 0d       	add	r26, r0
 9e2:	61 1d       	adc	r22, r1
 9e4:	23 1f       	adc	r18, r19
 9e6:	84 9f       	mul	r24, r20
 9e8:	60 0d       	add	r22, r0
 9ea:	21 1d       	adc	r18, r1
 9ec:	82 2f       	mov	r24, r18
 9ee:	76 2f       	mov	r23, r22
 9f0:	6a 2f       	mov	r22, r26
 9f2:	11 24       	eor	r1, r1
 9f4:	9f 57       	subi	r25, 0x7F	; 127
 9f6:	50 40       	sbci	r21, 0x00	; 0
 9f8:	8a f0       	brmi	.+34     	; 0xa1c <__mulsf3_pse+0x84>
 9fa:	e1 f0       	breq	.+56     	; 0xa34 <__mulsf3_pse+0x9c>
 9fc:	88 23       	and	r24, r24
 9fe:	4a f0       	brmi	.+18     	; 0xa12 <__mulsf3_pse+0x7a>
 a00:	ee 0f       	add	r30, r30
 a02:	ff 1f       	adc	r31, r31
 a04:	bb 1f       	adc	r27, r27
 a06:	66 1f       	adc	r22, r22
 a08:	77 1f       	adc	r23, r23
 a0a:	88 1f       	adc	r24, r24
 a0c:	91 50       	subi	r25, 0x01	; 1
 a0e:	50 40       	sbci	r21, 0x00	; 0
 a10:	a9 f7       	brne	.-22     	; 0x9fc <__mulsf3_pse+0x64>
 a12:	9e 3f       	cpi	r25, 0xFE	; 254
 a14:	51 05       	cpc	r21, r1
 a16:	70 f0       	brcs	.+28     	; 0xa34 <__mulsf3_pse+0x9c>
 a18:	11 cf       	rjmp	.-478    	; 0x83c <__fp_inf>
 a1a:	5b cf       	rjmp	.-330    	; 0x8d2 <__fp_szero>
 a1c:	5f 3f       	cpi	r21, 0xFF	; 255
 a1e:	ec f3       	brlt	.-6      	; 0xa1a <__mulsf3_pse+0x82>
 a20:	98 3e       	cpi	r25, 0xE8	; 232
 a22:	dc f3       	brlt	.-10     	; 0xa1a <__mulsf3_pse+0x82>
 a24:	86 95       	lsr	r24
 a26:	77 95       	ror	r23
 a28:	67 95       	ror	r22
 a2a:	b7 95       	ror	r27
 a2c:	f7 95       	ror	r31
 a2e:	e7 95       	ror	r30
 a30:	9f 5f       	subi	r25, 0xFF	; 255
 a32:	c1 f7       	brne	.-16     	; 0xa24 <__mulsf3_pse+0x8c>
 a34:	fe 2b       	or	r31, r30
 a36:	88 0f       	add	r24, r24
 a38:	91 1d       	adc	r25, r1
 a3a:	96 95       	lsr	r25
 a3c:	87 95       	ror	r24
 a3e:	97 f9       	bld	r25, 7
 a40:	08 95       	ret

00000a42 <pow>:
 a42:	fa 01       	movw	r30, r20
 a44:	ee 0f       	add	r30, r30
 a46:	ff 1f       	adc	r31, r31
 a48:	30 96       	adiw	r30, 0x00	; 0
 a4a:	21 05       	cpc	r18, r1
 a4c:	31 05       	cpc	r19, r1
 a4e:	99 f1       	breq	.+102    	; 0xab6 <pow+0x74>
 a50:	61 15       	cp	r22, r1
 a52:	71 05       	cpc	r23, r1
 a54:	61 f4       	brne	.+24     	; 0xa6e <pow+0x2c>
 a56:	80 38       	cpi	r24, 0x80	; 128
 a58:	bf e3       	ldi	r27, 0x3F	; 63
 a5a:	9b 07       	cpc	r25, r27
 a5c:	49 f1       	breq	.+82     	; 0xab0 <pow+0x6e>
 a5e:	68 94       	set
 a60:	90 38       	cpi	r25, 0x80	; 128
 a62:	81 05       	cpc	r24, r1
 a64:	61 f0       	breq	.+24     	; 0xa7e <pow+0x3c>
 a66:	80 38       	cpi	r24, 0x80	; 128
 a68:	bf ef       	ldi	r27, 0xFF	; 255
 a6a:	9b 07       	cpc	r25, r27
 a6c:	41 f0       	breq	.+16     	; 0xa7e <pow+0x3c>
 a6e:	99 23       	and	r25, r25
 a70:	42 f5       	brpl	.+80     	; 0xac2 <pow+0x80>
 a72:	ff 3f       	cpi	r31, 0xFF	; 255
 a74:	e1 05       	cpc	r30, r1
 a76:	31 05       	cpc	r19, r1
 a78:	21 05       	cpc	r18, r1
 a7a:	11 f1       	breq	.+68     	; 0xac0 <pow+0x7e>
 a7c:	e8 94       	clt
 a7e:	08 94       	sec
 a80:	e7 95       	ror	r30
 a82:	d9 01       	movw	r26, r18
 a84:	aa 23       	and	r26, r26
 a86:	29 f4       	brne	.+10     	; 0xa92 <pow+0x50>
 a88:	ab 2f       	mov	r26, r27
 a8a:	be 2f       	mov	r27, r30
 a8c:	f8 5f       	subi	r31, 0xF8	; 248
 a8e:	d0 f3       	brcs	.-12     	; 0xa84 <pow+0x42>
 a90:	10 c0       	rjmp	.+32     	; 0xab2 <pow+0x70>
 a92:	ff 5f       	subi	r31, 0xFF	; 255
 a94:	70 f4       	brcc	.+28     	; 0xab2 <pow+0x70>
 a96:	a6 95       	lsr	r26
 a98:	e0 f7       	brcc	.-8      	; 0xa92 <pow+0x50>
 a9a:	f7 39       	cpi	r31, 0x97	; 151
 a9c:	50 f0       	brcs	.+20     	; 0xab2 <pow+0x70>
 a9e:	19 f0       	breq	.+6      	; 0xaa6 <pow+0x64>
 aa0:	ff 3a       	cpi	r31, 0xAF	; 175
 aa2:	38 f4       	brcc	.+14     	; 0xab2 <pow+0x70>
 aa4:	9f 77       	andi	r25, 0x7F	; 127
 aa6:	9f 93       	push	r25
 aa8:	0c d0       	rcall	.+24     	; 0xac2 <pow+0x80>
 aaa:	0f 90       	pop	r0
 aac:	07 fc       	sbrc	r0, 7
 aae:	90 58       	subi	r25, 0x80	; 128
 ab0:	08 95       	ret
 ab2:	3e f0       	brts	.+14     	; 0xac2 <pow+0x80>
 ab4:	c9 ce       	rjmp	.-622    	; 0x848 <__fp_nan>
 ab6:	60 e0       	ldi	r22, 0x00	; 0
 ab8:	70 e0       	ldi	r23, 0x00	; 0
 aba:	80 e8       	ldi	r24, 0x80	; 128
 abc:	9f e3       	ldi	r25, 0x3F	; 63
 abe:	08 95       	ret
 ac0:	4f e7       	ldi	r20, 0x7F	; 127
 ac2:	9f 77       	andi	r25, 0x7F	; 127
 ac4:	5f 93       	push	r21
 ac6:	4f 93       	push	r20
 ac8:	3f 93       	push	r19
 aca:	2f 93       	push	r18
 acc:	17 df       	rcall	.-466    	; 0x8fc <log>
 ace:	2f 91       	pop	r18
 ad0:	3f 91       	pop	r19
 ad2:	4f 91       	pop	r20
 ad4:	5f 91       	pop	r21
 ad6:	52 df       	rcall	.-348    	; 0x97c <__mulsf3>
 ad8:	05 c0       	rjmp	.+10     	; 0xae4 <exp>
 ada:	19 f4       	brne	.+6      	; 0xae2 <pow+0xa0>
 adc:	0e f0       	brts	.+2      	; 0xae0 <pow+0x9e>
 ade:	ae ce       	rjmp	.-676    	; 0x83c <__fp_inf>
 ae0:	f7 ce       	rjmp	.-530    	; 0x8d0 <__fp_zero>
 ae2:	b2 ce       	rjmp	.-668    	; 0x848 <__fp_nan>

00000ae4 <exp>:
 ae4:	db de       	rcall	.-586    	; 0x89c <__fp_splitA>
 ae6:	c8 f3       	brcs	.-14     	; 0xada <pow+0x98>
 ae8:	96 38       	cpi	r25, 0x86	; 134
 aea:	c0 f7       	brcc	.-16     	; 0xadc <pow+0x9a>
 aec:	07 f8       	bld	r0, 7
 aee:	0f 92       	push	r0
 af0:	e8 94       	clt
 af2:	2b e3       	ldi	r18, 0x3B	; 59
 af4:	3a ea       	ldi	r19, 0xAA	; 170
 af6:	48 eb       	ldi	r20, 0xB8	; 184
 af8:	5f e7       	ldi	r21, 0x7F	; 127
 afa:	4e df       	rcall	.-356    	; 0x998 <__mulsf3_pse>
 afc:	0f 92       	push	r0
 afe:	0f 92       	push	r0
 b00:	0f 92       	push	r0
 b02:	4d b7       	in	r20, 0x3d	; 61
 b04:	5e b7       	in	r21, 0x3e	; 62
 b06:	0f 92       	push	r0
 b08:	ad d0       	rcall	.+346    	; 0xc64 <modf>
 b0a:	e6 ee       	ldi	r30, 0xE6	; 230
 b0c:	f0 e0       	ldi	r31, 0x00	; 0
 b0e:	48 d0       	rcall	.+144    	; 0xba0 <__fp_powser>
 b10:	4f 91       	pop	r20
 b12:	5f 91       	pop	r21
 b14:	ef 91       	pop	r30
 b16:	ff 91       	pop	r31
 b18:	e5 95       	asr	r30
 b1a:	ee 1f       	adc	r30, r30
 b1c:	ff 1f       	adc	r31, r31
 b1e:	49 f0       	breq	.+18     	; 0xb32 <exp+0x4e>
 b20:	fe 57       	subi	r31, 0x7E	; 126
 b22:	e0 68       	ori	r30, 0x80	; 128
 b24:	44 27       	eor	r20, r20
 b26:	ee 0f       	add	r30, r30
 b28:	44 1f       	adc	r20, r20
 b2a:	fa 95       	dec	r31
 b2c:	e1 f7       	brne	.-8      	; 0xb26 <exp+0x42>
 b2e:	41 95       	neg	r20
 b30:	55 0b       	sbc	r21, r21
 b32:	64 d0       	rcall	.+200    	; 0xbfc <ldexp>
 b34:	0f 90       	pop	r0
 b36:	07 fe       	sbrs	r0, 7
 b38:	58 c0       	rjmp	.+176    	; 0xbea <inverse>
 b3a:	08 95       	ret

00000b3c <__fp_cmp>:
 b3c:	99 0f       	add	r25, r25
 b3e:	00 08       	sbc	r0, r0
 b40:	55 0f       	add	r21, r21
 b42:	aa 0b       	sbc	r26, r26
 b44:	e0 e8       	ldi	r30, 0x80	; 128
 b46:	fe ef       	ldi	r31, 0xFE	; 254
 b48:	16 16       	cp	r1, r22
 b4a:	17 06       	cpc	r1, r23
 b4c:	e8 07       	cpc	r30, r24
 b4e:	f9 07       	cpc	r31, r25
 b50:	c0 f0       	brcs	.+48     	; 0xb82 <__fp_cmp+0x46>
 b52:	12 16       	cp	r1, r18
 b54:	13 06       	cpc	r1, r19
 b56:	e4 07       	cpc	r30, r20
 b58:	f5 07       	cpc	r31, r21
 b5a:	98 f0       	brcs	.+38     	; 0xb82 <__fp_cmp+0x46>
 b5c:	62 1b       	sub	r22, r18
 b5e:	73 0b       	sbc	r23, r19
 b60:	84 0b       	sbc	r24, r20
 b62:	95 0b       	sbc	r25, r21
 b64:	39 f4       	brne	.+14     	; 0xb74 <__fp_cmp+0x38>
 b66:	0a 26       	eor	r0, r26
 b68:	61 f0       	breq	.+24     	; 0xb82 <__fp_cmp+0x46>
 b6a:	23 2b       	or	r18, r19
 b6c:	24 2b       	or	r18, r20
 b6e:	25 2b       	or	r18, r21
 b70:	21 f4       	brne	.+8      	; 0xb7a <__fp_cmp+0x3e>
 b72:	08 95       	ret
 b74:	0a 26       	eor	r0, r26
 b76:	09 f4       	brne	.+2      	; 0xb7a <__fp_cmp+0x3e>
 b78:	a1 40       	sbci	r26, 0x01	; 1
 b7a:	a6 95       	lsr	r26
 b7c:	8f ef       	ldi	r24, 0xFF	; 255
 b7e:	81 1d       	adc	r24, r1
 b80:	81 1d       	adc	r24, r1
 b82:	08 95       	ret

00000b84 <__fp_mpack>:
 b84:	9f 3f       	cpi	r25, 0xFF	; 255
 b86:	31 f0       	breq	.+12     	; 0xb94 <__fp_mpack_finite+0xc>

00000b88 <__fp_mpack_finite>:
 b88:	91 50       	subi	r25, 0x01	; 1
 b8a:	20 f4       	brcc	.+8      	; 0xb94 <__fp_mpack_finite+0xc>
 b8c:	87 95       	ror	r24
 b8e:	77 95       	ror	r23
 b90:	67 95       	ror	r22
 b92:	b7 95       	ror	r27
 b94:	88 0f       	add	r24, r24
 b96:	91 1d       	adc	r25, r1
 b98:	96 95       	lsr	r25
 b9a:	87 95       	ror	r24
 b9c:	97 f9       	bld	r25, 7
 b9e:	08 95       	ret

00000ba0 <__fp_powser>:
 ba0:	df 93       	push	r29
 ba2:	cf 93       	push	r28
 ba4:	1f 93       	push	r17
 ba6:	0f 93       	push	r16
 ba8:	ff 92       	push	r15
 baa:	ef 92       	push	r14
 bac:	df 92       	push	r13
 bae:	7b 01       	movw	r14, r22
 bb0:	8c 01       	movw	r16, r24
 bb2:	68 94       	set
 bb4:	05 c0       	rjmp	.+10     	; 0xbc0 <__fp_powser+0x20>
 bb6:	da 2e       	mov	r13, r26
 bb8:	ef 01       	movw	r28, r30
 bba:	ec de       	rcall	.-552    	; 0x994 <__mulsf3x>
 bbc:	fe 01       	movw	r30, r28
 bbe:	e8 94       	clt
 bc0:	a5 91       	lpm	r26, Z+
 bc2:	25 91       	lpm	r18, Z+
 bc4:	35 91       	lpm	r19, Z+
 bc6:	45 91       	lpm	r20, Z+
 bc8:	55 91       	lpm	r21, Z+
 bca:	ae f3       	brts	.-22     	; 0xbb6 <__fp_powser+0x16>
 bcc:	ef 01       	movw	r28, r30
 bce:	0d dd       	rcall	.-1510   	; 0x5ea <__addsf3x>
 bd0:	fe 01       	movw	r30, r28
 bd2:	97 01       	movw	r18, r14
 bd4:	a8 01       	movw	r20, r16
 bd6:	da 94       	dec	r13
 bd8:	79 f7       	brne	.-34     	; 0xbb8 <__fp_powser+0x18>
 bda:	df 90       	pop	r13
 bdc:	ef 90       	pop	r14
 bde:	ff 90       	pop	r15
 be0:	0f 91       	pop	r16
 be2:	1f 91       	pop	r17
 be4:	cf 91       	pop	r28
 be6:	df 91       	pop	r29
 be8:	08 95       	ret

00000bea <inverse>:
 bea:	9b 01       	movw	r18, r22
 bec:	ac 01       	movw	r20, r24
 bee:	60 e0       	ldi	r22, 0x00	; 0
 bf0:	70 e0       	ldi	r23, 0x00	; 0
 bf2:	80 e8       	ldi	r24, 0x80	; 128
 bf4:	9f e3       	ldi	r25, 0x3F	; 63
 bf6:	4c cd       	rjmp	.-1384   	; 0x690 <__divsf3>
 bf8:	21 ce       	rjmp	.-958    	; 0x83c <__fp_inf>
 bfa:	c4 cf       	rjmp	.-120    	; 0xb84 <__fp_mpack>

00000bfc <ldexp>:
 bfc:	4f de       	rcall	.-866    	; 0x89c <__fp_splitA>
 bfe:	e8 f3       	brcs	.-6      	; 0xbfa <inverse+0x10>
 c00:	99 23       	and	r25, r25
 c02:	d9 f3       	breq	.-10     	; 0xbfa <inverse+0x10>
 c04:	94 0f       	add	r25, r20
 c06:	51 1d       	adc	r21, r1
 c08:	bb f3       	brvs	.-18     	; 0xbf8 <inverse+0xe>
 c0a:	91 50       	subi	r25, 0x01	; 1
 c0c:	50 40       	sbci	r21, 0x00	; 0
 c0e:	94 f0       	brlt	.+36     	; 0xc34 <ldexp+0x38>
 c10:	59 f0       	breq	.+22     	; 0xc28 <ldexp+0x2c>
 c12:	88 23       	and	r24, r24
 c14:	32 f0       	brmi	.+12     	; 0xc22 <ldexp+0x26>
 c16:	66 0f       	add	r22, r22
 c18:	77 1f       	adc	r23, r23
 c1a:	88 1f       	adc	r24, r24
 c1c:	91 50       	subi	r25, 0x01	; 1
 c1e:	50 40       	sbci	r21, 0x00	; 0
 c20:	c1 f7       	brne	.-16     	; 0xc12 <ldexp+0x16>
 c22:	9e 3f       	cpi	r25, 0xFE	; 254
 c24:	51 05       	cpc	r21, r1
 c26:	44 f7       	brge	.-48     	; 0xbf8 <inverse+0xe>
 c28:	88 0f       	add	r24, r24
 c2a:	91 1d       	adc	r25, r1
 c2c:	96 95       	lsr	r25
 c2e:	87 95       	ror	r24
 c30:	97 f9       	bld	r25, 7
 c32:	08 95       	ret
 c34:	5f 3f       	cpi	r21, 0xFF	; 255
 c36:	ac f0       	brlt	.+42     	; 0xc62 <ldexp+0x66>
 c38:	98 3e       	cpi	r25, 0xE8	; 232
 c3a:	9c f0       	brlt	.+38     	; 0xc62 <ldexp+0x66>
 c3c:	bb 27       	eor	r27, r27
 c3e:	86 95       	lsr	r24
 c40:	77 95       	ror	r23
 c42:	67 95       	ror	r22
 c44:	b7 95       	ror	r27
 c46:	08 f4       	brcc	.+2      	; 0xc4a <ldexp+0x4e>
 c48:	b1 60       	ori	r27, 0x01	; 1
 c4a:	93 95       	inc	r25
 c4c:	c1 f7       	brne	.-16     	; 0xc3e <ldexp+0x42>
 c4e:	bb 0f       	add	r27, r27
 c50:	58 f7       	brcc	.-42     	; 0xc28 <ldexp+0x2c>
 c52:	11 f4       	brne	.+4      	; 0xc58 <ldexp+0x5c>
 c54:	60 ff       	sbrs	r22, 0
 c56:	e8 cf       	rjmp	.-48     	; 0xc28 <ldexp+0x2c>
 c58:	6f 5f       	subi	r22, 0xFF	; 255
 c5a:	7f 4f       	sbci	r23, 0xFF	; 255
 c5c:	8f 4f       	sbci	r24, 0xFF	; 255
 c5e:	9f 4f       	sbci	r25, 0xFF	; 255
 c60:	e3 cf       	rjmp	.-58     	; 0xc28 <ldexp+0x2c>
 c62:	37 ce       	rjmp	.-914    	; 0x8d2 <__fp_szero>

00000c64 <modf>:
 c64:	fa 01       	movw	r30, r20
 c66:	dc 01       	movw	r26, r24
 c68:	aa 0f       	add	r26, r26
 c6a:	bb 1f       	adc	r27, r27
 c6c:	9b 01       	movw	r18, r22
 c6e:	ac 01       	movw	r20, r24
 c70:	bf 57       	subi	r27, 0x7F	; 127
 c72:	28 f4       	brcc	.+10     	; 0xc7e <modf+0x1a>
 c74:	22 27       	eor	r18, r18
 c76:	33 27       	eor	r19, r19
 c78:	44 27       	eor	r20, r20
 c7a:	50 78       	andi	r21, 0x80	; 128
 c7c:	1f c0       	rjmp	.+62     	; 0xcbc <modf+0x58>
 c7e:	b7 51       	subi	r27, 0x17	; 23
 c80:	88 f4       	brcc	.+34     	; 0xca4 <modf+0x40>
 c82:	ab 2f       	mov	r26, r27
 c84:	00 24       	eor	r0, r0
 c86:	46 95       	lsr	r20
 c88:	37 95       	ror	r19
 c8a:	27 95       	ror	r18
 c8c:	01 1c       	adc	r0, r1
 c8e:	a3 95       	inc	r26
 c90:	d2 f3       	brmi	.-12     	; 0xc86 <modf+0x22>
 c92:	00 20       	and	r0, r0
 c94:	69 f0       	breq	.+26     	; 0xcb0 <modf+0x4c>
 c96:	22 0f       	add	r18, r18
 c98:	33 1f       	adc	r19, r19
 c9a:	44 1f       	adc	r20, r20
 c9c:	b3 95       	inc	r27
 c9e:	da f3       	brmi	.-10     	; 0xc96 <modf+0x32>
 ca0:	0d d0       	rcall	.+26     	; 0xcbc <modf+0x58>
 ca2:	91 cc       	rjmp	.-1758   	; 0x5c6 <__subsf3>
 ca4:	61 30       	cpi	r22, 0x01	; 1
 ca6:	71 05       	cpc	r23, r1
 ca8:	a0 e8       	ldi	r26, 0x80	; 128
 caa:	8a 07       	cpc	r24, r26
 cac:	b9 46       	sbci	r27, 0x69	; 105
 cae:	30 f4       	brcc	.+12     	; 0xcbc <modf+0x58>
 cb0:	9b 01       	movw	r18, r22
 cb2:	ac 01       	movw	r20, r24
 cb4:	66 27       	eor	r22, r22
 cb6:	77 27       	eor	r23, r23
 cb8:	88 27       	eor	r24, r24
 cba:	90 78       	andi	r25, 0x80	; 128
 cbc:	30 96       	adiw	r30, 0x00	; 0
 cbe:	21 f0       	breq	.+8      	; 0xcc8 <modf+0x64>
 cc0:	20 83       	st	Z, r18
 cc2:	31 83       	std	Z+1, r19	; 0x01
 cc4:	42 83       	std	Z+2, r20	; 0x02
 cc6:	53 83       	std	Z+3, r21	; 0x03
 cc8:	08 95       	ret

00000cca <__divmodhi4>:
 cca:	97 fb       	bst	r25, 7
 ccc:	07 2e       	mov	r0, r23
 cce:	16 f4       	brtc	.+4      	; 0xcd4 <__divmodhi4+0xa>
 cd0:	00 94       	com	r0
 cd2:	06 d0       	rcall	.+12     	; 0xce0 <__divmodhi4_neg1>
 cd4:	77 fd       	sbrc	r23, 7
 cd6:	08 d0       	rcall	.+16     	; 0xce8 <__divmodhi4_neg2>
 cd8:	0b d0       	rcall	.+22     	; 0xcf0 <__udivmodhi4>
 cda:	07 fc       	sbrc	r0, 7
 cdc:	05 d0       	rcall	.+10     	; 0xce8 <__divmodhi4_neg2>
 cde:	3e f4       	brtc	.+14     	; 0xcee <__divmodhi4_exit>

00000ce0 <__divmodhi4_neg1>:
 ce0:	90 95       	com	r25
 ce2:	81 95       	neg	r24
 ce4:	9f 4f       	sbci	r25, 0xFF	; 255
 ce6:	08 95       	ret

00000ce8 <__divmodhi4_neg2>:
 ce8:	70 95       	com	r23
 cea:	61 95       	neg	r22
 cec:	7f 4f       	sbci	r23, 0xFF	; 255

00000cee <__divmodhi4_exit>:
 cee:	08 95       	ret

00000cf0 <__udivmodhi4>:
 cf0:	aa 1b       	sub	r26, r26
 cf2:	bb 1b       	sub	r27, r27
 cf4:	51 e1       	ldi	r21, 0x11	; 17
 cf6:	07 c0       	rjmp	.+14     	; 0xd06 <__udivmodhi4_ep>

00000cf8 <__udivmodhi4_loop>:
 cf8:	aa 1f       	adc	r26, r26
 cfa:	bb 1f       	adc	r27, r27
 cfc:	a6 17       	cp	r26, r22
 cfe:	b7 07       	cpc	r27, r23
 d00:	10 f0       	brcs	.+4      	; 0xd06 <__udivmodhi4_ep>
 d02:	a6 1b       	sub	r26, r22
 d04:	b7 0b       	sbc	r27, r23

00000d06 <__udivmodhi4_ep>:
 d06:	88 1f       	adc	r24, r24
 d08:	99 1f       	adc	r25, r25
 d0a:	5a 95       	dec	r21
 d0c:	a9 f7       	brne	.-22     	; 0xcf8 <__udivmodhi4_loop>
 d0e:	80 95       	com	r24
 d10:	90 95       	com	r25
 d12:	bc 01       	movw	r22, r24
 d14:	cd 01       	movw	r24, r26
 d16:	08 95       	ret

00000d18 <_exit>:
 d18:	f8 94       	cli

00000d1a <__stop_program>:
 d1a:	ff cf       	rjmp	.-2      	; 0xd1a <__stop_program>
